{
    "repo": "ashishchauhan0001/CampusNest",
    "total_files": 66,
    "files": [
        {
            "name": "auth.controller.js",
            "size": 2550,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/auth.controller.js",
            "path": "api/controllers/auth.controller.js",
            "content": "import User from '../models/user.model.js';\nimport bcryptjs from 'bcryptjs';\nimport { errorHandler } from '../utils/error.js';\nimport jwt from 'jsonwebtoken';\n\nexport const signup = async (req, res, next) => {\n  const { username, email, password } = req.body;\n  const hashedPassword = bcryptjs.hashSync(password, 10);\n  const newUser = new User({ username, email, password: hashedPassword });\n  try {\n    await newUser.save();\n    res.status(201).json('User created successfully!');\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const signin = async (req, res, next) => {\n  const { email, password } = req.body;\n  try {\n    const validUser = await User.findOne({ email });\n    if (!validUser) return next(errorHandler(404, 'User not found!'));\n    const validPassword = bcryptjs.compareSync(password, validUser.password);\n    if (!validPassword) return next(errorHandler(401, 'Wrong credentials!'));\n    const token = jwt.sign({ id: validUser._id }, process.env.JWT_SECRET);\n    const { password: pass, ...rest } = validUser._doc;\n    res\n      .cookie('access_token', token, { httpOnly: true })\n      .status(200)\n      .json(rest);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const google = async (req, res, next) => {\n  try {\n    const user = await User.findOne({ email: req.body.email });\n    if (user) {\n      const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET);\n      const { password: pass, ...rest } = user._doc;\n      res\n        .cookie('access_token', token, { httpOnly: true })\n        .status(200)\n        .json(rest);\n    } else {\n      const generatedPassword =\n        Math.random().toString(36).slice(-8) +\n        Math.random().toString(36).slice(-8);\n      const hashedPassword = bcryptjs.hashSync(generatedPassword, 10);\n      const newUser = new User({\n        username:\n          req.body.name.split(' ').join('').toLowerCase() +\n          Math.random().toString(36).slice(-4),\n        email: req.body.email,\n        password: hashedPassword,\n        avatar: req.body.photo,\n      });\n      await newUser.save();\n      const token = jwt.sign({ id: newUser._id }, process.env.JWT_SECRET);\n      const { password: pass, ...rest } = newUser._doc;\n      res\n        .cookie('access_token', token, { httpOnly: true })\n        .status(200)\n        .json(rest);\n    }\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const signOut = async (req, res, next) => {\n  try {\n    res.clearCookie('access_token');\n    res.status(200).json('User has been logged out!');\n  } catch (error) {\n    next(error);\n  }\n};\n"
        },
        {
            "name": "user.controller.js",
            "size": 2015,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/user.controller.js",
            "path": "api/controllers/user.controller.js",
            "content": "import bcryptjs from 'bcryptjs';\nimport User from '../models/user.model.js';\nimport { errorHandler } from '../utils/error.js';\nimport Listing from '../models/listing.model.js';\n\nexport const test = (req, res) => {\n  res.json({\n    message: 'Api route is working!',\n  });\n};\n\nexport const updateUser = async (req, res, next) => {\n  if (req.user.id !== req.params.id)\n    return next(errorHandler(401, 'You can only update your own account!'));\n  try {\n    if (req.body.password) {\n      req.body.password = bcryptjs.hashSync(req.body.password, 10);\n    }\n\n    const updatedUser = await User.findByIdAndUpdate(\n      req.params.id,\n      {\n        $set: {\n          username: req.body.username,\n          email: req.body.email,\n          password: req.body.password,\n          avatar: req.body.avatar,\n        },\n      },\n      { new: true }\n    );\n\n    const { password, ...rest } = updatedUser._doc;\n\n    res.status(200).json(rest);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const deleteUser = async (req, res, next) => {\n  if (req.user.id !== req.params.id)\n    return next(errorHandler(401, 'You can only delete your own account!'));\n  try {\n    await User.findByIdAndDelete(req.params.id);\n    res.clearCookie('access_token');\n    res.status(200).json('User has been deleted!');\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const getUserListings = async (req, res, next) => {\n  if (req.user.id === req.params.id) {\n    try {\n      const listings = await Listing.find({ userRef: req.params.id });\n      res.status(200).json(listings);\n    } catch (error) {\n      next(error);\n    }\n  } else {\n    return next(errorHandler(401, 'You can only view your own listings!'));\n  }\n};\n\nexport const getUser = async (req, res, next) => {\n  try {\n    \n    const user = await User.findById(req.params.id);\n  \n    if (!user) return next(errorHandler(404, 'User not found!'));\n  \n    const { password: pass, ...rest } = user._doc;\n  \n    res.status(200).json(rest);\n  } catch (error) {\n    next(error);\n  }\n};\n"
        },
        {
            "name": "vendor.controller.js",
            "size": 5473,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/vendor.controller.js",
            "path": "api/controllers/vendor.controller.js",
            "content": "import VendorListing from \"../models/vendor.model.js\";\n\nimport { errorHandler } from \"../utils/error.js\";\n\n// Add a new vendor listing\nexport const addVendor = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.create(req.body);\n    return res.status(201).json({\n      success: true,\n      message: \"Vendor added successfully\",\n      vendor,\n    });\n  } catch (error) {\n    console.error(\"Error adding vendor:\", error);\n    next(errorHandler(500, \"Failed to add vendor. Please try again later.\"));\n  }\n};\n\n// Delete a vendor listing\nexport const removeVendor = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.findById(req.params.id);\n    if (!vendor) {\n      return next(errorHandler(404, \"Vendor listing not found!\"));\n    }\n    await VendorListing.findByIdAndDelete(req.params.id);\n    res.status(200).json({ success: true, message: \"Vendor listing has been removed!\" });\n  } catch (error) {\n    next(errorHandler(500, \"Failed to remove vendor.\"));\n  }\n};\n\n// Update a vendor listing\nexport const updateVendor = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.findById(req.params.id);\n    if (!vendor) {\n      return next(errorHandler(404, \"Vendor listing not found!\"));\n    }\n    const updatedVendor = await VendorListing.findByIdAndUpdate(\n      req.params.id,\n      req.body,\n      { new: true }\n    );\n    res.status(200).json({ success: true, vendor: updatedVendor });\n  } catch (error) {\n    next(errorHandler(500, \"Failed to update vendor.\"));\n  }\n};\n\n// Get a single vendor listing\nexport const getVendor = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.find({\n      $or: [\n        { _id: req.params.id },\n        { vendorId: req.params.id },\n        { tenants: { $elemMatch: { _id: req.params.id } } }\n      ]\n    });\n\n    if (!vendor || vendor.length === 0) {\n      return next(errorHandler(404, \"Vendor listing not found!\"));\n    }\n\n    res.status(200).json(vendor);\n  } catch (error) {\n    next(errorHandler(500, \"Failed to fetch vendor.\"));\n  }\n};\n\n\n// Get all vendor listings\nexport const getVendors = async (req, res) => {\n  try {\n    const startIndex = parseInt(req.query.startIndex) || 0;\n\n    // Parse amenities from JSON string in query\n    let amenities = {};\n    try {\n      amenities = JSON.parse(req.query.amenities || \"{}\");\n    } catch (error) {\n      return res.status(400).json({ message: \"Invalid amenities format.\" });\n    }\n\n    // Construct filters for amenities with true values only\n    const filters = {};\n    Object.keys(amenities).forEach((key) => {\n      if (amenities[key] === true) {\n        filters[key] = true;\n      }\n    });\n\n    const searchTerm = req.query.searchTerm || \"\";\n    const sortField = req.query.sort || \"createdAt\";\n    const order = req.query.order === \"asc\" ? 1 : -1;\n    const type = req.query.type || \"all\";\n\n    // Add type condition if type is not \"all\"\n    if (type !== \"all\") {\n      filters.type = type; // Assuming your database has a `type` field with values like \"girls\", \"boys\", or \"both\".\n    }\n\n    // MongoDB query\n    const listings = await VendorListing.find({\n      $or: [\n        { name: { $regex: searchTerm, $options: \"i\" } },\n        { address: { $regex: searchTerm, $options: \"i\" } }\n      ],\n      ...filters, // Includes amenities and type filters\n    })\n      .sort({ [sortField]: order }) // Sort by dynamic field\n      .skip(startIndex);\n\n    res.status(200).json(listings);\n  } catch (error) {\n    console.error(\"Error fetching vendors:\", error);\n    res.status(500).json({ message: \"Failed to fetch vendors.\" });\n  }\n};\n\n\nexport const addProfile = async (req, res, next) => {\n  try {\n    const { profile } = req.body;\n    const vendorId = req.params.id;\n    console.log(profile);\n    \n\n    // Insert the profile into the `tenantProfile` array in the database\n    const updatedRequest = await VendorListing.findByIdAndUpdate(\n      vendorId,\n      {\n        $push: { tenants: profile }, // Assuming `tenantProfile` is an array field in your schema\n      },\n      { new: true, runValidators: true }\n    );\n\n    if (!updatedRequest) {\n      return res.status(404).json({\n        success: false,\n        message: \"Request not found.\",\n      });\n    }\n\n    res.status(200).json({\n      success: true,\n      message: `Profile added successfully.`,\n      updatedRequest,\n    });\n  } catch (error) {\n    console.error(\"Error in addProfile:\", error);\n    next(errorHandler(500, \"Failed to add profile. Please try again later.\"));\n  }\n};\n\n\nexport const getNest = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.find({\n      tenants: { $elemMatch: { userID: req.params.id } }\n    });\n\n    res.status(200).json(vendor);\n  } catch (error) {\n    next(errorHandler(500, \"Failed to fetch vendor.\"));\n  }\n};\n\n\nexport const getCount = async (req, res, next) => {\n  const organization = req.params.organization;\n  const { id } = req.query;\n\n  try {\n    const vendorListing = await VendorListing.findOne({ _id: id });\n\n    if (!vendorListing) {\n      return res.status(404).json({ success: false, message: \"Vendor listing not found\" });\n    }\n    \n    const count = vendorListing.tenants.filter(\n      (tenant) => tenant.organization === organization\n    ).length;\n\n    res.json({ success: true, count });\n  } catch (error) {\n    console.error(\"Error fetching organization count:\", error);\n    next(errorHandler(500, \"Failed to fetch count --> Server error\"));\n  }\n};\n\n\n"
        },
        {
            "name": "razorpay.controller.js",
            "size": 1416,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/razorpay.controller.js",
            "path": "api/controllers/razorpay.controller.js",
            "content": "import crypto from 'crypto';\nimport Razorpay from 'razorpay';\nimport dotenv from 'dotenv';\n\ndotenv.config()\n\nconst razorpayInstance = new Razorpay({\n    key_id: process.env.key_id,\n    key_secret: process.env.key_secret,\n});\n\n\n\nexport const createOrder=async(req,res)=>{\n        const { amount } = req.body;\n        const options = {\n          amount: amount * 100, // Amount in paise (1 INR = 100 paise)\n          currency: \"INR\",\n          receipt: `receipt_${Date.now()}`,\n        };\n\ntry {\n    const order = await razorpayInstance.orders.create(options);\n    res.status(201).json({\n      success: true,\n      order,\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      message: \"Unable to create order\",\n      error,\n    });\n  }\n};\n\nexport const verifyPayment=(req, res) => {\n    const { razorpay_order_id, razorpay_payment_id, razorpay_signature } = req.body;\n  \n    const hmac = crypto.createHmac(\"sha256\", key_secret);\n    hmac.update(razorpay_order_id + \"|\" + razorpay_payment_id);\n    const generatedSignature = hmac.digest(\"hex\");\n  \n    if (generatedSignature === razorpay_signature) {\n      res.status(200).json({\n        success: true,\n        message: \"Payment verified successfully\",\n        paymentId: razorpay_payment_id,\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        message: \"Payment verification failed\",\n      });\n    }\n  };\n  "
        },
        {
            "name": "review.controller.js",
            "size": 1821,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/review.controller.js",
            "path": "api/controllers/review.controller.js",
            "content": "import reviewData from \"../models/review.model.js\";\n\nconst addReview = async (req, res) => {\n  try {\n    const { propertyId } = req.body;\n    const { userId, comments, rating } = req.body;\n\n    if (!propertyId || !userId || !comments || !rating) {\n      return res\n        .status(400)\n        .json({ message: \"All fields are required: propertyId, userId, comments, rating.\" });\n    }\n\n    const newReview = {\n      userId,\n      comments,\n      rating,\n      date: new Date(),\n    };\n\n    let reviewDoc = await reviewData.findOne({ propertyId });\n\n    if (!reviewDoc) {\n      reviewDoc = new reviewData({\n        propertyId,\n        review: [newReview],\n      });\n    } else {\n\n      reviewDoc.review.push(newReview);\n    }\n\n    await reviewDoc.save();\n\n    res.status(201).json({ message: \"Review added successfully.\", reviewData: reviewDoc });\n  } catch (error) {\n    console.error(\"Error adding review:\", error);\n    res.status(500).json({ message: \"An error occurred while adding the review.\" });\n  }\n};\n\n\nconst getReviews = async (req, res) => {\n  try {\n    const propertyId = req.params.id;\n    // const propertyId = \"67338f1d104ad624c30c53f7\";\n    // console.log(\"PropertyID : \",propertyId);\n    \n\n    if (!propertyId) {\n      return res.status(400).json({ message: \"Property ID is required.\" });\n    }\n\n    const reviewDoc = await reviewData.findOne({\"propertyId\": propertyId });\n    \n\n    if (!reviewDoc) {\n      return res.status(404).json({ message: \"No reviews found for this property.\" });\n    }\n\n    res.status(200).json({\n      message: \"Reviews fetched successfully.\",\n      reviews: reviewDoc,\n    });\n  } catch (error) {\n    console.error(\"Error fetching reviews:\", error);\n    res.status(500).json({ message: \"An error occurred while fetching reviews.\" });\n  }\n};\n\n\nexport { addReview, getReviews };\n"
        },
        {
            "name": "tenant.controller.js",
            "size": 1257,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/tenant.controller.js",
            "path": "api/controllers/tenant.controller.js",
            "content": "import tenantProfile from '../models/tenant.model.js'\nimport { errorHandler } from '../utils/error.js'\n\n// Adding tenant profile into DB\n\nexport const addTenant= async(req,res,next)=>{\n    try {\n        const tenant= await tenantProfile.create(req.body);\n        return res.status(201).json({\n            success: true,\n            message:\"Tenant Profile Created Successfully\",\n            tenant,\n        });\n    } catch (error) {\n        console.error(\" Error in creating Profile: \", error);\n        next(errorHandler(500,\"Failed to create Profile.Pls Try again Later.\"));\n    }\n};\n\nexport const getTenant = async (req, res, next) => {\n    try {\n        const tenant = await tenantProfile.findOne({ userID: req.params.id }); // Use req.params.id\n        if (!tenant) {\n            return res.status(404).json({\n                success: false,\n                message: \"Tenant Profile not found\",\n            });\n        }\n        return res.status(200).json({\n            success: true,\n            message: \"Tenant Profile Fetched Successfully\",\n            tenant,\n        });\n    } catch (error) {\n        console.error(\"Error in Fetching Profile:\", error);\n        next(errorHandler(500, \"Failed to Fetch Profile. Please try again later.\"));\n    }\n};"
        },
        {
            "name": "listing.controller.js",
            "size": 2879,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/listing.controller.js",
            "path": "api/controllers/listing.controller.js",
            "content": "import Listing from '../models/listing.model.js';\nimport VendorListing from '../models/vendor.model.js';\nimport { errorHandler } from '../utils/error.js';\n\nexport const createListing = async (req, res, next) => {\n  try {\n    const listing = await Listing.create(req.body);\n    return res.status(201).json(listing);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const deleteListing = async (req, res, next) => {\n  const listing = await Listing.findById(req.params.id);\n\n  if (!listing) {\n    return next(errorHandler(404, 'Listing not found!'));\n  }\n\n  if (req.user.id !== listing.userRef) {\n    return next(errorHandler(401, 'You can only delete your own listings!'));\n  }\n\n  try {\n    await Listing.findByIdAndDelete(req.params.id);\n    res.status(200).json('Listing has been deleted!');\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const updateListing = async (req, res, next) => {\n  const listing = await Listing.findById(req.params.id);\n  if (!listing) {\n    return next(errorHandler(404, 'Listing not found!'));\n  }\n  if (req.user.id !== listing.userRef) {\n    return next(errorHandler(401, 'You can only update your own listings!'));\n  }\n\n  try {\n    const updatedListing = await Listing.findByIdAndUpdate(\n      req.params.id,\n      req.body,\n      { new: true }\n    );\n    res.status(200).json(updatedListing);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const getListing = async (req, res, next) => {\n  try {\n    const listing = await Listing.findById(req.params.id);\n    if (!listing) {\n      return next(errorHandler(404, 'Listing not found!'));\n    }\n    res.status(200).json(listing);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const getListings = async (req, res, next) => {\n  try {\n    const limit = parseInt(req.query.limit) || 9;\n    const startIndex = parseInt(req.query.startIndex) || 0;\n    let offer = req.query.offer;\n\n    if (offer === undefined || offer === 'false') {\n      offer = { $in: [false, true] };\n    }\n\n    let furnished = req.query.furnished;\n\n    if (furnished === undefined || furnished === 'false') {\n      furnished = { $in: [false, true] };\n    }\n\n    let parking = req.query.parking;\n\n    if (parking === undefined || parking === 'false') {\n      parking = { $in: [false, true] };\n    }\n\n    let type = req.query.type;\n\n    if (type === undefined || type === 'all') {\n      type = { $in: ['sale', 'rent'] };\n    }\n\n    const searchTerm = req.query.searchTerm || '';\n\n    const sort = req.query.sort || 'createdAt';\n\n    const order = req.query.order || 'desc';\n\n    const listings = await Listing.find(\n      {\n        name: { $regex: searchTerm, $options: 'i' },\n        offer,\n        furnished,\n        parking,\n        type,\n      }\n    )\n      .sort({ [sort]: order })\n      .limit(limit)\n      .skip(startIndex);\n\n    return res.status(200).json(listings);\n  } catch (error) {\n    next(error);\n  }\n};\n"
        },
        {
            "name": "request.controller.js",
            "size": 2444,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/request.controller.js",
            "path": "api/controllers/request.controller.js",
            "content": "import requestData from \"../models/request.model.js\";\nimport { errorHandler } from \"../utils/error.js\";\n\n\nexport const addRequest =async(req,res,next)=>{\n   try {\n    const request=await requestData.create(req.body);\n    return res.status(201).json({\n        success: true,\n        message:\"Request Added Successfully\",\n        request,\n   })\n   } catch (error) {\n    console.error(\" Error in Request Adding: \", error);\n    next(errorHandler(500,\"Failed to  make a request.Pls Try again Later.\"));\n   }\n}\n\nexport const getRequest =async(req,res,next)=>{\n   try {\n    const request=await requestData.find({vendorId:req.params.id});\n    return res.status(201).json({\n        success: true,\n        message:\" Data Fetched Successfully\",\n        request,\n   })\n   } catch (error) {\n    console.error(\" Error in Fetching Data: \", error);\n    next(errorHandler(500,\"Failed to Fetch the data.Pls Try again Later.\"));\n   }\n}\n\nexport const updateStatus = async (req, res, next) => {\n   try {\n       const { status } = req.body;\n       const tenantId = req.params.id;\n\n       // Update the status in the database\n       const updatedRequest = await requestData.findByIdAndUpdate(\n           tenantId,\n           { status },\n           { new: true }\n       );\n\n       if (!updatedRequest) {\n           return res.status(404).json({\n               success: false,\n               message: \"Request not found.\"\n           });\n       }\n\n       res.status(200).json({\n           success: true,\n           message: `Status updated to '${status}' successfully.`,\n           updatedRequest\n       });\n   } catch (error) {\n       console.error(\"Error in updateStatus:\", error);\n       next(errorHandler(500, \"Failed to update status. Please try again later.\"));\n   }\n};\n\nexport const getProperty = async (req, res, next) => {\n    try {\n      const { id } = req.params;\n  \n      // Find the RequestData document by its ID and populate the vendorListingId field\n      const responseData = await requestData.find({\"tenantData.userID\" : id}).populate('propertyId');\n \n      if (!responseData) {\n        return res.status(404).json({ message: 'Property not found' });\n      }\n  \n      // Return the populated property data\n      res.status(201).json({\n        success:true,\n        message:\"Data fected successfully\",\n        responseData\n      });\n    } catch (error) {\n      console.error(error);\n      next(errorHandler(500, \"Failed to fetch the Data\"));\n    }\n  };\n"
        },
        {
            "name": "index.js",
            "size": 1697,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/index.js",
            "path": "api/index.js",
            "content": "import express from 'express';\nimport mongoose from 'mongoose';\nimport dotenv from 'dotenv';\nimport userRouter from './routes/user.route.js';\nimport authRouter from './routes/auth.route.js';\nimport listingRouter from './routes/listing.route.js';\nimport listingVendor from './routes/vendor.route.js';\nimport addrequest from './routes/request.route.js'\nimport tenant from './routes/tenant.route.js'\nimport review from './routes/review.route.js'\nimport addPayment from './routes/razorpay.route.js'\nimport cookieParser from 'cookie-parser';\nimport path from 'path';\nimport cors from 'cors';\ndotenv.config()\n\n\nconst PORT = process.env.PORT || 5000;\n\nmongoose\n  .connect(process.env.MONGO)\n  .then(() => {\n    console.log('Connected to MongoDB!');\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n\nconst __dirname = path.resolve();\n\nconst app = express();\n\napp.use(express.json());\n\napp.use(cors());\n\n\napp.use(cookieParser());\n\n\napp.listen(PORT, () => {\n  console.log('Server is running on port !',{PORT});\n});\n\napp.use('/api/user', userRouter);\napp.use('/api/auth', authRouter);\napp.use('/api/listing', listingRouter);\napp.use('/api/vendor', listingVendor);\napp.use('/api/tenant',tenant);\napp.use('/api/review',review);\napp.use('/api/request',addrequest);\napp.use(\"/api/payment\", addPayment);\n\n\n\napp.use(express.static(path.join(__dirname, '/client/dist')));\n\napp.get('*', (req, res) => {\n  res.sendFile(path.join(__dirname, 'client', 'dist', 'index.html'));\n})\n\napp.use((err, req, res, next) => {\n  const statusCode = err.statusCode || 500;\n  const message = err.message || 'Internal Server Error';\n  return res.status(statusCode).json({\n    success: false,\n    statusCode,\n    message,\n  });\n});\n"
        },
        {
            "name": "request.model.js",
            "size": 587,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/request.model.js",
            "path": "api/models/request.model.js",
            "content": "import mongoose, { Schema } from \"mongoose\";\n\n\nconst request = new mongoose.Schema(\n    {\n        vendorId: {\n            type: String,\n            required: true,\n        },\n        tenantData: {\n            type: Object,\n            required: true,\n        },\n        status: {\n            type: String,\n            default: 'pending'\n\n        },\n        propertyId: {\n            type: mongoose.ObjectId,\n            ref: 'VendorListing',\n\n        }\n\n    },\n    { timestamps: true }\n);\n\nconst requestData = mongoose.model('requestData',\n    request);\n\n\nexport default requestData;    "
        },
        {
            "name": "listing.model.js",
            "size": 1044,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/listing.model.js",
            "path": "api/models/listing.model.js",
            "content": "import mongoose from 'mongoose';\n\nconst listingSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    address: {\n      type: String,\n      required: true,\n    },\n    regularPrice: {\n      type: Number,\n      required: true,\n    },\n    discountPrice: {\n      type: Number,\n      required: true,\n    },\n    bathrooms: {\n      type: Number,\n      required: true,\n    },\n    bedrooms: {\n      type: Number,\n      required: true,\n    },\n    furnished: {\n      type: Boolean,\n      required: true,\n    },\n    parking: {\n      type: Boolean,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    offer: {\n      type: Boolean,\n      required: true,\n    },\n    imageUrls: {\n      type: Array,\n      required: true,\n    },\n    userRef: {\n      type: String,\n      required: true,\n    },\n  },\n  { timestamps: true }\n);\n\nconst Listing = mongoose.model('Listing', listingSchema);\n\nexport default Listing;\n"
        },
        {
            "name": "vendor.model.js",
            "size": 1785,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/vendor.model.js",
            "path": "api/models/vendor.model.js",
            "content": "import mongoose, { Schema, isValidObjectId } from 'mongoose';\n\nconst vendorSchema = new mongoose.Schema(\n  {\n    vendorId: {\n      type: Schema.Types.ObjectId\n\n    },\n    name: {\n      type: String,\n      required: true,\n\n    },\n    type: {\n      type: String,\n    },\n    description: {\n      type: String,\n\n    },\n    address: {\n      type: String,\n      required: true,\n    },\n    state: {\n      type: String,\n      required: true,\n    },\n    city: {\n      type: String,\n      required: true,\n    },\n    rent: {\n      type: Number,\n      required: true,\n    },\n    security: {\n      type: Number,\n      required: true,\n    },\n    marketDistance: {\n      type: Number,\n      required: true,\n    },\n    availRooms: {\n      type: Number,\n      required: true,\n    },\n    totalRooms: {\n      type: Number,\n      required: true,\n    },\n    // to do 'Wi-Fi', 'Parking', 'Laundry', 'Mess', 'AC', 'Gym', 'Furnished','Electric Backup','House Keeping'\n    wifi: {\n      type: Boolean,\n      default: false,\n    },\n    parking: {\n      type: Boolean,\n      default: false,\n    },\n    laundry: {\n      type: Boolean,\n      default: false,\n    },\n    mess: {\n      type: Boolean,\n      default: false,\n    },\n    ac: {\n      type: Boolean,\n      default: false,\n    },\n    gym: {\n      type: Boolean,\n      default: false,\n    },\n    furnished: {\n      type: Boolean,\n      default: false,\n    },\n    electricBackup: {\n      type: Boolean,\n      default: false,\n    },\n    houseKeeping: {\n      type: Boolean,\n      default: false,\n    },\n    imageURL: {\n      type: Array,\n    },\n    tenants: {\n      type: Array,\n    },\n    calendar: {\n      type: String,\n    }\n  },\n  { timestamps: true }\n);\n\nconst VendorListing = mongoose.model(\"VendorListing\", vendorSchema);\n\nexport default VendorListing;\n"
        },
        {
            "name": "user.model.js",
            "size": 555,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/user.model.js",
            "path": "api/models/user.model.js",
            "content": "import mongoose from 'mongoose';\n\nconst userSchema = new mongoose.Schema(\n  {\n    username: {\n      type: String,\n      required: true,\n      unique: true,\n    },\n    email: {\n      type: String,\n      required: true,\n      unique: true,\n    },\n    password: {\n      type: String,\n      required: true,\n    },\n    avatar:{\n      type: String,\n      default: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\n    },\n  },\n  { timestamps: true }\n);\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"
        },
        {
            "name": "review.model.js",
            "size": 394,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/review.model.js",
            "path": "api/models/review.model.js",
            "content": "import mongoose, { Schema } from \"mongoose\";\n\n\nconst review = new mongoose.Schema(\n    {\n        propertyId: {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: 'VendorListing',\n\n        },\n\n        review: {\n            type: Array,\n\n        },\n\n\n    },\n    { timestamps: true }\n);\n\nconst reviewData = mongoose.model('reviewData',\n    review);\n\n\nexport default reviewData;    "
        },
        {
            "name": "tenant.model.js",
            "size": 1019,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/tenant.model.js",
            "path": "api/models/tenant.model.js",
            "content": "import mongoose, { Schema } from \"mongoose\";\n\n\nconst tenantSchema = new mongoose.Schema(\n    {\n        name: {\n            type: String,\n            required: true,\n        },\n        userImg: {\n            type: String\n\n        },\n        userID: {\n            type: Schema.Types.ObjectId,\n        },\n        address: {\n            type: String,\n            required: true,\n        },\n        designation: {\n            type: String,\n            required: true,\n        },\n        aadhaarNo: {\n            type: Number,\n            required: true,\n        },\n        organization: {\n            type: String,\n            required: true,\n        },\n        skills: {\n            type: Array,\n            required: true,\n        },\n        experience: {\n            type: Number,\n            required: true,\n        },\n        aadhaarURL: {\n            type: String,\n        }\n    },\n    { timestamps: true }\n);\n\nconst tenantProfile = mongoose.model('tenantProfile',\n    tenantSchema);\n\nexport default tenantProfile;    "
        },
        {
            "name": "user.route.js",
            "size": 484,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/user.route.js",
            "path": "api/routes/user.route.js",
            "content": "import express from 'express';\nimport { deleteUser, test, updateUser,  getUserListings, getUser} from '../controllers/user.controller.js';\nimport { verifyToken } from '../utils/verifyUser.js';\n\n\nconst router = express.Router();\n\nrouter.get('/test', test);\nrouter.post('/update/:id', verifyToken, updateUser)\nrouter.delete('/delete/:id', verifyToken, deleteUser)\nrouter.get('/listings/:id', verifyToken, getUserListings)\nrouter.get('/:id', verifyToken, getUser)\n\nexport default router;"
        },
        {
            "name": "vendor.route.js",
            "size": 656,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/vendor.route.js",
            "path": "api/routes/vendor.route.js",
            "content": "import express from \"express\";\nimport { addVendor, removeVendor, updateVendor, getVendor, getVendors,addProfile,getNest,getCount } from '../controllers/vendor.controller.js';\nimport { verifyToken } from \"../utils/verifyUser.js\";\n\nconst router = express.Router();\n\nrouter.post('/addvendor', addVendor);\nrouter.delete('/removevendor/:id', verifyToken, removeVendor);\nrouter.put('/updatevendor/:id', verifyToken, updateVendor);\nrouter.get('/getvendor/:id', getVendor);\nrouter.get('/getnest/:id', getNest);\nrouter.get('/allvendors', getVendors);\nrouter.put('/addprofile/:id',addProfile);\nrouter.get('/getcount/:organization',getCount);\n\nexport default router;\n"
        },
        {
            "name": "listing.route.js",
            "size": 505,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/listing.route.js",
            "path": "api/routes/listing.route.js",
            "content": "import express from 'express';\nimport { createListing, deleteListing, updateListing, getListing, getListings } from '../controllers/listing.controller.js';\nimport { verifyToken } from '../utils/verifyUser.js';\n\nconst router = express.Router();\n\nrouter.post('/create', verifyToken, createListing);\nrouter.delete('/delete/:id', verifyToken, deleteListing);\nrouter.post('/update/:id', verifyToken, updateListing);\nrouter.get('//get:id', getListing);\nrouter.get('/get', getListings);\n\n\nexport default router;\n"
        },
        {
            "name": "review.route.js",
            "size": 239,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/review.route.js",
            "path": "api/routes/review.route.js",
            "content": "import express from 'express';\nimport {addReview,getReviews} from '../controllers/review.controller.js';\nconst router = express.Router();\n\nrouter.post('/addreview',addReview);\nrouter.get('/getreview/:id',getReviews);\nexport default router;"
        },
        {
            "name": "razorpay.route.js",
            "size": 299,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/razorpay.route.js",
            "path": "api/routes/razorpay.route.js",
            "content": "import express from \"express\";\nimport Razorpay from \"razorpay\";\nimport { createOrder, verifyPayment } from \"../controllers/razorpay.controller.js\";\n\nconst router = express.Router();\n\n\nrouter.post('/create-order', createOrder);\n\nrouter.post('/verify-payment', verifyPayment);\n\nexport default router;\n"
        },
        {
            "name": "auth.route.js",
            "size": 302,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/auth.route.js",
            "path": "api/routes/auth.route.js",
            "content": "import express from 'express';\nimport { google, signOut, signin, signup } from '../controllers/auth.controller.js';\n\nconst router = express.Router();\n\nrouter.post(\"/signup\", signup);\nrouter.post(\"/signin\", signin);\nrouter.post('/google', google);\nrouter.get('/signout', signOut)\n\nexport default router;"
        },
        {
            "name": "tenant.route.js",
            "size": 241,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/tenant.route.js",
            "path": "api/routes/tenant.route.js",
            "content": "import express from \"express\";\nimport { addTenant,getTenant } from \"../controllers/tenant.controller.js\";\n\nconst router=express.Router();\n\nrouter.post('/addtenant',addTenant);\nrouter.get('/gettenant/:id',getTenant);\n\n\nexport default router;\n"
        },
        {
            "name": "request.route.js",
            "size": 360,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/request.route.js",
            "path": "api/routes/request.route.js",
            "content": "import express from \"express\";\nimport { addRequest,getRequest,updateStatus,getProperty} from \"../controllers/request.controller.js\";\n\nconst router=express.Router();\n\nrouter.post('/addrequest',addRequest);\nrouter.get('/getrequest/:id',getRequest);\nrouter.put('/updateStatus/:id',updateStatus);\nrouter.get('/getproperty/:id',getProperty);\n\nexport default router;"
        },
        {
            "name": "verifyUser.js",
            "size": 676,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/utils/verifyUser.js",
            "path": "api/utils/verifyUser.js",
            "content": "import jwt from 'jsonwebtoken';\nimport dotenv from 'dotenv';\nimport cookieParser from 'cookie-parser';\nimport express from 'express';\nimport { errorHandler } from './error.js';\n\ndotenv.config(); // Initialize environment variables\n\nconst app = express();\napp.use(cookieParser()); // Ensure cookie-parser is used\n\nexport const verifyToken = (req, res, next) => {\n  const token = req.cookies.access_token;\n\n  if (!token) return next(errorHandler(401, 'Unauthorized: No token provided'));\n\n  jwt.verify(token, process.env.JWT_SECRET, (err, user) => {\n    if (err) return next(errorHandler(403, 'Forbidden: Invalid or expired token'));\n\n    req.user = user;\n    next();\n  });\n};\n\n"
        },
        {
            "name": "error.js",
            "size": 163,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/utils/error.js",
            "path": "api/utils/error.js",
            "content": "export const errorHandler = (statusCode, message) => {\n  const error = new Error();\n  error.statusCode = statusCode;\n  error.message = message;\n  return error;\n};\n"
        },
        {
            "name": ".eslintrc.cjs",
            "size": 526,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/.eslintrc.cjs",
            "path": "client/.eslintrc.cjs",
            "content": "module.exports = {\n  root: true,\n  env: { browser: true, es2020: true },\n  extends: [\n    'eslint:recommended',\n    'plugin:react/recommended',\n    'plugin:react/jsx-runtime',\n    'plugin:react-hooks/recommended',\n  ],\n  ignorePatterns: ['dist', '.eslintrc.cjs'],\n  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },\n  settings: { react: { version: '18.2' } },\n  plugins: ['react-refresh'],\n  rules: {\n    'react-refresh/only-export-components': [\n      'warn',\n      { allowConstantExport: true },\n    ],\n  },\n}\n"
        },
        {
            "name": "postcss.config.js",
            "size": 80,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/postcss.config.js",
            "path": "client/postcss.config.js",
            "content": "export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n"
        },
        {
            "name": "App.jsx",
            "size": 2767,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/App.jsx",
            "path": "client/src/App.jsx",
            "content": "import { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport SignIn from './pages/SignIn.jsx';\nimport SignUp from './pages/SignUp.jsx';\nimport About from './pages/About.jsx';\nimport Profile from './pages/Profile.jsx';\nimport Header from './components/Header.jsx';\nimport PrivateRoute from './components/PrivateRoute.jsx';\nimport Search from './pages/Search.jsx';\nimport RegisterVendor from './pages/RegisterVendor.jsx';\nimport Land from './pages/Land.jsx';\nimport BuildProfile from './pages/BuildProfile.jsx';\nimport Dash from './pages/vendor/Dash.jsx';\nimport Property from './pages/Property.jsx';\nimport Showlist from './pages/vendor/Showlist.jsx';\nimport Showtenant from './pages/vendor/Showtenant.jsx';\nimport LandlordContact from './components/LandlordContact.jsx';\nimport Showstatus from './pages/userDash/Showstatus.jsx';\nimport Shownest from './pages/userDash/Shownest.jsx';\nimport Footer from './components/Footer.jsx';\nimport MapSearch from './components/MapSearch.jsx';\nimport Statistics from './components/Statistics.jsx';\nimport Loader from './components/Loader.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\n// import { ToastContainer, toast } from \"react-toastify\";\n\n\nexport default function App() {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n\n    const timer = setTimeout(() => setLoading(false), 3000);\n    return () => clearTimeout(timer);\n\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Land />} />\n        <Route path='/sign-in' element={<SignIn />} />\n        <Route path='/sign-up' element={<SignUp />} />\n        <Route path='/about' element={<About />} />\n        <Route path='/search' element={<Search />} />\n        <Route path='/vend' element={<RegisterVendor />} />\n        <Route path='/property/:listingId' element={<Property />} />\n        {/* <Route path='/listing/:listingId' element={<Listing />} /> */}\n        <Route path='/build' element={<BuildProfile />} />\n        <Route path='/show' element={<Dash />} />\n        <Route path='/viewlist' element={<Showlist />} />\n        <Route path='/view-tenants' element={<Showtenant />} />\n        <Route path='/rent' element={<Showstatus />} />\n        <Route path=\"/landlord-contact\" element={<LandlordContact />} />\n        <Route path=\"/nest\" element={<Shownest />} />\n        <Route path=\"/map-search\" element={<MapSearch />} />\n        <Route path=\"/view-dash\" element={<Statistics />} />\n        <Route element={<PrivateRoute />}>\n          <Route path='/profile' element={<Profile />} />\n        </Route>\n      </Routes>\n      <Footer />\n      <Toaster/>\n    </BrowserRouter>\n  );\n}\n"
        },
        {
            "name": "CommentSection.jsx",
            "size": 2752,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/CommentSection.jsx",
            "path": "client/src/components/CommentSection.jsx",
            "content": "import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FaStar } from \"react-icons/fa\";\nimport url from '../url.jsx';\n\nconst CommentsSection = ({ propertyID }) => {\n  const [comments, setComments] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Fetch comments and ratings from the API\n  const fetchComments = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${url}/api/review/getreview/${propertyID}`);\n      const reviews = response.data.reviews.review;\n      const commentsArray = reviews.map((item) => item.comments);\n      const ratingsArray = reviews.map((item) => item.rating);\n      setComments(commentsArray);\n      setRatings(ratingsArray);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to load comments. Please try again later.\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (propertyID) fetchComments();\n  }, [propertyID]);\n\n  // Helper function to render stars\n  const renderStars = (rating) => {\n    return Array(5)\n      .fill(0)\n      .map((_, index) => (\n        <FaStar\n          key={index}\n          className={`${\n            index < rating ? \"text-yellow-500\" : \"text-gray-300\"\n          } text-lg`}\n        />\n      ));\n  };\n\n  // Loading and Error UI\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center p-4\">\n        <div className=\"loader\"></div>\n        <span className=\"ml-2 text-gray-600\">Loading comments...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-100 p-4 rounded-lg\">\n        <p className=\"text-red-700 font-bold text-xl text-center\">No Comments Yet</p>\n      </div>\n    );\n  }\n\n  // Comments and Ratings UI\n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6 my-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">\n        User Reviews\n      </h2>\n      {comments.length > 0 ? (\n        <ul className=\"space-y-4\">\n          {comments.map((comment, index) => (\n            <li\n              key={index}\n              className=\"bg-gray-100 p-4 rounded-lg border-l-4 border-blue-500\"\n            >\n              <div className=\"flex items-center mb-2\">\n                {renderStars(ratings[index])}\n                <span className=\"ml-2 text-sm text-gray-600\">\n                  {ratings[index]} / 5\n                </span>\n              </div>\n              <p className=\"text-gray-700\">{comment}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"text-gray-600 text-center\">No comments yet.</p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentsSection;\n"
        },
        {
            "name": "LandlordContact.jsx",
            "size": 2539,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/LandlordContact.jsx",
            "path": "client/src/components/LandlordContact.jsx",
            "content": "import React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button } from '@mui/material';\n\nconst LandlordContact = () => {\n  // Default landlord information\n  const landlordInfo = {\n    name: 'Rajesh Kumar',\n    phone: '+91 9876543210',\n    email: 'asch20080@gmail.com',\n    address: '456, MG Road, Bengaluru, Karnataka, India',\n    occupation: 'Real Estate Manager',\n    experience: '10 years of property management experience',\n    rating: '4.8/5',\n  };\n\n  const [message, setMessage] = useState('');\n\n  // Handler for message input\n  const handleMessageChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  // Handler for sending email\n  const handleSendMessage = () => {\n    // Open the user's email client with the message pre-filled\n    window.location.href = `mailto:${landlordInfo.email}?subject=Inquiry about Property&body=${encodeURIComponent(\n      message\n    )}`;\n  };\n\n  return (\n    <Card sx={{ maxWidth: 600, margin: 'auto', mt: 4, p: 2 }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"div\" sx={{ mb: 2 }}>\n          Landlord Contact Information\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Name:</strong> {landlordInfo.name}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Phone:</strong> {landlordInfo.phone}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Email:</strong> {landlordInfo.email}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Address:</strong> {landlordInfo.address}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Occupation:</strong> {landlordInfo.occupation}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Experience:</strong> {landlordInfo.experience}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Rating:</strong> {landlordInfo.rating}\n        </Typography>\n\n        {/* Message Input */}\n        <TextField\n          label=\"Your Message\"\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          rows={4}\n          sx={{ mt: 3 }}\n          value={message}\n          onChange={handleMessageChange}\n        />\n\n        {/* Send Message Button */}\n        <Button\n          onClick={handleSendMessage}\n          variant=\"contained\"\n          color=\"primary\"\n          sx={{ mt: 3 }}\n        >\n          Send Message\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default LandlordContact;\n"
        },
        {
            "name": "Card.jsx",
            "size": 5500,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Card.jsx",
            "path": "client/src/components/Card.jsx",
            "content": "import { Link } from 'react-router-dom';\nimport { MdLocationOn, MdFoodBank, MdWindPower } from 'react-icons/md';\nimport { FaWifi, FaParking, FaCouch, FaBolt, FaSwimmingPool } from 'react-icons/fa';\nimport { GiVacuumCleaner, GiWashingMachine } from 'react-icons/gi';\nimport { BiDumbbell } from 'react-icons/bi';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport url from '../url.jsx';\n\nexport default function Card({ listing }) {\n\n  const [organizationCount, setOrganizationCount] = useState(0);\n  const org = useSelector((state) => state.user.organisation);\n  console.log(org,67);\n  const userId=useSelector((state)=>state.user.currentUser);\n\n  useEffect(() => {\n    if (org) {\n      const fetchOrganizationCount = async () => {\n        try {\n\n          const response = await axios.get(`${url}/api/vendor/getcount/${org}`, {\n            params: {\n              id: listing._id,\n            },\n          });\n          console.log('Count of vendors:', response.data.count);\n          if (response.data.success) {\n            setOrganizationCount(response.data.count);\n          } else {\n            console.error('Failed to fetch count:', response.data.message);\n          }\n        } catch (error) {\n          console.error('Error fetching organization count:', error);\n        }\n      };\n      fetchOrganizationCount();\n    }\n  }, []);\n\n  return (\n    <div className='bg-white shadow-md hover:shadow-lg  transition-shadow overflow-hidden rounded-lg  sm:w-[400px] '>\n      {/* <Link to={`/listing/${listing._id}`}> */}\n      <Link to={userId ? `/property/${listing._id}` : '/sign-in'}>\n        {/* Image Section */}\n        <img\n          src={\n            listing.imageURL?.[0] ||\n            'https://cdn.pixabay.com/photo/2024/06/14/19/14/house-8830418_1280.jpg'\n          }\n          alt='listing cover'\n          className='h-[320px] sm:h-[220px] w-full object-cover hover:scale-105 transition-scale duration-300'\n        />\n\n        {/* Content Section */}\n        <div className='p-3 flex flex-col gap-2 w-full'>\n          {/* Title and Location */}\n          <p className='truncate text-lg font-semibold text-slate-700'>\n            {listing.name}\n          </p>\n          <div className='flex items-center gap-1'>\n            <MdLocationOn className='h-4 w-4 text-green-700' />\n            <p className='text-sm text-gray-600 truncate w-full'>\n              {listing.address}\n            </p>\n          </div>\n\n          {/* Description */}\n          <p className='text-sm text-gray-600 line-clamp-2'>\n            {listing.description}\n          </p>\n\n          {/* Rent and Market Distance */}\n          <p className='text-slate-500 mt-2 font-semibold'>\n            Rent: \u20b9{listing.rent?.toLocaleString('en-US')} / month\n          </p>\n          <p className='text-slate-500'>\n            Market Distance: {listing.marketDistance} meters\n          </p>\n          <p className='text-green-600'> <span className='text-green-600 text-xl'> {organizationCount} </span> people from your organization stay here</p>\n\n          {/* Room Details */}\n          <div className='text-slate-700 flex gap-4'>\n            <div className='font-bold text-xs'>\n              {listing.totalRooms > 1\n                ? `${listing.totalRooms} rooms`\n                : `${listing.totalRooms} room`}\n            </div>\n            <div className='font-bold text-xs'>\n              {listing.availRooms > 1\n                ? `${listing.availRooms} available`\n                : `${listing.availRooms} available`}\n            </div>\n          </div>\n\n          {/* Amenities Section */}\n          <div className='flex flex-wrap gap-2 mt-2 text-xs text-gray-600'>\n            {listing.wifi && (\n              <div className='flex items-center gap-1'>\n                <FaWifi className='text-blue-500' /> Wi-Fi\n              </div>\n            )}\n            {listing.parking && (\n              <div className='flex items-center gap-1'>\n                <FaParking className='text-yellow-600' /> Parking\n              </div>\n            )}\n            {listing.electricBackup && (\n              <div className='flex items-center gap-1'>\n                <FaBolt className='text-red-500' /> E.Backup\n              </div>\n            )}\n            {listing.ac && (\n              <div className='flex items-center gap-1'>\n                <MdWindPower className='text-red-500' /> AC\n              </div>\n            )}\n            {listing.gym && (\n              <div className='flex items-center gap-1'>\n                <BiDumbbell className='text-green-700' /> Gym\n              </div>\n            )}\n            {listing.laundry && (\n              <div className='flex items-center gap-1'>\n                <GiWashingMachine className='text-purple-500' /> Laundry\n              </div>\n            )}\n            {listing.houseKeeping && (\n              <div className='flex items-center gap-1'>\n                <GiVacuumCleaner className='text-pink-500' /> Housekeeping\n              </div>\n            )}\n            {listing.furnished && (\n              <div className='flex items-center gap-1'>\n                <FaCouch className='text-brown-700' /> Furnished\n              </div>\n            )}\n            {listing.mess && (\n              <div className='flex items-center gap-1'>\n                <MdFoodBank className='text-green-700' /> Mess\n              </div>\n            )}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n"
        },
        {
            "name": "CommentForm.jsx",
            "size": 2982,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/CommentForm.jsx",
            "path": "client/src/components/CommentForm.jsx",
            "content": "import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport url from '../url.jsx';\n\nconst CommentForm = ({ propertyID, onCommentAdded }) => {\n  const [comment, setComment] = useState(\"\");\n  const [rating, setRating] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const id = userDetails._id;\n  \n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!comment.trim()) {\n      setError(\"Comment cannot be empty.\");\n      return;\n    }\n\n    if (rating < 1 || rating > 5) {\n      setError(\"Rating must be between 1 and 5.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    try {\n      const response = await axios.post(`${url}/api/review/addreview`, {\n        \"propertyId\":propertyID,\n        \"userId\":id,\n        \"comments\":comment,\n        \"rating\":rating,\n      });\n\n      setSuccess(\"Comment and rating added successfully!\");\n      setComment(\"\");\n      setRating(1);\n      onCommentAdded(response.data.comments); // Update parent component\n    } catch (err) {\n      setError(\"Failed to add comment and rating. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6 my-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Add a Comment</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-4\">\n          <textarea\n            className=\"w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500\"\n            rows=\"4\"\n            placeholder=\"Write your comment here...\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          ></textarea>\n        </div>\n\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 mb-2\">Rating (1 to 5):</label>\n          <select\n            className=\"w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500\"\n            value={rating}\n            onChange={(e) => setRating(Number(e.target.value))}\n          >\n            {[1, 2, 3, 4, 5].map((value) => (\n              <option key={value} value={value}>\n                {value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {error && <p className=\"text-red-600 mb-2\">{error}</p>}\n        {success && <p className=\"text-green-600 mb-2\">{success}</p>}\n\n        <button\n          type=\"submit\"\n          className={`w-full py-2 px-4 bg-blue-500 text-white rounded-lg shadow-md hover:bg-blue-600 ${\n            loading ? \"opacity-50 cursor-not-allowed\" : \"\"\n          }`}\n          disabled={loading}\n        >\n          {loading ? \"Submitting...\" : \"Add Comment\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentForm;\n"
        },
        {
            "name": "Footer.jsx",
            "size": 3477,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Footer.jsx",
            "path": "client/src/components/Footer.jsx",
            "content": "import React from 'react';\n\nfunction Footer() {\n  return (\n    <>\n      <footer className=\"mt-64 footer footer-center p-10 text-white bg-gradient-to-r from-slate-700 via-slate-800 to-slate-900 \">\n        \n        {/* Brand Name */}\n        <div className=\"font-bold text-lg md:text-3xl text-center mb-6 tracking-wide\">\n          <span className=\"text-red-500\">Campus</span>\n          <span className=\"text-white\">Nest</span>\n        </div>\n\n        {/* Navigation Links */}\n        <nav className=\"flex flex-wrap justify-center gap-6 mb-5 text-lg\">\n          {['Home', 'About Us', 'Properties', 'Blog', 'Contact Us', 'FAQ'].map((link, index) => (\n            <a\n              key={index}\n              className=\"link link-hover no-underline text-white hover:text-blue-400 transition-colors duration-300\"\n              href={`#${link.replace(' ', '').toLowerCase()}`}\n            >\n              {link}\n            </a>\n          ))}\n        </nav>\n\n        {/* Social Media Links with Icons */}\n        <nav className=\"flex justify-center gap-6 mb-6 text-xl\">\n          {[\n            { name: 'Twitter', color: 'text-sky-400', icon: 'fab fa-twitter' },\n            { name: 'YouTube', color: 'text-red-600', icon: 'fab fa-youtube' },\n            { name: 'Facebook', color: 'text-blue-600', icon: 'fab fa-facebook' },\n            { name: 'Instagram', color: 'text-pink-500', icon: 'fab fa-instagram' },\n            { name: 'LinkedIn', color: 'text-blue-700', icon: 'fab fa-linkedin' },\n          ].map((social, index) => (\n            <a\n              key={index}\n              href=\"#\"\n              aria-label={social.name}\n              className={`hover:${social.color} transition-colors duration-300`}\n            >\n              <i className={social.icon}></i>\n            </a>\n          ))}\n        </nav>\n\n        {/* Contact Information */}\n        <div className=\"text-center mb-5 space-y-1\">\n          <p className=\"text-gray-400 hover:text-white transition-colors duration-300\">\ud83d\udcde +91 9999999999</p>\n          <p className=\"text-gray-400 hover:text-white transition-colors duration-300\">\u2709\ufe0f campusnest@gmail.com</p>\n        </div>\n\n        {/* Quick Links Section */}\n        <div className=\"flex flex-col md:flex-row justify-center gap-72 mb-6 text-left\">\n          <div className=\"space-y-2\">\n            <h4 className=\"font-semibold text-white mb-3 mx-9\">Company</h4>\n            {['About   ', 'Careers  ', 'Press'].map((item, index) => (\n              <a\n                key={index}\n                className=\"link link-hover text-gray-400 hover:text-blue-400 transition-colors duration-300\"\n                href=\"#\"\n              >\n                {item}\n              </a>\n            ))}\n          </div>\n          <div className=\"space-y-2\">\n            <h4 className=\"font-semibold text-white mb-3 mx-28\">Support</h4>\n            {['Help Center', 'Privacy Policy', 'Terms of Service'].map((item, index) => (\n              <a\n                key={index}\n                className=\"link link-hover text-gray-400 hover:text-blue-400 transition-colors duration-300\"\n                href=\"#\"\n              >\n                {item}\n              </a>\n            ))}\n          </div>\n        </div>\n\n        {/* Copyright */}\n        <aside className=\"text-center text-gray-400 hover:text-white transition-colors duration-300\">\n          <p>\u00a9 2024 CampusNest. All rights reserved.</p>\n        </aside>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n"
        },
        {
            "name": "Loader.jsx",
            "size": 1952,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Loader.jsx",
            "path": "client/src/components/Loader.jsx",
            "content": "import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Loader = () => {\n    const containerVariant = {\n        hidden: { opacity: 0 },\n        visible: {\n            opacity: 1,\n            transition: {\n                staggerChildren: 0.2, // Staggering the animation of each child (letter)\n                delayChildren: 0.3, // Delay before animation starts\n            },\n        },\n    };\n\n    const letterVariant = {\n        hidden: { opacity: 0, scale: 0.5 },\n        visible: {\n            opacity: 1,\n            scale: [1, 1.5, 1], // Smooth pulsing effect\n            transition: {\n                duration: 0.8,\n                repeat: Infinity,\n                repeatType: \"reverse\",\n                ease: \"easeInOut\",\n            },\n        },\n    };\n\n    return (\n        <div className=\"flex justify-center items-center h-screen bg-gradient-to-r from-gray-200 to-gray-300\">\n            {/* Pulse Animation for Text */}\n            <motion.div\n                variants={containerVariant}\n                initial=\"hidden\"\n                animate=\"visible\"\n                className=\"text-5xl font-bold text-black flex gap-2\"\n            >\n                {\"Campus\".split(\"\").map((char, index) => (\n                    <motion.span\n                        key={index}\n                        variants={letterVariant}\n                        className=\"inline-block text-red-500\"\n                    >\n                        {char}\n                    </motion.span>\n                ))}\n                {\"Nest\".split(\"\").map((char, index) => (\n                    <motion.span\n                        key={`nest-${index}`}\n                        variants={letterVariant}\n                        className=\"inline-block text-black-500\"\n                    >\n                        {char}\n                    </motion.span>\n                ))}\n            </motion.div>\n        </div>\n    );\n};\n\nexport default Loader;\n"
        },
        {
            "name": "Header.jsx",
            "size": 3030,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Header.jsx",
            "path": "client/src/components/Header.jsx",
            "content": "import { FaSearch } from 'react-icons/fa';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\n\nexport default function Header() {\n  const { currentUser } = useSelector((state) => state.user);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set('searchTerm', searchTerm);\n    const searchQuery = urlParams.toString();\n    navigate(`/search?${searchQuery}`);\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.search);\n    const searchTermFromUrl = urlParams.get('searchTerm');\n    if (searchTermFromUrl) {\n      setSearchTerm(searchTermFromUrl);\n    }\n  }, [location.search]);\n\n  return (\n    <header className=\"bg-[#f4f4f4] shadow-md shadow-red-200 mb-20\">\n      <div className=\"container mx-auto flex items-center justify-between p-4\">\n      <Link to=\"/\" className=\"flex items-center hover:no-underline hover:scale-105 transition-transform duration-200 ease-in-out\">\n  <h1 className=\"text-white font-sans font-bold text-2xl\">\n    <span className=\"text-red-500\">Campus</span>\n    <span className=\"text-black\">Nest</span>\n  </h1>\n</Link>\n\n\n        <form\n          onSubmit={handleSubmit}\n          className=\"flex items-center bg-white rounded-lg shadow-md px-3 py-2\"\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            className=\"w-32 md:w-64 outline-none px-2 text-gray-700\"\n             minlength=\"2\"\n            maxlength=\"12\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <button type=\"submit\" className=\"text-gray-600 hover:text-gray-800\">\n            <FaSearch className=\"w-5 h-5\" />\n          </button>\n        </form>\n\n        <div className=\"flex items-center gap-6\">\n          <Link to=\"/\" className=\"text-white font-medium\">\n            <button className=\"bg-red-500 hover:bg-red-600 hover:scale-105 hover:border-e-zinc-300 text-white px-4 py-2 rounded-lg shadow\">\n              Home\n            </button>\n          </Link>\n\n          <Link to=\"/about\" className=\"text-white font-medium\">\n            <button onClick={() => navigate('/about')} className=\"bg-blue-500 hover:bg-blue-600 hover:scale-105 text-white px-4 py-2 rounded-lg shadow\">\n              About\n            </button>\n          </Link>\n\n          <Link to=\"/profile\">\n            {currentUser ? (\n              <img\n                className=\"w-10 h-10 rounded-full border-2 border-black object-cover\"\n                src={currentUser.avatar}\n                alt=\"profile\"\n              />\n            ) : (\n              <button className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg shadow\">\n                Sign in\n              </button>\n            )}\n          </Link>\n        </div>\n      </div>\n    </header>\n  );\n}\n"
        },
        {
            "name": "About.jsx",
            "size": 8139,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/About.jsx",
            "path": "client/src/components/About.jsx",
            "content": "import React from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Navigation, Pagination, Autoplay } from 'swiper/modules';\n\nconst About = () => {\n  return (\n    <section className=\"py-16 my-10 bg-gray-100\">\n      <div className=\"container mx-auto px-4\">\n        <Swiper\n          modules={[Navigation, Pagination, Autoplay]}\n          navigation\n          pagination={{ clickable: true }}\n          autoplay={{ delay: 3000 }}\n          spaceBetween={20}\n          slidesPerView={1}\n          breakpoints={{\n            640: { slidesPerView: 1 },\n            768: { slidesPerView: 2 },\n            1024: { slidesPerView: 4 },\n          }}\n        >\n          {/* Card 1 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1475938/pexels-photo-1475938.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Unbiased Opinion\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Affordable Pricing</h2>\n                <p>CampusNest offers budget-friendly living spaces, ensuring quality accommodation without financial strain</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 2 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1396132/pexels-photo-1396132.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Choose Roommate\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Virtual Tours & Scheduling</h2>\n                <p>Request virtual property tours or schedule meetings easily, a feature not commonly offered elsewhere.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 3 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1475938/pexels-photo-1475938.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"PG Student Details\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Authentic Reviews</h2>\n                <p>Only verified tenants can leave reviews, ensuring genuine and reliable feedback for every property.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 4 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/186077/pexels-photo-186077.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Suitability Score\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Request Booking Feature</h2>\n                <p>Landlords can vet tenants through a booking request system, approving or rejecting profiles with ease.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 5 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/261102/pexels-photo-261102.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Amenities Info\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Amenities Info</h2>\n                <p>Discover the amenities provided by each PG, including Wi-Fi, meals, laundry, and more.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n          {/* Card 6 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1396132/pexels-photo-1396132.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Choose Roommate\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Secure Payments</h2>\n                <p>CampusNest offers a seamless payment experience with integrated Razorpay for secure token and security money transactions.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 7 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1475938/pexels-photo-1475938.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"PG Student Details\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Vendor-Friendly Dashboard</h2>\n                <p>Landlords and vendors benefit from a dedicated dashboard to track property performance and statistics effortlessly.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 8 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/186077/pexels-photo-186077.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Suitability Score\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Advanced Search Filters</h2>\n                <p>Find properties that meet your specific needs with filters for amenities and other unique preferences.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n        </Swiper>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n"
        },
        {
            "name": "Map.jsx",
            "size": 1969,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Map.jsx",
            "path": "client/src/components/Map.jsx",
            "content": "\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet'; // Import Leaflet for custom icons\nimport 'leaflet/dist/leaflet.css';\n\n\n// Define the cities with their positions\nconst cities = [\n    { name: 'Mumbai', position: [19.0760, 72.8777] },\n    { name: 'Delhi', position: [28.6139, 77.2090] },\n    { name: 'Bangalore', position: [12.9716, 77.5946] },\n    { name: 'Chennai', position: [13.0827, 80.2707] },\n    { name: 'Hyderabad', position: [17.3850, 78.4867] },\n    { name: 'Pune', position: [18.5204, 73.8567] },\n    { name: 'Kolkata', position: [22.5726, 88.3639] },\n    { name: 'Ahmedabad', position: [23.0225, 72.5714] }\n];\n\n// Define a custom icon\nconst customIcon = new L.Icon({\n    iconUrl: '/pointer.png', // Replace with your icon URL\n    iconSize: [30, 30], // Size of the icon\n    iconAnchor: [15, 30], // Point of the icon which will correspond to marker's location\n    popupAnchor: [0, -30] // Point from which the popup should open relative to the iconAnchor\n});\n\nconst MapSection = () => {\n    return (\n        <div className=\"map-container\">\n            <h1 className=\"page-title\">Cities We Serve</h1>\n            <MapContainer center={[20.5937, 78.9629]} zoom={5} style={{ height: '500px', width: '100%' }}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {cities.map((city, index) => (\n                    <Marker\n                        key={index}\n                        position={city.position}\n                        icon={customIcon} // Use the custom icon\n                    >\n                        <Popup>{city.name}</Popup>\n                    </Marker>\n                ))}\n            </MapContainer>\n        </div>\n    );\n};\n\nexport default MapSection;\n"
        },
        {
            "name": "MapSearch.jsx",
            "size": 4213,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/MapSearch.jsx",
            "path": "client/src/components/MapSearch.jsx",
            "content": "import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport { useNavigate } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerIconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nconst defaultIcon = L.icon({\n  iconUrl: markerIcon,\n  shadowUrl: markerIconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n});\n\nL.Marker.prototype.options.icon = defaultIcon;\n\nconst MapSearch = () => {\n  const navigate = useNavigate();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  const locations = [\n    { id: 1, name: 'Mumbai', lat: 19.0760, lng: 72.8777, description: 'Financial capital of India.' },\n    { id: 2, name: 'Delhi', lat: 28.6139, lng: 77.2090, description: 'Capital city known for its historical sites.' },\n    { id: 3, name: 'Bangalore', lat: 12.9716, lng: 77.5946, description: 'IT hub with pleasant weather.' },\n    { id: 4, name: 'Chennai', lat: 13.0827, lng: 80.2707, description: 'Coastal city known for its cultural heritage.' },\n    { id: 5, name: 'Hyderabad', lat: 17.3850, lng: 78.4867, description: 'City of pearls and biryani.' },\n    { id: 6, name: 'Pune', lat: 18.5204, lng: 73.8567, description: 'Education and cultural hub.' },\n    { id: 7, name: 'Kolkata', lat: 22.5726, lng: 88.3639, description: 'City of joy with a rich colonial history.' },\n    { id: 8, name: 'Noida', lat: 28.5355, lng: 77.3910, description: 'Modern city known for IT parks and infrastructure.' }\n\n  ];\n  \n\n  const handleMarkerClick = (location) => {\n    setSelectedLocation(location);\n  };\n\n  const handleNavigate = (location) => {\n    const searchTerm = location.name.toUpperCase();\n    navigate(`/search?searchTerm=${searchTerm}`);\n  };\n  \n\n  return (\n    <div className=\"flex flex-col md:flex-row h-screen\" >\n        \n      {/* Sidebar */}\n      <div className=\"w-full md:w-1/4 bg-gray-900 text-white p-4 overflow-y-auto \">\n        <h2 className=\"text-2xl font-bold mb-4\">Select a Location</h2>\n        <ul className=\"space-y-4\">\n          {locations.map((location) => (\n            <li\n              key={location.id}\n              className=\"p-4 bg-gray-800 rounded-lg cursor-pointer hover:bg-gray-700 transition-all\"\n              onClick={() => handleNavigate(location)}\n            >\n              <h3 className=\"text-xl font-semibold\">{location.name}</h3>\n              <p className=\"text-gray-400\">{location.description}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Map Container */}\n      <div className=\"flex-1\">\n        <MapContainer center={[20.6245, 81.209]} zoom={5} className=\"h-full w-full\">\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n         {locations.map((location) => (\n  <Marker\n    key={location.id}\n    position={[location.lat, location.lng]}\n    eventHandlers={{\n      click: () => handleMarkerClick(location),\n    }}\n  >\n    <Popup>\n      <div className=\"text-center\">\n        <h3 className=\"font-bold\">{location.name}</h3>\n        <p>{location.description}</p>\n        <button\n          onClick={() => handleNavigate(location)}\n          className=\"mt-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition-all\"\n        >\n          View Properties\n        </button>\n      </div>\n    </Popup>\n  </Marker>\n))}\n\n        </MapContainer>\n      </div>\n\n      {/* Info Box */}\n      {selectedLocation && (\n        <div className=\"absolute bottom-4 left-4 w-80 p-4 bg-white shadow-lg rounded-lg border border-gray-200\">\n          <h3 className=\"text-xl font-bold\">{selectedLocation.name}</h3>\n          <p className=\"text-gray-700\">{selectedLocation.description}</p>\n          <button\n            onClick={() => handleNavigate(selectedLocation)}\n            className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-all\"\n          >\n            Explore Properties\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MapSearch;\n"
        },
        {
            "name": "PrivateRoute.jsx",
            "size": 266,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/PrivateRoute.jsx",
            "path": "client/src/components/PrivateRoute.jsx",
            "content": "import { useSelector } from 'react-redux';\nimport { Outlet, Navigate } from 'react-router-dom';\n\nexport default function PrivateRoute() {\n  const { currentUser } = useSelector((state) => state.user);\n  return currentUser ? <Outlet /> : <Navigate to='/sign-in' />;\n}\n"
        },
        {
            "name": "Statistics.jsx",
            "size": 5996,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Statistics.jsx",
            "path": "client/src/components/Statistics.jsx",
            "content": "import * as React from \"react\";\nimport { BarChart } from \"@mui/x-charts/BarChart\";\nimport { PieChart } from \"@mui/x-charts/PieChart\";\nimport axios from \"axios\";\nimport { Card, Typography, CircularProgress, Box } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport url from '../url.jsx';\n\nexport default function Statistics() {\n  const [chartData, setChartData] = React.useState({\n    categories: [],\n    occupancyRates: [],\n    revenues: [],\n    designation: [],\n    values: [],\n    tenantAadhar: 0,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const id = userDetails._id;\n  const [udata, setUdata] = useState([]);\n  const [xlabels, setxlabels] = useState([]);\n\n  React.useEffect(() => {\n    const fetchVendorData = async () => {\n      try {\n        const response = await axios.get(\n          `${url}/api/vendor/getvendor/${id}`\n        );\n        const vendorData = response.data;\n        const tenants = response.data[0]?.tenants || [];\n        if(!vendorData && !tenants){\n            alert('Please create a Listing First!')\n            return;\n        }else{\n        const categories = vendorData.map((vendor) => vendor.name);\n        const occupancyRates = vendorData.map((vendor) => {\n          const totalRooms = vendor.totalRooms > 0 ? vendor.totalRooms : 0;\n          const occupiedRooms = totalRooms - vendor.availRooms;\n          return totalRooms > 0\n            ? ((occupiedRooms / totalRooms) * 100).toFixed(2)\n            : 0;\n        });\n        const revenues = vendorData.map((vendor) => {\n          const totalRooms = vendor.totalRooms > 0 ? vendor.totalRooms : 0;\n          return (totalRooms - vendor.availRooms) * vendor.rent;\n        });\n\n        const tenantAadhar = vendorData.reduce((sum, vendor) => {\n          return (\n            sum + (Array.isArray(vendor.tenants) ? vendor.tenants.length : 0)\n          );\n        }, 0);\n\n        const designationCounts = tenants.reduce((acc, tenant) => {\n          const designation = tenant.designation || \"Unknown\";\n          acc[designation] = (acc[designation] || 0) + 1;\n          return acc;\n        }, {});\n\n        setUdata(Object.values(designationCounts));\n        setxlabels(Object.keys(designationCounts));\n\n        setChartData({\n          categories,\n          occupancyRates,\n          revenues,\n          tenantAadhar,\n          uData: Object.values(designationCounts),\n          xLabels: Object.keys(designationCounts),\n        });\n\n        setLoading(false);\n    }\n      } catch (error) {\n        console.error(\"Error fetching vendor data:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchVendorData();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box className=\"flex justify-center items-center h-screen\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Occupancy Rates */}\n        <Card className=\"shadow-lg p-4 bg-white rounded-md\">\n          <Typography variant=\"h6\" className=\"text-lg font-bold text-gray-800\">\n            Occupancy Rates\n          </Typography>\n          <BarChart\n            xAxis={[\n              {\n                id: \"vendorNames\",\n                data: chartData.categories,\n                scaleType: \"band\",\n                label: \"Vendor Names\",\n              },\n            ]}\n            series={[\n              {\n                data: chartData.occupancyRates,\n                label: \"Occupancy Rate (%)\",\n                color: \"#1fa52a\", // Green\n              },\n            ]}\n            width={500}\n            height={300}\n          />\n        </Card>\n\n        {/* Revenue Estimation */}\n        <Card className=\"shadow-lg p-4 bg-white rounded-md\">\n          <Typography variant=\"h6\" className=\"text-lg font-bold text-gray-800\">\n            Estimated Monthly Revenue\n          </Typography>\n          <BarChart\n            xAxis={[\n              {\n                id: \"vendorNames\",\n                data: chartData.categories,\n                scaleType: \"band\",\n                label: \"Vendor Names\",\n              },\n            ]}\n            series={[\n              {\n                data: chartData.revenues,\n                label: \"Revenue (\u20b9)\",\n                color: \"#f3db56\", // yellow\n              },\n            ]}\n            width={500}\n            height={300}\n          />\n        </Card>\n\n        {/* Tenant Designations */}\n        <Card className=\"shadow-lg p-4 bg-white rounded-md\">\n          <Typography variant=\"h6\" className=\"text-lg font-bold text-gray-800\">\n            Tenant Designations\n          </Typography>\n          <BarChart\n            width={500}\n            height={300}\n            series={[\n              {\n                data: udata,\n                id: \"designationId\",\n                stack: \"total\",\n                color: \"#6a5acd\", // Amber\n              },\n            ]}\n            xAxis={[\n              { data: xlabels, scaleType: \"band\", label: \"Designations\" },\n            ]}\n          />\n        </Card>\n\n        {/* Tenant Aadhar Breakdown */}\n        <Card className=\"shadow-lg p-4 bg-white rounded-md\">\n          <Typography variant=\"h6\" className=\"text-lg font-bold text-gray-800\">\n            Tenant Aadhar Verification\n          </Typography>\n          <PieChart\n            series={[\n              {\n                data: [\n                  { id: 0, value: chartData.tenantAadhar, label: \"Verified\" },\n                  { id: 1, value: 2, label: \"Unverified\" },\n                ],\n                innerRadius: 30,\n                outerRadius: 100,\n                paddingAngle: 5,\n                cornerRadius: 5,\n                color: [\"#4CAF50\", \"#F44336\"], \n              },\n            ]}\n            width={500}\n            height={300}\n          />\n        </Card>\n      </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "PaymentButton.jsx",
            "size": 1948,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/PaymentButton.jsx",
            "path": "client/src/components/PaymentButton.jsx",
            "content": "import React from \"react\";\nimport axios from \"axios\";\nimport url from '../url.jsx';\n\nconst PaymentButton = ({ amount }) => {\n  const loadRazorpayScript = () => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n    script.onload = () => handlePayment();\n    script.onerror = () => alert(\"Razorpay SDK failed to load. Are you online?\");\n    document.body.appendChild(script);\n  };\n\n  const handlePayment = async () => {\n    try {\n      // Create order on the server\n      const { data } = await axios.post(`${url}/api/payment/create-order`, { amount });\n\n      const options = {\n        key: \"rzp_test_FRFdoaNdjz8LjW\",\n        amount: data.order.amount,\n        currency: \"INR\",\n        name: \"CampusNest\",\n        description: \"Rent Payment\",\n        order_id: data.order.id,\n        handler: async (response) => {\n          const paymentData = {\n            razorpay_order_id: response.razorpay_order_id,\n            razorpay_payment_id: response.razorpay_payment_id,\n            razorpay_signature: response.razorpay_signature,\n          };\n\n          // Verify payment signature on the server\n          const verifyResponse = await axios.post(`${url}/api/payment/verify-payment`, paymentData);\n\n          if (verifyResponse.data.success) {\n            alert(\"Payment Successful!\");\n          } else {\n            alert(\"Payment Verification Failed!\");\n          }\n        },\n        prefill: {\n          name: \"Ashish Chauhan\",\n          email: \"asch20080@gmail.com\",\n          contact: \"8171065385\",\n        },\n        theme: {\n          color: \"#3399cc\",\n        },\n      };\n\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.open();\n    } catch (error) {\n      alert(\"Payment failed. Please try again.\");\n    }\n  };\n\n  return (\n    <button onClick={loadRazorpayScript}>\n      Pay \u20b9{amount}\n    </button>\n  );\n};\n\nexport default PaymentButton;\n"
        },
        {
            "name": "SearchBar.jsx",
            "size": 1679,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/SearchBar.jsx",
            "path": "client/src/components/SearchBar.jsx",
            "content": "import React from 'react';\nimport './SearchBar.css';\n\nconst SearchBar = () => {\n    return (\n        <div className=\"search-bar\">\n            <div className=\"search-bar-field\">\n                <label>Looking For</label>\n                <input type=\"text\" placeholder=\"What to look for ?\" />\n            </div>\n            <div className=\"search-bar-field\">\n                <label>Type</label>\n                <select>\n                    <option>Property Type</option>\n                    <option>PG</option>\n                    <option>Hostel</option>\n                </select>\n            </div>\n            <div className=\"search-bar-field\">\n                <label>Price</label>\n                <select>\n                    <option>Price</option>\n                    <option>Low to High</option>\n                    <option>High to Low</option>\n                </select>\n            </div>\n            <div className=\"search-bar-field\">\n                <label>Location</label>\n                <select>\n                    <option>All Cities</option>\n                    <option>Mumbai</option>\n                    <option>Noida</option>\n                    <option>Greater Noida</option>\n                    <option>Delhi</option>\n                    <option>Hyderabad</option>\n                    <option>Pune</option>\n                    <option>Kolkata</option>\n                    <option>Bangalore</option>\n                    <option>Chennai</option>\n                </select>\n            </div>\n            <button className=\"search-btn\">\n                <i className=\"fa fa-search\"></i> Search\n            </button>\n        </div>\n    );\n};\n\nexport default SearchBar;\n"
        },
        {
            "name": "OAuth.jsx",
            "size": 1384,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/OAuth.jsx",
            "path": "client/src/components/OAuth.jsx",
            "content": "import { GoogleAuthProvider, getAuth, signInWithPopup } from 'firebase/auth';\nimport { app } from '../firebase.js';\nimport { useDispatch } from 'react-redux';\nimport { signInSuccess } from '../redux/user/userSlice';\nimport { useNavigate } from 'react-router-dom';\nimport url from '../url.jsx';\n\nexport default function OAuth() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleGoogleClick = async () => {\n    try {\n      const provider = new GoogleAuthProvider();\n      const auth = getAuth(app);\n\n      const result = await signInWithPopup(auth, provider);\n       \n      // console.log(\"Ashish : \",result.user.photoURL);\n\n      const res = await fetch(`${url}/api/auth/google`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: result.user.displayName,\n          email: result.user.email,\n          photo: result.user.photoURL,\n        }),\n      });\n      const data = await res.json();\n      dispatch(signInSuccess(data));\n      navigate('/');\n    } catch (error) {\n      console.log('could not sign in with google', error);\n    }\n  };\n  return (\n    <button\n      onClick={handleGoogleClick}\n      type='button'\n      className='bg-red-700 text-white p-3 rounded-lg uppercase hover:opacity-95'\n    >\n      Continue with google\n    </button>\n  );\n}\n"
        },
        {
            "name": "firebase.js",
            "size": 562,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/firebase.js",
            "path": "client/src/firebase.js",
            "content": "// firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBmcFaDw57DOMmNX5YTOMy0JzJBcXz3bRc\",\n  authDomain: \"campusnest-346ce.firebaseapp.com\",\n  projectId: \"campusnest-346ce\",\n  storageBucket: \"campusnest-346ce.appspot.com\",\n  messagingSenderId: \"329308652667\",\n  appId: \"1:329308652667:web:5487ea9890b46dde4bcede\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const storage = getStorage(app); // Export storage for image uploads\n"
        },
        {
            "name": "main.jsx",
            "size": 502,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/main.jsx",
            "path": "client/src/main.jsx",
            "content": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport './index.css';\nimport { persistor, store } from './redux/store.js';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport punycode from 'punycode';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n);\n"
        },
        {
            "name": "SignIn.jsx",
            "size": 2834,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/SignIn.jsx",
            "path": "client/src/pages/SignIn.jsx",
            "content": "import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport url from '../url.jsx';\nimport {\n  signInStart,\n  signInSuccess,\n  signInFailure,\n} from '../redux/user/userSlice.js';\nimport OAuth from '../components/OAuth.jsx';\n\nexport default function SignIn() {\n  const [formData, setFormData] = useState({});\n  const { loading, error } = useSelector((state) => state.user);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      dispatch(signInStart());\n      const res = await fetch(`${url}/api/auth/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      const data = await res.json();\n      console.log(data);\n      if (data.success === false) {\n        dispatch(signInFailure(data.message));\n        return;\n      }\n      dispatch(signInSuccess(data));\n      navigate('/');\n    } catch (error) {\n      dispatch(signInFailure(error.message));\n    }\n  };\n  return (\n    <div\n      className=\"-mt-20 h-screen w-full bg-cover bg-center flex items-center justify-center\"\n      style={{\n        backgroundImage:\n          \"url(https://plus.unsplash.com/premium_photo-1687960116228-13d383d20188?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\",\n      }}\n    >\n    <div className='p-6 max-w-lg w-full bg-white bg-opacity-90 rounded-lg shadow-lg'>\n      <h1 className='text-3xl text-center font-semibold my-7'>Sign In</h1>\n      <form onSubmit={handleSubmit} className='flex flex-col gap-4'>\n        <input\n          type='email'\n          placeholder='email'\n          className='border p-3 rounded-lg'\n          id='email'\n          onChange={handleChange}\n        />\n        <input\n          type='password'\n          placeholder='password'\n          className='border p-3 rounded-lg'\n          id='password'\n          minlength=\"8\"\n          maxLength=\"12\"\n          required\n          onChange={handleChange}\n        />\n\n        <button\n          disabled={loading}\n          className='bg-slate-700 text-white p-3 rounded-lg uppercase hover:opacity-95 disabled:opacity-80'\n        >\n          {loading ? 'Loading...' : 'Sign In'}\n        </button>\n        <OAuth/>\n      </form>\n      <div className='flex gap-2 mt-5'>\n        <p>Dont have an account?</p>\n        <Link to={'/sign-up'}>\n          <span className='text-blue-700'>Sign up</span>\n        </Link>\n      </div>\n      {error && <p className='text-red-500 mt-5'>{error}</p>}\n    </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "Search.jsx",
            "size": 7579,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/Search.jsx",
            "path": "client/src/pages/Search.jsx",
            "content": "import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './search.css'; \nimport Card from '../components/Card.jsx'\nimport url from '../url.jsx';\n\nexport default function Search() {\n  const navigate = useNavigate();\n  const [sidebardata, setSidebardata] = useState({\n    searchTerm: '',\n    type: 'all',\n    amenities: {\n      parking: false,\n      furnished: false,\n      wifi: false,\n      mess: false,\n      gym: false,\n      ac: false,\n      electricBackup: false,\n      laundry: false,\n      houseKeeping: false,\n    },\n    sort: 'created_at',\n    order: 'desc',\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [listings, setListings] = useState([]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.search);\n    const searchTermFromUrl = urlParams.get('searchTerm');\n\n    const amenitiesFromUrl = urlParams.get('amenities');\n    const sortFromUrl = urlParams.get('sort');\n    const orderFromUrl = urlParams.get('order');\n    const propTypeFromUrl=urlParams.get('type');\n\n    if (\n      searchTermFromUrl ||\n      amenitiesFromUrl ||\n      sortFromUrl ||\n      orderFromUrl ||\n      propTypeFromUrl\n    ) {\n      setSidebardata({\n        searchTerm: searchTermFromUrl || '',\n        type: propTypeFromUrl || 'all',\n        amenities: amenitiesFromUrl ? JSON.parse(amenitiesFromUrl) : sidebardata.amenities,\n        sort: sortFromUrl || 'created_at',\n        order: orderFromUrl || 'desc',\n      });\n    }\n\n    const fetchListings = async () => {\n      setLoading(true);\n      const searchQuery = urlParams.toString();\n      console.log(\"TESTING : - \", searchQuery);\n      \n      // const res = await fetch(`/api/listing/get?${searchQuery}`);\n      const res = await fetch(`${url}/api/vendor/allvendors?${searchQuery}`);\n      console.log(\"RESPONSE : \", res);\n      const data = await res.json();\n      console.log(\"DATA : \", data);\n      \n      setListings(data);\n      setLoading(false);\n    };\n\n    fetchListings();\n  }, [location.search]);\n\n  const handleChange = (e) => {\n    const { id, value, checked } = e.target;\n    \n    if (id === 'searchTerm') {\n      setSidebardata({ ...sidebardata, searchTerm: value });\n    }\n    \n    if (id === 'sort_order') {\n      const [sort, order] = value.split('_');\n      setSidebardata({ ...sidebardata, sort, order });\n    }\n    \n    if(id === 'prop_type'){\n      console.log(\"TYPE : \" , value);\n      \n      setSidebardata({ ...sidebardata, type: value });\n    }\n\n    if (e.target.type === 'checkbox') {\n      setSidebardata({\n        ...sidebardata,\n        amenities: {\n          ...sidebardata.amenities,\n          [id]: checked,\n        },\n      });\n    }\n\n\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const urlParams = new URLSearchParams();\n    urlParams.set('searchTerm', sidebardata.searchTerm);\n    urlParams.set('type', sidebardata.type);\n    urlParams.set('amenities', JSON.stringify(sidebardata.amenities));\n    urlParams.set('sort', sidebardata.sort);\n    urlParams.set('order', sidebardata.order);\n    const searchQuery = urlParams.toString();\n    navigate(`/search?${searchQuery}`);\n  };\n\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"sidebar sticky top-10 p-5 bg-red-100 min-w-[250px] h-[calc(100vh-40px)] rounded-lg border-r-2 border-gray-300 shadow-md \">\n\n        <form onSubmit={handleSubmit} className=\"search-form\">\n          <div className=\"form-group\">\n            <label>Search Term:</label>\n            <input\n              type=\"text\"\n              id=\"searchTerm\"\n              placeholder=\"Search...\"\n              value={sidebardata.searchTerm}\n              minLength=\"2\"\n              maxLength=\"12\"\n              onChange={handleChange}\n            />\n          </div>\n \n          <div className=\"checkbox-group\">\n            <label>Amenities:</label>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"parking\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.parking}\n              />\n              <span>Parking</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"furnished\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.furnished}\n              />\n              <span>Furnished</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"wifi\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.wifi}\n              />\n              <span>Wifi</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"mess\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.mess}\n              />\n              <span>Mess</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"gym\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.gym}\n              />\n              <span>Gym</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"ac\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.ac}\n              />\n              <span>AC</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"electricBackup\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.electricBackup}\n              />\n              <span>Electricity Backup</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"laundry\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.laundry}\n              />\n              <span>Laundry</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"houseKeeping\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.houseKeeping}\n              />\n              <span>House Keeping</span>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Property Type :</label>\n            <select onChange={handleChange} id=\"prop_type\">\n              <option value=\"all\">All</option>\n              <option value=\"Both\">Both</option>\n              <option value=\"Girls\">Boys</option>\n              <option value=\"Boys\">Girls</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Sort:</label>\n            <select onChange={handleChange} id=\"sort_order\">\n              <option value=\"regularPrice_desc\">Price high to low</option>\n              <option value=\"regularPrice_asc\">Price low to high</option>\n              <option value=\"createdAt_desc\">Latest</option>\n              <option value=\"createdAt_asc\">Oldest</option>\n            </select>\n          </div>\n\n          <button type=\"submit\" className=\"search-button\">Search</button>\n        </form>\n      </div>\n\n      \n       <div className=\"listings\">\n        \n        {loading ? (\n          <p className=\"loading-text\">Loading...</p>\n        ) : listings.length === 0 ? (\n          <p>No listing found!</p>\n        ) :  (\n          \n          listings.map((listing) => <Card key={listing._id} listing={listing} />)\n          //  Card \n        )}\n\n      </div> \n    </div>\n  );\n}\n"
        },
        {
            "name": "Profile.jsx",
            "size": 7617,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/Profile.jsx",
            "path": "client/src/pages/Profile.jsx",
            "content": "import { useSelector } from 'react-redux';\nimport { useRef, useState, useEffect } from 'react';\nimport {\n  getDownloadURL,\n  getStorage,\n  ref,\n  uploadBytesResumable,\n} from 'firebase/storage';\nimport { app } from '../firebase.js';\nimport {\n  updateUserStart,\n  updateUserSuccess,\n  updateUserFailure,\n  deleteUserFailure,\n  deleteUserStart,\n  deleteUserSuccess,\n  signOutUserStart,\n} from '../redux/user/userSlice.js';\nimport { useDispatch } from 'react-redux';\nimport { Link,useNavigate } from 'react-router-dom';\nimport url from '../url.jsx';\nexport default function Profile() {\n  const fileRef = useRef(null);\n  const { currentUser, loading, error } = useSelector((state) => state.user);\n  const [file, setFile] = useState(undefined);\n  const [filePerc, setFilePerc] = useState(0);\n  const [fileUploadError, setFileUploadError] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [showListingsError, setShowListingsError] = useState(false);\n  const [userListings, setUserListings] = useState([]);\n  const dispatch = useDispatch();\n\n  // firebase storage\n  // allow read;\n  // allow write: if\n  // request.resource.size < 2 * 1024 * 1024 &&\n  // request.resource.contentType.matches('image/.*')\n \n\n \n    const navigate = useNavigate();\n  \n    const handleButtonClick = () => {\n      navigate('/viewlist');\n    };\n\n  useEffect(() => {\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [file]);\n\n  const handleFileUpload = (file) => {\n    const storage = getStorage(app);\n    const fileName = new Date().getTime() + file.name;\n    const storageRef = ref(storage, fileName);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setFilePerc(Math.round(progress));\n      },\n      (error) => {\n        setFileUploadError(true);\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) =>\n          setFormData({ ...formData, avatar: downloadURL })\n        );\n      }\n    );\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      dispatch(updateUserStart());\n      const res = await fetch(`${url}/api/user/update/${currentUser._id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      const data = await res.json();\n      if (data.success === false) {\n        dispatch(updateUserFailure(data.message));\n        return;\n      }\n\n      dispatch(updateUserSuccess(data));\n      setUpdateSuccess(true);\n    } catch (error) {\n      dispatch(updateUserFailure(error.message));\n    }\n  };\n\n  const handleDeleteUser = async () => {\n    try {\n      dispatch(deleteUserStart());\n      const res = await fetch(`${url}/api/user/delete/${currentUser._id}`, {\n        method: 'DELETE',\n      });\n      const data = await res.json();\n      if (data.success === false) {\n        dispatch(deleteUserFailure(data.message));\n        return;\n      }\n      dispatch(deleteUserSuccess(data));\n    } catch (error) {\n      dispatch(deleteUserFailure(error.message));\n    }\n  };\n\n  const handleSignOut = async () => {\n    try {\n      localStorage.removeItem('organization');\n      dispatch(signOutUserStart());\n      const res = await fetch(`${url}/api/auth/signout`);\n      const data = await res.json();\n      if (data.success === false) {\n        dispatch(deleteUserFailure(data.message));\n        return;\n      }\n      dispatch(deleteUserSuccess(data));\n    } catch (error) {\n      dispatch(deleteUserFailure(data.message));\n    }\n  };\n\n  // const handleShowListings = async () => {\n  //   navigate(`/show`);\n  // };\n\n  return (\n    <div\n      className=\"-mt-20 h-auto w-full bg-cover bg-center flex items-center justify-center\"\n      style={{\n        backgroundImage:\n          \"url('https://plus.unsplash.com/premium_photo-1687960116228-13d383d20188?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D')\"\n      }}\n    >\n    <div className='mt-32 p-6 max-w-lg w-full h-full bg-white bg-opacity-90 rounded-lg shadow-lg'>\n      <h1 className='text-3xl font-semibold text-center my-7'>Profile</h1>\n      <form onSubmit={handleSubmit} className='flex flex-col gap-4'>\n        <input\n          onChange={(e) => setFile(e.target.files[0])}\n          type='file'\n          ref={fileRef}\n          hidden\n          accept='image/*'\n        />\n        <img\n          onClick={() => fileRef.current.click()}\n          src={formData.avatar || currentUser.avatar}\n          alt='profile'\n          className='rounded-full h-24 w-24 object-cover cursor-pointer self-center mt-2'\n        />\n        <p className='text-sm self-center'>\n          {fileUploadError ? (\n            <span className='text-red-700'>\n              Error Image upload (image must be less than 2 mb)\n            </span>\n          ) : filePerc > 0 && filePerc < 100 ? (\n            <span className='text-slate-700'>{`Uploading ${filePerc}%`}</span>\n          ) : filePerc === 100 ? (\n            <span className='text-green-700'>Image successfully uploaded!</span>\n          ) : (\n            ''\n          )}\n        </p>\n        <input\n          type='text'\n          placeholder='username'\n          defaultValue={currentUser.username}\n          id='username'\n          className='border p-3 rounded-lg'\n          onChange={handleChange}\n        />\n        <input\n          type='email'\n          placeholder='email'\n          id='email'\n          defaultValue={currentUser.email}\n          className='border p-3 rounded-lg'\n          onChange={handleChange}\n        />\n        <input\n          type='password'\n          placeholder='password'\n          onChange={handleChange}\n          id='password'\n          className='border p-3 rounded-lg'\n        />\n        <button\n          disabled={loading}\n          className='bg-slate-700 text-white rounded-lg p-3 uppercase hover:opacity-95 disabled:opacity-80'\n        >\n          {loading ? 'Loading...' : 'Update'}\n        </button>\n        <Link\n          className='bg-green-700 text-white p-3 rounded-lg uppercase text-center hover:opacity-95'\n          to={'/build'}\n        >\n          Build Your Profile\n        </Link>\n        <Link\n          className='bg-green-700 text-white p-3 rounded-lg uppercase text-center hover:opacity-95'\n          to={'/vend'}\n        >\n          Create Listing\n        </Link>\n        <Link\n          className='bg-green-700 text-white p-3 rounded-lg uppercase text-center hover:opacity-95'\n          to={'/rent'}\n        >\n          Rented Properties\n        </Link>\n      </form>\n      <div className='flex justify-between mt-5'>\n        <span\n          onClick={handleDeleteUser}\n          className='text-red-700 cursor-pointer'\n        >\n          Delete account\n        </span>\n        <span onClick={handleSignOut} className='text-red-700 cursor-pointer'>\n          Sign out\n        </span>\n      </div>\n\n      <p className='text-red-700 mt-5'>{error ? error : ''}</p>\n      <p className='text-green-700 mt-5'>\n        {updateSuccess ? 'User is updated successfully!' : ''}\n      </p>\n      <button onClick={handleButtonClick} className='bg-green-700 w-full text-white p-3 rounded-lg uppercase text-center hover:opacity-95'>\n        Show Listings\n      </button>\n    </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "Land.jsx",
            "size": 4988,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/Land.jsx",
            "path": "client/src/pages/Land.jsx",
            "content": "import React, { useEffect } from \"react\";\nimport About from \"../components/About.jsx\";\nimport { Typewriter } from \"react-simple-typewriter\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Navigation } from \"swiper/modules\";\nimport SwiperCore from \"swiper\";\nimport \"swiper/css/bundle\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\n\nSwiperCore.use([Navigation]);\n\n// const navigate=useNavigate();\n\nconst images = [\n  \"https://images.pexels.com/photos/258154/pexels-photo-258154.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n  \"https://images.pexels.com/photos/280221/pexels-photo-280221.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n  \"https://images.unsplash.com/photo-1531971589569-0d9370cbe1e5?q=80&w=2962&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n];\n\nconst Land = () => {\n  const cities = [\n    \"Mumbai\",\n    \"Delhi\",\n    \"Bangalore\",\n    \"Chennai\",\n    \"Hyderabad\",\n    \"Pune\",\n    \"Kolkata\",\n    \"Ahmedabad\",\n  ];\n\n  useEffect(() => {\n    localStorage.setItem(\"organization\", \"jiit\");\n  }, []);\n\n  return (\n    <>\n      <div className=\"pageContainer\" id=\"top\">\n        {/* Top section with text */}\n        <div className=\"topSection\">\n          <div className=\"leftText\">\n            <h1\n              style={{\n                fontWeight: \"bold\",\n                fontSize: \"3.5rem\",\n                marginBottom: \"100px\",\n              }}\n              className=\"bg-gradient-to-r from-blue-600 via-purple-700 to-pink-700 text-transparent bg-clip-text\"\n            >\n              Find Your{\" \"}\n              <span style={{ color: \"#ef4444\" }}>\n                <Typewriter\n                  words={[\"Campus Nest\", \"Dream PG\", \"Dream Flat\"]}\n                  loop={0}\n                  cursor\n                  cursorStyle=\"_\"\n                  typeSpeed={70}\n                  deleteSpeed={50}\n                  delaySpeed={1000}\n                />\n              </span>\n              Here\n            </h1>\n\n            <p className=\"text-slate-600 items-start text-justify\">\n              We offer unbiased opinions, room selection, PG student details,\n              and personalized scores to help you find the perfect home away\n              from your home.We offer unbiased opinions, room selection, PG\n              student details, and personalized scores to help you find the\n              perfect home away from your home.We offer unbiased opinions, room\n              selection, PG student details, and personalized scores to help you\n              find the perfect home away from your home\n            </p>\n          </div>\n          <div className=\"rightText\">\n            <iframe\n              className=\"w-96 h-1/2 mx-auto block\"\n              src=\"https://lottie.host/embed/c39d66c5-c05c-4c34-a69a-33fed4dc28f9/xDp3VVSV6t.json\"\n            ></iframe>\n          </div>\n        </div>\n\n        {/* Bottom section that has image also  */}\n      </div>\n\n      {/* Search By Map */}\n      <div class=\"flex justify-center items-center mb-32\">\n        <Link to={'/map-search'}>\n      <button  className=\"px-14 py-5 mt-16 text-xl bg-gradient-to-r from-slate-800 to-blue-500 text-white font-semibold rounded-full shadow-lg hover:from-slate-800 hover:to-blue-500 hover:scale-105 transition-transform duration-300 ease-in-out\">\n            Search By Map \ud83d\udccc\n          </button>\n          </Link>\n      </div>\n\n      {/* Road  Section */}\n      <div className=\"road-container\">\n        <h1 className=\"text-5xl text-center  font-bold text-slate-600\">\n          Our Expansion{\" \"}\n        </h1>\n        <div className=\"road\">\n          {cities.map((city, index) => (\n            <div key={index} className=\"city\">\n              <div className=\"city-circle\">{index + 1}</div>\n              <p>{city}</p>\n              {index !== cities.length - 1 && <div className=\"road-line\"></div>}\n            </div>\n          ))}\n        </div>\n      </div>\n      <Swiper\n        spaceBetween={30}\n        navigation\n        loop={true} // Allows continuous loop sliding\n        className=\"mySwiper mt-32\"\n      >\n        {images.map((url, index) => (\n          <SwiperSlide key={index}>\n            <img\n              src={url}\n              alt={`Slide ${index}`}\n              className=\"w-full h-[500px] object-cover rounded-2xl\"\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n\n      <h1 className=\"text-5xl text-center mt-32 font-bold text-slate-600\">\n        Why Choose Us?\n      </h1>\n\n      <About id=\"about\" />\n      <div className=\"text-center mb-16\">\n        <Link to={\"/search\"}>\n          {\" \"}\n          <button className=\"px-14 py-5 mt-16 text-xl bg-gradient-to-r from-slate-800 to-blue-500 text-white font-semibold rounded-full shadow-lg hover:from-slate-800 hover:to-blue-500 hover:scale-105 transition-transform duration-300 ease-in-out\">\n            Find Your Nest \ud83c\udfe0\n          </button>{\" \"}\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Land;\n"
        },
        {
            "name": "BuildProfile.jsx",
            "size": 7371,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/BuildProfile.jsx",
            "path": "client/src/pages/BuildProfile.jsx",
            "content": "import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, TextField, Chip, Grid } from '@mui/material';\nimport axios from 'axios';\nimport { storage } from '../firebase.js';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport './profile.css';\nimport { useDispatch } from 'react-redux';\nimport { build, org } from '../redux/user/userSlice.js';\nimport toast, { Toaster } from 'react-hot-toast';\nimport url from '../url.jsx';\n\nconst BuildProfile = () => {\n    const dispatch = useDispatch();\n    const userDetails = useSelector((state) => state.user.currentUser);\n\n    const id = userDetails._id;\n    const [tenantDetails, setTenantDetails] = useState({\n        name: '',\n        userImg: userDetails.avatar,\n        userID: id,\n        address: '',\n        designation: '',\n        aadhaarNo: '',\n        organization: '',\n        skills: [],\n        experience: 0,\n    });\n\n\n    const [aadhaarURL, setAadhaarURL] = useState(null);\n    const [skillInput, setSkillInput] = useState('');\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setTenantDetails({ ...tenantDetails, [name]: value });\n    };\n\n\n    const handleSkillInputChange = (e) => {\n        setSkillInput(e.target.value);\n    };\n\n    const addSkill = (e) => {\n        if (e.key === 'Enter' && skillInput.trim()) {\n            setTenantDetails((prevState) => ({\n                ...prevState,\n                skills: [...prevState.skills, skillInput.trim()],\n            }));\n            setSkillInput('');\n        }\n    };\n\n    const removeSkill = (index) => {\n        setTenantDetails((prevState) => ({\n            ...prevState,\n            skills: prevState.skills.filter((_, i) => i !== index),\n        }));\n    };\n\n    const handleAadhaarURL = (e) => {\n        setAadhaarURL(e.target.files[0]);\n    };\n\n    const uploadAadhaarImage = async () => {\n        if (!aadhaarURL) return null;\n\n        const storageRef = ref(storage, `aadhaar/${Date.now()}_${aadhaarURL.name}`);\n        await uploadBytes(storageRef, aadhaarURL);\n        const url = await getDownloadURL(storageRef);\n        return url;\n    };\n    console.log(\"Tenant Data : \", tenantDetails);\n    console.log(\"URL : \", aadhaarURL);\n\n\n    const handleProfileSubmit = async () => {\n        try {\n            const aadhaarImageURL = await uploadAadhaarImage();\n            console.log(\"URL : \", aadhaarImageURL);\n\n\n            const profileData = {\n                ...tenantDetails,\n                aadhaarURL: aadhaarImageURL, // Add uploaded Aadhaar image URL\n            };\n             \n            const response = await axios.post(`${url}/api/tenant/addtenant`, profileData);\n            if (response.data.success) {\n         \n                toast.success('Profile created successfully');\n                dispatch(build(true));\n                console.log(tenantDetails.organization,899);\n                dispatch(org(tenantDetails.organization));\n\n            } \n        } catch (error) {\n            console.error('Error creating profile:', error);\n            toast.error('Failed to create profile: Network or server error');\n          \n        }\n    };\n\n    return (\n        <form className=\"profile-form\">\n            <h1 className=\"text-2xl text-center p-5 font-mono\">Create Tenant Profile</h1>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Name\"\n                        fullWidth\n                        required\n                        name=\"name\"\n                        value={tenantDetails.name}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Address\"\n                        fullWidth\n                        required\n                        name=\"address\"\n                        value={tenantDetails.address}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Designation\"\n                        fullWidth\n                        required\n                        name=\"designation\"\n                        value={tenantDetails.designation}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Aadhaar Number\"\n                        fullWidth\n                        required\n                        name=\"aadhaarNo\"\n                        value={tenantDetails.aadhaarNo}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Organization\"\n                        fullWidth\n                        required\n                        name=\"organization\"\n                        value={tenantDetails.organization}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label=\"Add Skill\"\n                        fullWidth\n                        value={skillInput}\n                        onChange={handleSkillInputChange}\n                        onKeyDown={addSkill}\n                        placeholder=\"Type a skill and press Enter\"\n                    />\n                    <div className=\"skills-chips\">\n                        {tenantDetails.skills.map((skill, index) => (\n                            <Chip\n                                key={index}\n                                label={skill}\n                                onDelete={() => removeSkill(index)}\n                                color=\"primary\"\n                                style={{ margin: '5px' }}\n                            />\n                        ))}\n                    </div>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label=\"Experience (years)\"\n                        type=\"number\"\n                        fullWidth\n                        required\n                        name=\"experience\"\n                        value={tenantDetails.experience}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <div className=\"photo-upload\">\n                        <p>Upload Aadhaar Photo</p>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={handleAadhaarURL}\n                        />\n                    </div>\n                </Grid>\n\n                <Grid item xs={12} className=\"submit-box\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleProfileSubmit}\n                    >\n                        Submit Profile\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nexport default BuildProfile;\n"
        },
        {
            "name": "Property.jsx",
            "size": 7934,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/Property.jsx",
            "path": "client/src/pages/Property.jsx",
            "content": "import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { FaWifi, FaCar, FaTshirt, FaUtensils, FaSnowflake, FaDumbbell, FaCouch, FaBolt, FaBroom } from 'react-icons/fa';\nimport SwiperCore from 'swiper';\nimport { Navigation, Pagination, Autoplay } from 'swiper/modules';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css/bundle';\nimport './property.css';\nimport CommentsSection from '../components/CommentSection.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\nimport url from '../url.jsx';\n\nSwiperCore.use([Navigation, Pagination, Autoplay]);\n\nconst Property = () => {\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const profile = useSelector((state) => state.user.profile);\n  const id = userDetails._id;\n  const params = useParams();\n  const [property, setProperty] = useState(null);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchProperty = async () => {\n      try {\n        const response = await axios.get(`${url}/api/vendor/getvendor/${params.listingId}`);\n        setProperty(response.data[0]);\n      } catch (err) {\n        setError('Failed to load property details.');\n      }\n    };\n\n    fetchProperty();\n  }, [params.listingId]);\n\n\n  const handleImageClick = (img) => {\n    setSelectedImage(img);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedImage(null);\n  };\n\n  const handleBookingRequest = async () => {\n    try {\n      console.log(profile, 90)\n      if (!profile) {\n        toast.error(\"Please create your profile first!\");\n        navigate('/build');\n        return;\n      }\n      const response = await axios.get(`${url}/api/tenant/gettenant/${id}`);\n      if (response.status === 200) {\n        const tenantData = response.data.tenant;\n        const data = {\n          vendorId: property.vendorId,\n          tenantData,\n          propertyId: property._id,\n        };\n\n        if (id === data.vendorId) {\n          toast.error(\"You cannot book your own property!\");\n\n          return;\n        }\n\n        const postResponse = await axios.post(`${url}/api/request/addrequest`, data);\n        if (postResponse.status === 201) {\n          toast.success(\"Request sent successfully!\");\n        } else {\n          console.error('Failed to store data:', postResponse.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error while fetching tenant profile data:', error.message);\n    }\n  };\n\n  const handleContactClick = () => {\n    navigate('/landlord-contact');\n  };\n  const handletourClick = () => {\n    window.open(property.calendar);\n  };\n\n  if (!property) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <p className=\"text-lg font-semibold\">Loading property details...</p>\n      </div>\n    );\n  }\n\n  return (\n\n\n    <div className=\"p-6 bg-gradient-to-br from-blue-50 to-gray-100 min-h-screen flex flex-col items-center\">\n      <div className=\"max-w-3xl w-full bg-white shadow-2xl rounded-lg overflow-hidden\">\n        {/* Swiper for Property Images */}\n        <Swiper\n          spaceBetween={10}\n          slidesPerView={1}\n          navigation\n          pagination={{ clickable: true }}\n          autoplay={{ delay: 3000 }}\n          className=\"w-full h-64\"\n        >\n          {property.imageURL && property.imageURL.length > 0 ? (\n            property.imageURL.map((img, index) => (\n              <SwiperSlide key={index} onClick={() => handleImageClick(img)}>\n                <img src={img} alt={`Property Image ${index + 1}`} className=\"w-full h-64 object-cover cursor-pointer\" />\n              </SwiperSlide>\n            ))\n          ) : (\n            <SwiperSlide>\n              <img src=\"https://via.placeholder.com/600\" alt=\"Placeholder Image\" className=\"w-full h-64 object-cover\" />\n            </SwiperSlide>\n          )}\n        </Swiper>\n\n        {/* Modal for Full-Size Image */}\n        {isModalOpen && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n            <div className=\"relative\">\n              <img src={selectedImage} alt=\"Full View\" className=\"max-w-full max-h-screen object-contain\" />\n              <button\n                onClick={closeModal}\n                className=\"absolute top-4 right-4 text-white bg-gray-800 rounded-full p-2 hover:bg-gray-600\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Property Details */}\n        <div className=\"p-6\">\n          <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">{property.name}</h2>\n          <p className=\"text-gray-600 mb-4\">{property.description}</p>\n\n          {/* Property Information */}\n          <div className=\"mb-4\">\n            <p><span className=\"font-bold\">Address:</span> {property.address}, {property.city}, {property.state}</p>\n            <p><span className=\"font-bold\">Rent:</span> \u20b9{property.rent}</p>\n            <p><span className=\"font-bold\">Security Deposit:</span> \u20b9{property.security}</p>\n            <p><span className=\"font-bold\">Market Distance:</span> {property.marketDistance} km</p>\n            <p><span className=\"font-bold\">Available Rooms:</span> {property.availRooms}</p>\n            <p><span className=\"font-bold\">Hostel Type:</span> {property.type}</p>\n          </div>\n\n          {/* Amenities */}\n          <h4 className=\"text-2xl font-semibold mb-4\">Amenities</h4>\n          <div className=\"grid grid-cols-2 gap-4\">\n            {property.wifi && <Amenity icon={<FaWifi />} label=\"Wi-Fi\" />}\n            {property.parking && <Amenity icon={<FaCar />} label=\"Parking\" />}\n            {property.laundry && <Amenity icon={<FaTshirt />} label=\"Laundry\" />}\n            {property.mess && <Amenity icon={<FaUtensils />} label=\"Mess\" />}\n            {property.ac && <Amenity icon={<FaSnowflake />} label=\"Air Conditioning\" />}\n            {property.gym && <Amenity icon={<FaDumbbell />} label=\"Gym\" />}\n            {property.furnished && <Amenity icon={<FaCouch />} label=\"Furnished\" />}\n            {property.electricBackup && <Amenity icon={<FaBolt />} label=\"Electric Backup\" />}\n            {property.houseKeeping && <Amenity icon={<FaBroom />} label=\"House Keeping\" />}\n          </div>\n\n          {/* Booking and Contact Buttons */}\n          <div className=\"mt-6 flex space-x-4\">\n            <button\n              onClick={handleBookingRequest}\n              className=\"bg-blue-600 text-white py-2 px-6 rounded-lg hover:bg-blue-700 transition duration-300\"\n            >\n              Request Booking\n            </button>\n            <button\n              onClick={handleContactClick}\n              className=\"bg-green-600 text-white py-2 px-6 rounded-lg hover:bg-green-700 transition duration-300\"\n            >\n              Contact Landlord\n            </button>\n            {property.calendar && (\n              <button\n                onClick={handletourClick}\n                className=\"bg-green-600 text-white py-2 px-6 rounded-lg hover:bg-green-700 transition duration-300\"\n              >\n                Request Property Tour\n              </button>\n            )}\n\n          </div>\n        </div>\n        {/* Other property details here */}\n        <CommentsSection propertyID={property._id} />\n      </div>\n      {/* Comment Section starts here */}\n\n\n\n    </div>\n  );\n};\n\n// Amenity Component for Icons\nconst Amenity = ({ icon, label }) => {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <div className=\"text-sky-600 text-2xl\">{icon}</div>\n      <p className=\"text-gray-700 font-medium\">{label}</p>\n    </div>\n  );\n};\n\nexport default Property;\n"
        },
        {
            "name": "About.jsx",
            "size": 2918,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/About.jsx",
            "path": "client/src/pages/About.jsx",
            "content": "import React from 'react';\nimport { FaBullseye, FaRegSmile } from 'react-icons/fa';\n\nexport default function About() {\n  return (\n    <div className=\"py-20 px-6 max-w-7xl mx-auto h-full bg-gradient-to-r from-gray-100 via-white to-gray-100\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-5xl font-extrabold text-slate-800 mb-6 hover:text-red-500 transition duration-300\">\n          About <span className=\"text-black\"><span className=\"text-red-500\">Campus</span>Nest</span>\n        </h1>\n        <p className=\"text-lg text-slate-600 max-w-3xl mx-auto leading-relaxed\">\n          Discover a new way to find, rent, and manage properties tailored to your needs. Transparency and convenience are our priorities.\n        </p>\n      </div>\n\n\n      <div className=\"grid gap-8 md:grid-cols-2\">\n    \n        <div className=\"space-y-6 p-6 rounded-xl shadow-lg bg-white hover:shadow-2xl transition duration-300\">\n          <div className=\"flex items-center gap-3\">\n            <FaBullseye className=\"text-red-500 text-3xl\" />\n            <h2 className=\"text-2xl font-semibold text-slate-800 hover:text-blue-600 transition duration-300\">\n              Our Mission\n            </h2>\n          </div>\n          <p className=\"text-slate-700 leading-relaxed\">\n            Our mission is to help clients achieve their real estate goals by providing the best properties and new-gen features like map-based search, virtual tours, and more.\n            Whether buying, selling, or renting, we're here to guide you.\n          </p>\n        </div>\n\n  \n        <div className=\"space-y-6 p-6 rounded-xl shadow-lg bg-white hover:shadow-2xl transition duration-300\">\n          <div className=\"flex items-center gap-3\">\n            <FaRegSmile className=\"text-blue-500 text-3xl\" />\n            <h2 className=\"text-2xl font-semibold text-slate-800 hover:text-blue-600 transition duration-300\">\n              Why Choose Us\n            </h2>\n          </div>\n          <p className=\"text-slate-700 leading-relaxed\">\n            With years of experience and a customer-first approach, we strive to make every transaction seamless and rewarding.\n            From initial inquiries to final agreements, we\u2019re committed to your satisfaction.\n          </p>\n        </div>\n      </div>\n\n  \n      <div className=\"mt-16 flex flex-col items-center\">\n        <p className=\"text-lg text-slate-700 text-center max-w-2xl leading-relaxed\">\n          Let us help you find your next home. Explore the most desirable neighborhoods, compare properties,\n          and enjoy unparalleled customer service.\n        </p>\n        <button\n          onClick={() => alert('We are working on it! Thank you')}\n          className=\"mt-8 px-8 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg shadow-lg hover:scale-105 transform transition duration-300\"\n        >\n          Learn More\n        </button>\n      </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "RegisterVendor.jsx",
            "size": 9082,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/RegisterVendor.jsx",
            "path": "client/src/pages/RegisterVendor.jsx",
            "content": "import { useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, TextField, Grid } from '@mui/material';\nimport { storage } from '../firebase.js'; // import Firebase storage\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport './vend.css';\nimport toast, { Toaster } from 'react-hot-toast';\nimport url from '../url.jsx';\n\nconst RegisterVendor = () => {\n    const userDetails = useSelector((state) => state.user.currentUser);\n    const id = userDetails._id;\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [imageURLs, setImageURLs] = useState([]);\n    const [rooms, setRooms] = useState('');\n    const [vendorDetails, setVendorDetails] = useState({\n        vendorId: id,\n        name: '',\n        description: '',\n        address: '',\n        state: '',\n        city: '',\n        type:'',\n        rent: 0,\n        security: 0,\n        marketDistance: 0,\n        availRooms: 0,\n        totalRooms: 0,\n        wifi: false,\n        parking: false,\n        laundry: false,\n        mess: false,\n        ac: false,\n        gym: false,\n        furnished: false,\n        electricBackup: false,\n        houseKeeping: false,\n    });\n\n    const amenOptions = [\n        { label: 'Wi-Fi', key: 'wifi' },\n        { label: 'Parking', key: 'parking' },\n        { label: 'Laundry', key: 'laundry' },\n        { label: 'Mess', key: 'mess' },\n        { label: 'AC', key: 'ac' },\n        { label: 'Gym', key: 'gym' },\n        { label: 'Furnished', key: 'furnished' },\n        { label: 'Electric Backup', key: 'electricBackup' },\n        { label: 'House Keeping', key: 'houseKeeping' },\n    ];\n\n    const handleAmenityClick = (amenityKey) => {\n        setVendorDetails(prevDetails => ({\n            ...prevDetails,\n            [amenityKey]: !prevDetails[amenityKey]\n        }));\n    };\n\n    const handleFileChange = (e) => {\n        const files = Array.from(e.target.files);\n        setSelectedFiles(files);\n    };\n\n    const handleUploadClick = () => {\n        document.getElementById('fileInput').click();\n    };\n\n    const handleRoomsChange = (e) => {\n        setRooms(e.target.value);\n        setVendorDetails({ ...vendorDetails, totalRooms: parseInt(e.target.value, 10) || 0 });\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setVendorDetails({\n            ...vendorDetails,\n            [name]: ['rent', 'security', 'marketDistance', 'availRooms'].includes(name) ? parseInt(value, 10) || 0 : value\n        });\n    };\n\n    const uploadImagesToFirebase = async () => {\n        const urls = [];\n        for (const file of selectedFiles) {\n            const storageRef = ref(storage, `vendors/${Date.now()}_${file.name}`);\n            await uploadBytes(storageRef, file);\n            const url = await getDownloadURL(storageRef);\n            urls.push(url);\n        }\n        setImageURLs(urls);\n        console.log(\"NOrmal urls : \",urls);\n        console.log(\"Image urls : \",imageURLs);\n        \n        return urls;\n    };\n\n    const addVendor = async () => {\n        try {\n            const urls = await uploadImagesToFirebase();\n            const vendorData = {\n                ...vendorDetails,\n                imageURL: urls, // Add image URLs to vendor details\n            };\n\n            const response = await axios.post(`${url}/api/vendor/addvendor`, vendorData);\n            if (response.data.success) {\n                toast.success('Vendor Registered Successfully');\n                \n            } else {\n                toast.error('Failed to Register Vendor: ' + response.data.message);\n\n            }\n        } catch (error) {\n            console.error('Error registering vendor:', error);\n            toast.error('Failed to Register Vendor: Network or Server error');\n            \n        }\n    };\n\n    return (\n        <form className=\"pg-form\">\n            <h1 className=\"text-2xl text-center p-5 font-mono\">List Your Property</h1>\n            <Grid container spacing={3}>\n                \n                <Grid item xs={12} >\n                    <TextField label=\"Name Of The Property\" fullWidth \n                    required name=\"name\" \n                    onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} >\n                    <TextField label=\"Description\" fullWidth \n                    required name=\"description\" \n                    onChange={handleInputChange} \n                    multiline\n                    rows={4} />\n                </Grid>\n                {/* Address Section */}\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Address\" fullWidth \n                    required name=\"address\" \n                    onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"State\" required fullWidth\n                     name=\"state\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"City\" fullWidth \n                    required name=\"city\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Rent Amount\" fullWidth\n                     required type=\"number\" name=\"rent\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Security Amount\" fullWidth\n                     required type=\"number\" name=\"security\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Market distance(km)\" fullWidth\n                     required name=\"marketDistance\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Available Rooms\" fullWidth \n                    required type=\"number\" name=\"availRooms\" onChange={handleInputChange} />\n                </Grid>\n\n                {/* Number of Rooms Section */}\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Number of Rooms\" fullWidth\n                     required type=\"number\" value={rooms} onChange={handleRoomsChange} />\n                </Grid>\n                <Grid item xs={12} >\n                    <TextField label=\"Paste your Google Calendar link\" fullWidth\n                     required   name=\"calendar\" onChange={handleInputChange} />\n                </Grid>\n\n                {/* Upload Photos Section */}\n                <Grid item xs={12}>\n                    <div className=\"photo-box\" onClick={handleUploadClick}>\n                        <p>Upload Image</p>\n                        <input id=\"fileInput\" type=\"file\" multiple accept=\"image/*\" \n                        onChange={handleFileChange} style={{ display: 'none' }} />\n                    </div>\n                    {selectedFiles.length > 0 && <p>{selectedFiles.length} file(s) selected</p>}\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                      \n                        fullWidth\n                        required\n                        name=\"type\"\n                        value={vendorDetails.type}\n                        onChange={handleInputChange}\n                        SelectProps={{\n                            native: true,\n                        }}\n                    >\n                        <option value=\"\">Select Type :</option>\n                        <option value=\"Boys\">Boys</option>\n                        <option value=\"Girls\">Girls</option>\n                        <option value=\"Girls\">Both</option>\n                    </TextField>\n                </Grid>\n\n                {/* Amenities Section */}\n                <Grid item xs={12}>\n                    <div className=\"amen-box\">\n                        <p>Amenities:</p>\n                        <div className=\"amen-btns\">\n                            {amenOptions.map((amenity) => (\n                                <Button\n                                    key={amenity.key}\n                                    variant={vendorDetails[amenity.key] ? 'contained' : 'outlined'}\n                                    onClick={() => handleAmenityClick(amenity.key)}\n                                    style={{ margin: '5px' }}\n                                >\n                                    {amenity.label}\n                                </Button>\n                            ))}\n                        </div>\n                    </div>\n                </Grid>\n\n                {/* Register Button */}\n                <Grid item xs={12} className=\"next-box\">\n                    <Button variant=\"contained\" style={{ margin: '0px' }} onClick={addVendor}>\n                        Add\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nexport default RegisterVendor;\n"
        },
        {
            "name": "SignUp.jsx",
            "size": 2998,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/SignUp.jsx",
            "path": "client/src/pages/SignUp.jsx",
            "content": "import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport OAuth from '../components/OAuth.jsx';\nimport url from '../url.jsx';\n\nexport default function SignUp() {\n  const [formData, setFormData] = useState({});\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      const res = await fetch(`${url}/api/auth/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      const data = await res.json();\n      console.log(data);\n      if (data.success === false) {\n        setLoading(false);\n        setError(data.message);\n        return;\n      }\n      setLoading(false);\n      setError(null);\n      navigate('/sign-in');\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n    }\n  };\n  return (\n    <div\n      className=\"-mt-20 min-h-screen w-full bg-cover bg-center flex items-center justify-center\"\n      style={{\n        backgroundImage:\n          \"url(https://plus.unsplash.com/premium_photo-1687960116228-13d383d20188?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\",\n      }}\n    >\n      <div className=\"p-6 max-w-lg w-full bg-white bg-opacity-90 rounded-lg shadow-lg\">\n        <h1 className=\"text-3xl text-center font-semibold mb-6\">Sign Up</h1>\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            className=\"border p-3 rounded-lg\"\n            id=\"username\"\n            required\n            onChange={handleChange}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"email\"\n            className=\"border p-3 rounded-lg\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            className=\"border p-3 rounded-lg\"\n            id=\"password\"\n            minLength=\"8\"\n            maxLength=\"12\"\n            required\n            onChange={handleChange}\n          />\n          <button\n            disabled={loading}\n            className=\"bg-slate-700 text-white p-3 rounded-lg uppercase hover:opacity-95 disabled:opacity-80\"\n          >\n            {loading ? 'Loading...' : 'Sign Up'}\n          </button>\n          <OAuth />\n        </form>\n        <div className=\"flex gap-2 mt-5\">\n          <p>Have an account?</p>\n          <Link to={'/sign-in'}>\n            <span className=\"text-blue-700\">Sign in</span>\n          </Link>\n        </div>\n        {error && <p className=\"text-red-500 mt-5\">{error}</p>}\n      </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "Yourlisting.jsx",
            "size": 126,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/Yourlisting.jsx",
            "path": "client/src/pages/userDash/Yourlisting.jsx",
            "content": "import React from 'react'\n\nconst Yourlisting = () => {\n  return (\n    <div>Yourlisting</div>\n  )\n}\n\nexport default Yourlisting"
        },
        {
            "name": "Side.jsx",
            "size": 459,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/Side.jsx",
            "path": "client/src/pages/userDash/Side.jsx",
            "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../vendor/Dash.css';\n\nconst Side = () => {\n    return (\n        <div className=\"dash \">\n\n            <ul>\n                <li>\n                    <Link to=\"/rent\">View Request Status</Link>\n                </li>\n                <li>\n                    <Link to=\"/nest\">Your Campus Nest</Link>\n                </li>\n\n            </ul>\n        </div>\n    );\n};\n\nexport default Side;\n"
        },
        {
            "name": "Shownest.jsx",
            "size": 6009,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/Shownest.jsx",
            "path": "client/src/pages/userDash/Shownest.jsx",
            "content": "import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FaWifi, FaCar, FaTshirt, FaUtensils, FaSnowflake, FaDumbbell, FaCouch, FaBolt, FaBroom } from 'react-icons/fa';\nimport Side from './Side.jsx';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Navigation, Pagination } from 'swiper/modules';\nimport CommentForm from '../../components/CommentForm.jsx';\nimport url from '../../url.jsx';\n\nfunction Shownest() {\n  const [vendorData, setVendorData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const id = userDetails._id;\n  const [comments, setComments] = useState([]);\n\n  // Update comments when a new comment is added\n  const handleCommentAdded = (updatedComments) => {\n    setComments(updatedComments);\n  };\n\n  // Fetch vendor listing data from the backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${url}/api/vendor/getnest/${id}`);\n        const data = await response.json();\n        setVendorData(data);\n        \n      } catch (error) {\n        console.error('Error fetching vendor data:', error);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  // Check if there's data to display\n  if (vendorData.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <p className=\"text-lg font-semibold\">Loading your Campus Nest...</p>\n      </div>\n    );\n  }\n\n  const vendor = vendorData[0]; // Displaying only one property\n  console.log(\"PropertyID: \",vendor._id);\n\n  return (\n    <>\n      <Side />\n      <div className=\"p-6 bg-gradient-to-br from-blue-50 to-gray-100 min-h-screen flex flex-col items-center\">\n        <div className=\"max-w-3xl w-full bg-white shadow-2xl rounded-lg overflow-hidden\">\n          {/* Image Section */}\n          {vendor.imageURL && vendor.imageURL.length > 0 && (\n            <img\n              src={vendor.imageURL[0]}\n              alt={vendor.name}\n              className=\"w-full h-64 object-cover cursor-pointer\"\n              onClick={() => setShowModal(true)}\n            />\n          )}\n\n          {/* Vendor Details */}\n          <div className=\"p-6\">\n            <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">{vendor.name}</h2>\n            <p className=\"text-gray-600 mb-4\">{vendor.description}</p>\n\n            <div className=\"mb-4\">\n              <p>\n                <span className=\"font-bold\">Address:</span> {vendor.address}, {vendor.city}, {vendor.state}\n              </p>\n              <p>\n                <span className=\"font-bold\">Rent:</span> \u20b9{vendor.rent}\n              </p>\n              <p>\n                <span className=\"font-bold\">Security Deposit:</span> \u20b9{vendor.security}\n              </p>\n              <p>\n                <span className=\"font-bold\">Market Distance:</span> {vendor.marketDistance} km\n              </p>\n              <p>\n                <span className=\"font-bold\">Available Rooms:</span> {vendor.availRooms}\n              </p>\n              <p>\n                <span className=\"font-bold\">Total Rooms:</span> {vendor.totalRooms === -1 ? 'Not Specified' : vendor.totalRooms}\n              </p>\n            </div>\n\n            {/* Amenities Section */}\n            <div className=\"mt-6\">\n              <h4 className=\"text-2xl font-semibold mb-4\">Amenities</h4>\n              <div className=\"grid grid-cols-2 gap-4\">\n                {vendor.wifi && <Amenity icon={<FaWifi />} label=\"Wi-Fi\" />}\n                {vendor.parking && <Amenity icon={<FaCar />} label=\"Parking\" />}\n                {vendor.laundry && <Amenity icon={<FaTshirt />} label=\"Laundry\" />}\n                {vendor.mess && <Amenity icon={<FaUtensils />} label=\"Mess\" />}\n                {vendor.ac && <Amenity icon={<FaSnowflake />} label=\"Air Conditioning\" />}\n                {vendor.gym && <Amenity icon={<FaDumbbell />} label=\"Gym\" />}\n                {vendor.furnished && <Amenity icon={<FaCouch />} label=\"Furnished\" />}\n                {vendor.electricBackup && <Amenity icon={<FaBolt />} label=\"Electric Backup\" />}\n                {vendor.houseKeeping && <Amenity icon={<FaBroom />} label=\"House Keeping\" />}\n              </div>\n            </div>\n            \n          </div>\n          <CommentForm propertyID={vendor._id} onCommentAdded={handleCommentAdded} />\n        </div>\n        {/* review section */}\n\n      {/* Add Comment Form */}\n      \n    \n\n        \n       \n      </div>\n\n      {/* Modal for Swiper Full-Size Images */}\n      {showModal && (\n        <div\n          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n          onClick={() => setShowModal(false)}\n        >\n          <div className=\"relative w-full max-w-3xl\">\n            <button\n              className=\"absolute top-4 right-4 text-white text-2xl font-bold z-50\"\n              onClick={() => setShowModal(false)}\n            >\n              &times;\n            </button>\n            <Swiper\n              navigation\n              pagination={{ clickable: true }}\n              modules={[Navigation, Pagination]}\n              className=\"max-h-screen\"\n            >\n              {vendor.imageURL.map((image, index) => (\n                <SwiperSlide key={index}>\n                  <img\n                    src={image}\n                    alt={`${vendor.name} - ${index + 1}`}\n                    className=\"w-full h-auto object-contain\"\n                  />\n                </SwiperSlide>\n              ))}\n            </Swiper>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\n// Amenity Component for Icons\nfunction Amenity({ icon, label }) {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <div className=\"text-sky-600 text-2xl\">{icon}</div>\n      <p className=\"text-gray-700 font-medium\">{label}</p>\n    </div>\n  );\n}\n\nexport default Shownest;\n"
        },
        {
            "name": "Showstatus.jsx",
            "size": 5642,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/Showstatus.jsx",
            "path": "client/src/pages/userDash/Showstatus.jsx",
            "content": "import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Side from \"./Side.jsx\";\nimport { useSelector } from \"react-redux\";\nimport PaymentButton from \"../../components/PaymentButton.jsx\";\nimport url from '../../url.jsx';\n\nconst Showstatus = () => {\n  const [properties, setProperties] = useState([]);\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const id = userDetails._id;\n  // const [profile, setProfile] = useState(null);\n\n  // Function to handle the \"Send Token\" button click\n  const handleClick = async (profile,vendorId) => {\n    console.log(\"Vendor Id : \", vendorId);\n    \n    try {\n      const response = await axios.put(\n        `${url}/api/vendor/addprofile/${vendorId}`,\n        {\n          profile: profile,\n        }\n      );\n      console.log(\"Token sent successfully:\", response.data);\n      // alert(\"Token sent successfully!\");\n    } catch (error) {\n      console.error(\"Error sending token:\", error);\n      alert(\"Failed to send token.\");\n    }\n    console.log(profile,33);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          `${url}/api/request/getproperty/${id}`\n        );\n        const responseData = response.data.responseData;\n        const formattedProperties = responseData.map((item) => ({\n          vendorId:item?.propertyId?._id, // make changes here\n          name: item.propertyId?.name,\n          address: item.propertyId?.address,\n          rent: item.propertyId?.rent,\n          security: item.propertyId?.security,\n          wifi: item.propertyId?.wifi,\n          parking: item.propertyId?.parking,\n          laundry: item.propertyId?.laundry,\n          mess: item.propertyId?.mess,\n          ac: item.propertyId?.ac,\n          gym: item.propertyId?.gym,\n          furnished: item.propertyId?.furnished,\n          electricBackup: item.propertyId?.electricBackup,\n          houseKeeping: item.propertyId?.houseKeeping,\n          imageURL:item.propertyId?.imageURL || \"https://via.placeholder.com/150\",\n          status: item.status,\n          profile: item.tenantData, // Added userID to the property object\n        }));\n        setProperties(formattedProperties);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n     \n    };\n\n    fetchData();\n  }, [id]);\n\n  return (\n    <>\n      <Side />\n      <div className=\"flex flex-col items-center p-8 bg-gray-50 min-h-screen\">\n        {properties.length === 0 ? (\n          <p className=\"text-gray-500 text-lg\">Loading...</p>\n        ) : (\n          properties.map((property, index) => (\n            <div\n              key={index}\n              className=\"w-3/4 max-w-4xl bg-white shadow-md rounded-lg p-6 mb-6 ml-20 flex flex-col md:flex-row items-start md:items-center md:justify-between space-y-4 md:space-y-0\"\n            >\n              <div className=\"md:w-1/3 flex-shrink-0\">\n                <img\n                  src={property.imageURL}\n                  alt=\"Property\"\n                  className=\"w-full h-48 object-contain rounded-lg\"\n                />\n              </div>\n              <div className=\"md:w-2/3 md:ml-6 space-y-2\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                  {property.name}\n                </h3>\n                <p className=\"text-gray-600\">\n                  <strong>Address:</strong> {property.address}\n                </p>\n                <p className=\"text-gray-600\">\n                  <strong>Rent:</strong> \u20b9{property.rent}\n                </p>\n                <p className=\"text-gray-600\">\n                  <strong>Security:</strong> \u20b9{property.security}\n                </p>\n                <p className=\"text-gray-600\">\n                  <strong>Amenities:</strong>\n                  {property.wifi && \" WiFi,\"}\n                  {property.parking && \" Parking,\"}\n                  {property.laundry && \" Laundry,\"}\n                  {property.mess && \" Mess,\"}\n                  {property.ac && \" AC,\"}\n                  {property.gym && \" Gym,\"}\n                  {property.furnished && \" Furnished,\"}\n                  {property.electricBackup && \" Electric Backup,\"}\n                  {property.houseKeeping && \" Housekeeping,\"}\n                </p>\n              </div>\n              <div className=\"md:w-2/6 flex flex-col space-y-2\">\n                {/* Status Button */}\n                <button\n                  className={`px-4 py-2 rounded-lg text-sm font-bold ${\n                    property.status === \"accepted\"\n                      ? \"bg-green-500 text-white\"\n                      : \"bg-red-500 text-white\"\n                  }`}\n                >\n                  {property.status === \"accepted\"\n                    ? \"Accepted\"\n                    : property.status === \"rejected\"\n                    ? \"Rejected\"\n                    : \"Pending\"}\n                </button>\n\n                {/* Send Token Button */}\n                <button\n                  className={`px-4 py-2 rounded-lg text-sm font-bold transition-colors duration-200 \n    ${\n      property.status === \"accepted\"\n        ? \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"\n        : \"bg-gray-300 text-gray-600 cursor-not-allowed\"\n    }\n  `}\n                  disabled={property.status !== \"accepted\"}\n                  onClick={() => handleClick(property.profile,property.vendorId)}\n                >\n                  <PaymentButton amount={property.security} />\n                </button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Showstatus;\n"
        },
        {
            "name": "Dash.jsx",
            "size": 667,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vendor/Dash.jsx",
            "path": "client/src/pages/vendor/Dash.jsx",
            "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Dash.css';\n\nconst Dash = () => {\n    return (\n        <div className=\"dash\">\n       \n            <ul>\n                <li>\n                    <Link to=\"/viewlist\">View Listings</Link>\n                </li>\n                <li>\n                    <Link to=\"/vend\">Create Listing</Link>\n                </li>\n                <li>\n                    <Link to=\"/view-tenants\">View Tenants</Link>\n                </li>\n                <li>\n                    <Link to=\"/view-dash\">View DashBoard</Link>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Dash;\n"
        },
        {
            "name": "Showtenant.jsx",
            "size": 6297,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vendor/Showtenant.jsx",
            "path": "client/src/pages/vendor/Showtenant.jsx",
            "content": "import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Typography, Box, Grid, Card, CardContent, Avatar } from '@mui/material';\nimport { GiConsoleController } from 'react-icons/gi';\nimport \"./showlist.css\";\nimport Dash from './Dash.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\nimport url from '../../url.jsx';\n\nfunction Showtenant() {\n    const [tenantData, setTenantData] = useState(null);\n    const [error, setError] = useState('');\n\n\n    // Get the current user ID from Redux store\n    const userDetails = useSelector((state) => state.user.currentUser);\n    const userId = userDetails?._id;\n    console.log(\"User ID : \", userId);\n\n    useEffect(() => {\n        const checkTenant = async () => {\n            if (!userId) {\n                toast.error('User ID not found. Please log in.');\n                return;\n            }\n\n            try {\n                // Call the API to fetch tenant data\n                const response = await axios.get(`${url}/api/request/getrequest/${userId}`);\n                const tenants = response.data.request.map(req => req.tenantData.tenant);\n\n                if (response.status === 201) {\n                    setTenantData(response.data.request);\n                } else {\n                    console.log(\"No tenant data found:\");\n                    setError('No tenant data found for this user.');\n                }\n            } catch (err) {\n                console.error(\"Error fetching tenant data:\", err.message);\n                setError('Failed to fetch tenant data. Please try again later.');\n            }\n        };\n        checkTenant();\n    }, [userId]);\n    console.log(tenantData, 900);\n\n    // Handle click for Accept or Reject\n    const handleClick = async (status, id) => {\n        console.log(\"Status : \", status, \" ID : \", id);\n        // setClick(true)\n\n        try {\n            // API call to update the tenant status\n            const response = await axios.put(`${url}/api/request/updateStatus/${id}`, {\n                status: status,\n            });\n\n            if (response.status === 200) {\n                toast.success(`Tenant request ${status} successfully.`);\n                // Update the local state to reflect the change\n                setTenantData(prevData =>\n                    prevData.map(tenant =>\n                        tenant._id === id ? { ...tenant, status: status } : tenant\n                    )\n                );\n            } else {\n                toast.error(`Failed to update the status. Please try again.`);\n            }\n        } catch (err) {\n            console.error(\"Error updating tenant status:\", err.message);\n    \n            toast.error(`Error: ${err.message}`);\n        }\n    };\n\n    return (\n        <>\n            <Dash />\n            <div className=\"show-tenant-container main-box2 \">\n                {error && (\n                    <Typography color=\"error\" className=\"error-message\">\n                        {error}\n                    </Typography>\n                )}\n                {console.log(\"Tenant data \", tenantData)}\n                {tenantData && tenantData.length > 0 ? (\n                    tenantData.map((tenant) => (\n                        <div key={tenant._id} className=\"tenant-card\">\n                            <div className=\" profile1\">\n                                <img\n                                    onClick={() => window.open(tenant.tenantData.userImg, '_blank')}\n                                    src={tenant.tenantData.userImg}\n                                    alt=\"Profile Image\"\n                                    \n                                />\n                            </div>\n\n\n\n                            <div className=\"tenant-details\">\n                                <Typography variant=\"h6\" className=\"tenant-name\">\n                                    Name: {tenant.tenantData.name}\n                                </Typography>\n                                <div className=\"tenant-info\">\n                                    <div>\n                                        <strong>Organization:</strong> {tenant.tenantData.organization}\n                                    </div>\n                                    <div>\n                                        <strong>Designation:</strong> {tenant.tenantData.designation}\n                                    </div>\n                                    <div>\n                                        <strong>Address:</strong> {tenant.tenantData.address}\n                                    </div>\n                                    <div>\n                                        <strong>Govt Id Number:</strong> {tenant.tenantData.aadhaarNo}\n                                    </div>\n                                    <div>\n                                        <strong>Experience:</strong> {tenant.tenantData.experience} years\n                                    </div>\n                                    \n\n                                    <div className=\"action-buttons\">\n                                    <button\n                                        onClick={() => window.open(tenant.tenantData.aadhaarURL, '_blank')}\n                                        className=\"view-id-btn\"\n                                    >\n                                        View Govt ID\n                                    </button>\n                                        <button onClick={() => handleClick('accepted', tenant._id)} className=\"action-button accept\">\n                                            Accept\n                                        </button>\n                                        <button onClick={() => handleClick('rejected', tenant._id)} className=\"action-button reject\">\n                                            Reject\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                ) : (\n                    <Typography variant=\"body1\" className=\"no-requests\">No requests</Typography>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default Showtenant;\n"
        },
        {
            "name": "Showlist.jsx",
            "size": 1550,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vendor/Showlist.jsx",
            "path": "client/src/pages/vendor/Showlist.jsx",
            "content": "import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Dash from './Dash.jsx';\nimport './showlist.css';\nimport { useSelector } from 'react-redux';\nimport Card from '../../components/Card.jsx';\nimport url from '../../url.jsx';\n\nconst Showlist = () => {\n    const userDetails = useSelector((state) => state.user.currentUser);\n    console.log(userDetails)\n    const id = userDetails._id;\n    console.log(id);\n    const [properties, setProperties] = useState([]);\n    // const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchProperties = async () => {\n            try {\n                const response = await axios.get(`${url}/api/vendor/getvendor/${id}`);\n                setProperties(response.data);\n\n\n                console.log(response.data, \"response\");\n\n            } catch (err) {\n                setError('Failed to load properties.');\n            }\n        };\n\n        fetchProperties();\n    }, []);\n    console.log(properties, \"properties\");\n\n\n        return (\n            <>\n                <Dash />\n                <div className='main-box'>\n                    {console.log(properties, \"inside div\")}\n                    {\n                        Array.isArray(properties) && properties.length > 0 \n                        ? properties.map((property) => <Card key={property._id} listing={property} />)\n                        : <p>No properties available</p> \n                    }\n                </div>\n            </>\n        );\n    };\n    \n    export default Showlist;\n    \n"
        },
        {
            "name": "store.js",
            "size": 648,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/redux/store.js",
            "path": "client/src/redux/store.js",
            "content": "import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userReducer from './user/userSlice';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst rootReducer = combineReducers({ user: userReducer });\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  version: 1,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n"
        },
        {
            "name": "userSlice.js",
            "size": 2026,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/redux/user/userSlice.js",
            "path": "client/src/redux/user/userSlice.js",
            "content": "import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  currentUser: null,\n  error: null,\n  loading: false,\n  profile: false,\n  organisation: null,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    signInStart: (state) => {\n      state.loading = true;\n    },\n    signInSuccess: (state, action) => {\n      state.currentUser = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    signInFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    updateUserStart: (state) => {\n      state.loading = true;\n    },\n    updateUserSuccess: (state, action) => {\n      state.currentUser = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    updateUserFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    deleteUserStart: (state) => {\n      state.loading = true;\n    },\n    deleteUserSuccess: (state) => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = null;\n    },\n    deleteUserFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    signOutUserStart: (state) => {\n      state.loading = true;\n    },\n    signOutUserSuccess: (state) => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = null;\n    },\n    signOutUserFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    build: (state, action) => {\n      state.profile = action.payload;\n    },\n    org: (state, action) => {\n      state.organisation = action.payload;\n    }\n  },\n});\n\nexport const {\n  signInStart,\n  signInSuccess,\n  signInFailure,\n  updateUserFailure,\n  updateUserSuccess,\n  updateUserStart,\n  deleteUserFailure,\n  deleteUserSuccess,\n  deleteUserStart,\n  signOutUserFailure,\n  signOutUserSuccess,\n  signOutUserStart,\n  build,\n  org,\n\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n"
        },
        {
            "name": "url.jsx",
            "size": 69,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/url.jsx",
            "path": "client/src/url.jsx",
            "content": "const url='https://campusnest-w2wf.onrender.com';\nexport default url;"
        },
        {
            "name": "vite.config.js",
            "size": 297,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/vite.config.js",
            "path": "client/vite.config.js",
            "content": "import { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react-swc';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  server: {\n    proxy: {\n      '/api': {\n        target: 'http://localhost:3000',\n        secure: false,\n      },\n    },\n  },\n\n  plugins: [react()],\n});\n"
        },
        {
            "name": "tailwind.config.js",
            "size": 238,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/tailwind.config.js",
            "path": "client/tailwind.config.js",
            "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content:[\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n    ],\n  theme: {\n    extend: {},\n  },\n  plugins: [\n    require('@tailwindcss/line-clamp'),\n    // ...\n  ],\n};\n"
        }
    ],
    "dependencies": {}
}
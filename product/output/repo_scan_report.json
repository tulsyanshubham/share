{
    "repo": "ashishchauhan0001/CampusNest",
    "total_files": 79,
    "files": [
        {
            "name": "listing.controller.js",
            "size": 2879,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/listing.controller.js",
            "path": "api/controllers/listing.controller.js",
            "content": "import Listing from '../models/listing.model.js';\nimport VendorListing from '../models/vendor.model.js';\nimport { errorHandler } from '../utils/error.js';\n\nexport const createListing = async (req, res, next) => {\n  try {\n    const listing = await Listing.create(req.body);\n    return res.status(201).json(listing);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const deleteListing = async (req, res, next) => {\n  const listing = await Listing.findById(req.params.id);\n\n  if (!listing) {\n    return next(errorHandler(404, 'Listing not found!'));\n  }\n\n  if (req.user.id !== listing.userRef) {\n    return next(errorHandler(401, 'You can only delete your own listings!'));\n  }\n\n  try {\n    await Listing.findByIdAndDelete(req.params.id);\n    res.status(200).json('Listing has been deleted!');\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const updateListing = async (req, res, next) => {\n  const listing = await Listing.findById(req.params.id);\n  if (!listing) {\n    return next(errorHandler(404, 'Listing not found!'));\n  }\n  if (req.user.id !== listing.userRef) {\n    return next(errorHandler(401, 'You can only update your own listings!'));\n  }\n\n  try {\n    const updatedListing = await Listing.findByIdAndUpdate(\n      req.params.id,\n      req.body,\n      { new: true }\n    );\n    res.status(200).json(updatedListing);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const getListing = async (req, res, next) => {\n  try {\n    const listing = await Listing.findById(req.params.id);\n    if (!listing) {\n      return next(errorHandler(404, 'Listing not found!'));\n    }\n    res.status(200).json(listing);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const getListings = async (req, res, next) => {\n  try {\n    const limit = parseInt(req.query.limit) || 9;\n    const startIndex = parseInt(req.query.startIndex) || 0;\n    let offer = req.query.offer;\n\n    if (offer === undefined || offer === 'false') {\n      offer = { $in: [false, true] };\n    }\n\n    let furnished = req.query.furnished;\n\n    if (furnished === undefined || furnished === 'false') {\n      furnished = { $in: [false, true] };\n    }\n\n    let parking = req.query.parking;\n\n    if (parking === undefined || parking === 'false') {\n      parking = { $in: [false, true] };\n    }\n\n    let type = req.query.type;\n\n    if (type === undefined || type === 'all') {\n      type = { $in: ['sale', 'rent'] };\n    }\n\n    const searchTerm = req.query.searchTerm || '';\n\n    const sort = req.query.sort || 'createdAt';\n\n    const order = req.query.order || 'desc';\n\n    const listings = await Listing.find(\n      {\n        name: { $regex: searchTerm, $options: 'i' },\n        offer,\n        furnished,\n        parking,\n        type,\n      }\n    )\n      .sort({ [sort]: order })\n      .limit(limit)\n      .skip(startIndex);\n\n    return res.status(200).json(listings);\n  } catch (error) {\n    next(error);\n  }\n};\n"
        },
        {
            "name": "review.controller.js",
            "size": 1821,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/review.controller.js",
            "path": "api/controllers/review.controller.js",
            "content": "import reviewData from \"../models/review.model.js\";\n\nconst addReview = async (req, res) => {\n  try {\n    const { propertyId } = req.body;\n    const { userId, comments, rating } = req.body;\n\n    if (!propertyId || !userId || !comments || !rating) {\n      return res\n        .status(400)\n        .json({ message: \"All fields are required: propertyId, userId, comments, rating.\" });\n    }\n\n    const newReview = {\n      userId,\n      comments,\n      rating,\n      date: new Date(),\n    };\n\n    let reviewDoc = await reviewData.findOne({ propertyId });\n\n    if (!reviewDoc) {\n      reviewDoc = new reviewData({\n        propertyId,\n        review: [newReview],\n      });\n    } else {\n\n      reviewDoc.review.push(newReview);\n    }\n\n    await reviewDoc.save();\n\n    res.status(201).json({ message: \"Review added successfully.\", reviewData: reviewDoc });\n  } catch (error) {\n    console.error(\"Error adding review:\", error);\n    res.status(500).json({ message: \"An error occurred while adding the review.\" });\n  }\n};\n\n\nconst getReviews = async (req, res) => {\n  try {\n    const propertyId = req.params.id;\n    // const propertyId = \"67338f1d104ad624c30c53f7\";\n    // console.log(\"PropertyID : \",propertyId);\n    \n\n    if (!propertyId) {\n      return res.status(400).json({ message: \"Property ID is required.\" });\n    }\n\n    const reviewDoc = await reviewData.findOne({\"propertyId\": propertyId });\n    \n\n    if (!reviewDoc) {\n      return res.status(404).json({ message: \"No reviews found for this property.\" });\n    }\n\n    res.status(200).json({\n      message: \"Reviews fetched successfully.\",\n      reviews: reviewDoc,\n    });\n  } catch (error) {\n    console.error(\"Error fetching reviews:\", error);\n    res.status(500).json({ message: \"An error occurred while fetching reviews.\" });\n  }\n};\n\n\nexport { addReview, getReviews };\n"
        },
        {
            "name": "vendor.controller.js",
            "size": 5473,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/vendor.controller.js",
            "path": "api/controllers/vendor.controller.js",
            "content": "import VendorListing from \"../models/vendor.model.js\";\n\nimport { errorHandler } from \"../utils/error.js\";\n\n// Add a new vendor listing\nexport const addVendor = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.create(req.body);\n    return res.status(201).json({\n      success: true,\n      message: \"Vendor added successfully\",\n      vendor,\n    });\n  } catch (error) {\n    console.error(\"Error adding vendor:\", error);\n    next(errorHandler(500, \"Failed to add vendor. Please try again later.\"));\n  }\n};\n\n// Delete a vendor listing\nexport const removeVendor = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.findById(req.params.id);\n    if (!vendor) {\n      return next(errorHandler(404, \"Vendor listing not found!\"));\n    }\n    await VendorListing.findByIdAndDelete(req.params.id);\n    res.status(200).json({ success: true, message: \"Vendor listing has been removed!\" });\n  } catch (error) {\n    next(errorHandler(500, \"Failed to remove vendor.\"));\n  }\n};\n\n// Update a vendor listing\nexport const updateVendor = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.findById(req.params.id);\n    if (!vendor) {\n      return next(errorHandler(404, \"Vendor listing not found!\"));\n    }\n    const updatedVendor = await VendorListing.findByIdAndUpdate(\n      req.params.id,\n      req.body,\n      { new: true }\n    );\n    res.status(200).json({ success: true, vendor: updatedVendor });\n  } catch (error) {\n    next(errorHandler(500, \"Failed to update vendor.\"));\n  }\n};\n\n// Get a single vendor listing\nexport const getVendor = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.find({\n      $or: [\n        { _id: req.params.id },\n        { vendorId: req.params.id },\n        { tenants: { $elemMatch: { _id: req.params.id } } }\n      ]\n    });\n\n    if (!vendor || vendor.length === 0) {\n      return next(errorHandler(404, \"Vendor listing not found!\"));\n    }\n\n    res.status(200).json(vendor);\n  } catch (error) {\n    next(errorHandler(500, \"Failed to fetch vendor.\"));\n  }\n};\n\n\n// Get all vendor listings\nexport const getVendors = async (req, res) => {\n  try {\n    const startIndex = parseInt(req.query.startIndex) || 0;\n\n    // Parse amenities from JSON string in query\n    let amenities = {};\n    try {\n      amenities = JSON.parse(req.query.amenities || \"{}\");\n    } catch (error) {\n      return res.status(400).json({ message: \"Invalid amenities format.\" });\n    }\n\n    // Construct filters for amenities with true values only\n    const filters = {};\n    Object.keys(amenities).forEach((key) => {\n      if (amenities[key] === true) {\n        filters[key] = true;\n      }\n    });\n\n    const searchTerm = req.query.searchTerm || \"\";\n    const sortField = req.query.sort || \"createdAt\";\n    const order = req.query.order === \"asc\" ? 1 : -1;\n    const type = req.query.type || \"all\";\n\n    // Add type condition if type is not \"all\"\n    if (type !== \"all\") {\n      filters.type = type; // Assuming your database has a `type` field with values like \"girls\", \"boys\", or \"both\".\n    }\n\n    // MongoDB query\n    const listings = await VendorListing.find({\n      $or: [\n        { name: { $regex: searchTerm, $options: \"i\" } },\n        { address: { $regex: searchTerm, $options: \"i\" } }\n      ],\n      ...filters, // Includes amenities and type filters\n    })\n      .sort({ [sortField]: order }) // Sort by dynamic field\n      .skip(startIndex);\n\n    res.status(200).json(listings);\n  } catch (error) {\n    console.error(\"Error fetching vendors:\", error);\n    res.status(500).json({ message: \"Failed to fetch vendors.\" });\n  }\n};\n\n\nexport const addProfile = async (req, res, next) => {\n  try {\n    const { profile } = req.body;\n    const vendorId = req.params.id;\n    console.log(profile);\n    \n\n    // Insert the profile into the `tenantProfile` array in the database\n    const updatedRequest = await VendorListing.findByIdAndUpdate(\n      vendorId,\n      {\n        $push: { tenants: profile }, // Assuming `tenantProfile` is an array field in your schema\n      },\n      { new: true, runValidators: true }\n    );\n\n    if (!updatedRequest) {\n      return res.status(404).json({\n        success: false,\n        message: \"Request not found.\",\n      });\n    }\n\n    res.status(200).json({\n      success: true,\n      message: `Profile added successfully.`,\n      updatedRequest,\n    });\n  } catch (error) {\n    console.error(\"Error in addProfile:\", error);\n    next(errorHandler(500, \"Failed to add profile. Please try again later.\"));\n  }\n};\n\n\nexport const getNest = async (req, res, next) => {\n  try {\n    const vendor = await VendorListing.find({\n      tenants: { $elemMatch: { userID: req.params.id } }\n    });\n\n    res.status(200).json(vendor);\n  } catch (error) {\n    next(errorHandler(500, \"Failed to fetch vendor.\"));\n  }\n};\n\n\nexport const getCount = async (req, res, next) => {\n  const organization = req.params.organization;\n  const { id } = req.query;\n\n  try {\n    const vendorListing = await VendorListing.findOne({ _id: id });\n\n    if (!vendorListing) {\n      return res.status(404).json({ success: false, message: \"Vendor listing not found\" });\n    }\n    \n    const count = vendorListing.tenants.filter(\n      (tenant) => tenant.organization === organization\n    ).length;\n\n    res.json({ success: true, count });\n  } catch (error) {\n    console.error(\"Error fetching organization count:\", error);\n    next(errorHandler(500, \"Failed to fetch count --> Server error\"));\n  }\n};\n\n\n"
        },
        {
            "name": "tenant.controller.js",
            "size": 1257,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/tenant.controller.js",
            "path": "api/controllers/tenant.controller.js",
            "content": "import tenantProfile from '../models/tenant.model.js'\nimport { errorHandler } from '../utils/error.js'\n\n// Adding tenant profile into DB\n\nexport const addTenant= async(req,res,next)=>{\n    try {\n        const tenant= await tenantProfile.create(req.body);\n        return res.status(201).json({\n            success: true,\n            message:\"Tenant Profile Created Successfully\",\n            tenant,\n        });\n    } catch (error) {\n        console.error(\" Error in creating Profile: \", error);\n        next(errorHandler(500,\"Failed to create Profile.Pls Try again Later.\"));\n    }\n};\n\nexport const getTenant = async (req, res, next) => {\n    try {\n        const tenant = await tenantProfile.findOne({ userID: req.params.id }); // Use req.params.id\n        if (!tenant) {\n            return res.status(404).json({\n                success: false,\n                message: \"Tenant Profile not found\",\n            });\n        }\n        return res.status(200).json({\n            success: true,\n            message: \"Tenant Profile Fetched Successfully\",\n            tenant,\n        });\n    } catch (error) {\n        console.error(\"Error in Fetching Profile:\", error);\n        next(errorHandler(500, \"Failed to Fetch Profile. Please try again later.\"));\n    }\n};"
        },
        {
            "name": "request.controller.js",
            "size": 2444,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/request.controller.js",
            "path": "api/controllers/request.controller.js",
            "content": "import requestData from \"../models/request.model.js\";\nimport { errorHandler } from \"../utils/error.js\";\n\n\nexport const addRequest =async(req,res,next)=>{\n   try {\n    const request=await requestData.create(req.body);\n    return res.status(201).json({\n        success: true,\n        message:\"Request Added Successfully\",\n        request,\n   })\n   } catch (error) {\n    console.error(\" Error in Request Adding: \", error);\n    next(errorHandler(500,\"Failed to  make a request.Pls Try again Later.\"));\n   }\n}\n\nexport const getRequest =async(req,res,next)=>{\n   try {\n    const request=await requestData.find({vendorId:req.params.id});\n    return res.status(201).json({\n        success: true,\n        message:\" Data Fetched Successfully\",\n        request,\n   })\n   } catch (error) {\n    console.error(\" Error in Fetching Data: \", error);\n    next(errorHandler(500,\"Failed to Fetch the data.Pls Try again Later.\"));\n   }\n}\n\nexport const updateStatus = async (req, res, next) => {\n   try {\n       const { status } = req.body;\n       const tenantId = req.params.id;\n\n       // Update the status in the database\n       const updatedRequest = await requestData.findByIdAndUpdate(\n           tenantId,\n           { status },\n           { new: true }\n       );\n\n       if (!updatedRequest) {\n           return res.status(404).json({\n               success: false,\n               message: \"Request not found.\"\n           });\n       }\n\n       res.status(200).json({\n           success: true,\n           message: `Status updated to '${status}' successfully.`,\n           updatedRequest\n       });\n   } catch (error) {\n       console.error(\"Error in updateStatus:\", error);\n       next(errorHandler(500, \"Failed to update status. Please try again later.\"));\n   }\n};\n\nexport const getProperty = async (req, res, next) => {\n    try {\n      const { id } = req.params;\n  \n      // Find the RequestData document by its ID and populate the vendorListingId field\n      const responseData = await requestData.find({\"tenantData.userID\" : id}).populate('propertyId');\n \n      if (!responseData) {\n        return res.status(404).json({ message: 'Property not found' });\n      }\n  \n      // Return the populated property data\n      res.status(201).json({\n        success:true,\n        message:\"Data fected successfully\",\n        responseData\n      });\n    } catch (error) {\n      console.error(error);\n      next(errorHandler(500, \"Failed to fetch the Data\"));\n    }\n  };\n"
        },
        {
            "name": "auth.controller.js",
            "size": 2550,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/auth.controller.js",
            "path": "api/controllers/auth.controller.js",
            "content": "import User from '../models/user.model.js';\nimport bcryptjs from 'bcryptjs';\nimport { errorHandler } from '../utils/error.js';\nimport jwt from 'jsonwebtoken';\n\nexport const signup = async (req, res, next) => {\n  const { username, email, password } = req.body;\n  const hashedPassword = bcryptjs.hashSync(password, 10);\n  const newUser = new User({ username, email, password: hashedPassword });\n  try {\n    await newUser.save();\n    res.status(201).json('User created successfully!');\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const signin = async (req, res, next) => {\n  const { email, password } = req.body;\n  try {\n    const validUser = await User.findOne({ email });\n    if (!validUser) return next(errorHandler(404, 'User not found!'));\n    const validPassword = bcryptjs.compareSync(password, validUser.password);\n    if (!validPassword) return next(errorHandler(401, 'Wrong credentials!'));\n    const token = jwt.sign({ id: validUser._id }, process.env.JWT_SECRET);\n    const { password: pass, ...rest } = validUser._doc;\n    res\n      .cookie('access_token', token, { httpOnly: true })\n      .status(200)\n      .json(rest);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const google = async (req, res, next) => {\n  try {\n    const user = await User.findOne({ email: req.body.email });\n    if (user) {\n      const token = jwt.sign({ id: user._id }, process.env.JWT_SECRET);\n      const { password: pass, ...rest } = user._doc;\n      res\n        .cookie('access_token', token, { httpOnly: true })\n        .status(200)\n        .json(rest);\n    } else {\n      const generatedPassword =\n        Math.random().toString(36).slice(-8) +\n        Math.random().toString(36).slice(-8);\n      const hashedPassword = bcryptjs.hashSync(generatedPassword, 10);\n      const newUser = new User({\n        username:\n          req.body.name.split(' ').join('').toLowerCase() +\n          Math.random().toString(36).slice(-4),\n        email: req.body.email,\n        password: hashedPassword,\n        avatar: req.body.photo,\n      });\n      await newUser.save();\n      const token = jwt.sign({ id: newUser._id }, process.env.JWT_SECRET);\n      const { password: pass, ...rest } = newUser._doc;\n      res\n        .cookie('access_token', token, { httpOnly: true })\n        .status(200)\n        .json(rest);\n    }\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const signOut = async (req, res, next) => {\n  try {\n    res.clearCookie('access_token');\n    res.status(200).json('User has been logged out!');\n  } catch (error) {\n    next(error);\n  }\n};\n"
        },
        {
            "name": "razorpay.controller.js",
            "size": 1416,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/razorpay.controller.js",
            "path": "api/controllers/razorpay.controller.js",
            "content": "import crypto from 'crypto';\nimport Razorpay from 'razorpay';\nimport dotenv from 'dotenv';\n\ndotenv.config()\n\nconst razorpayInstance = new Razorpay({\n    key_id: process.env.key_id,\n    key_secret: process.env.key_secret,\n});\n\n\n\nexport const createOrder=async(req,res)=>{\n        const { amount } = req.body;\n        const options = {\n          amount: amount * 100, // Amount in paise (1 INR = 100 paise)\n          currency: \"INR\",\n          receipt: `receipt_${Date.now()}`,\n        };\n\ntry {\n    const order = await razorpayInstance.orders.create(options);\n    res.status(201).json({\n      success: true,\n      order,\n    });\n  } catch (error) {\n    res.status(500).json({\n      success: false,\n      message: \"Unable to create order\",\n      error,\n    });\n  }\n};\n\nexport const verifyPayment=(req, res) => {\n    const { razorpay_order_id, razorpay_payment_id, razorpay_signature } = req.body;\n  \n    const hmac = crypto.createHmac(\"sha256\", key_secret);\n    hmac.update(razorpay_order_id + \"|\" + razorpay_payment_id);\n    const generatedSignature = hmac.digest(\"hex\");\n  \n    if (generatedSignature === razorpay_signature) {\n      res.status(200).json({\n        success: true,\n        message: \"Payment verified successfully\",\n        paymentId: razorpay_payment_id,\n      });\n    } else {\n      res.status(400).json({\n        success: false,\n        message: \"Payment verification failed\",\n      });\n    }\n  };\n  "
        },
        {
            "name": "user.controller.js",
            "size": 2015,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/controllers/user.controller.js",
            "path": "api/controllers/user.controller.js",
            "content": "import bcryptjs from 'bcryptjs';\nimport User from '../models/user.model.js';\nimport { errorHandler } from '../utils/error.js';\nimport Listing from '../models/listing.model.js';\n\nexport const test = (req, res) => {\n  res.json({\n    message: 'Api route is working!',\n  });\n};\n\nexport const updateUser = async (req, res, next) => {\n  if (req.user.id !== req.params.id)\n    return next(errorHandler(401, 'You can only update your own account!'));\n  try {\n    if (req.body.password) {\n      req.body.password = bcryptjs.hashSync(req.body.password, 10);\n    }\n\n    const updatedUser = await User.findByIdAndUpdate(\n      req.params.id,\n      {\n        $set: {\n          username: req.body.username,\n          email: req.body.email,\n          password: req.body.password,\n          avatar: req.body.avatar,\n        },\n      },\n      { new: true }\n    );\n\n    const { password, ...rest } = updatedUser._doc;\n\n    res.status(200).json(rest);\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const deleteUser = async (req, res, next) => {\n  if (req.user.id !== req.params.id)\n    return next(errorHandler(401, 'You can only delete your own account!'));\n  try {\n    await User.findByIdAndDelete(req.params.id);\n    res.clearCookie('access_token');\n    res.status(200).json('User has been deleted!');\n  } catch (error) {\n    next(error);\n  }\n};\n\nexport const getUserListings = async (req, res, next) => {\n  if (req.user.id === req.params.id) {\n    try {\n      const listings = await Listing.find({ userRef: req.params.id });\n      res.status(200).json(listings);\n    } catch (error) {\n      next(error);\n    }\n  } else {\n    return next(errorHandler(401, 'You can only view your own listings!'));\n  }\n};\n\nexport const getUser = async (req, res, next) => {\n  try {\n    \n    const user = await User.findById(req.params.id);\n  \n    if (!user) return next(errorHandler(404, 'User not found!'));\n  \n    const { password: pass, ...rest } = user._doc;\n  \n    res.status(200).json(rest);\n  } catch (error) {\n    next(error);\n  }\n};\n"
        },
        {
            "name": "index.js",
            "size": 1697,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/index.js",
            "path": "api/index.js",
            "content": "import express from 'express';\nimport mongoose from 'mongoose';\nimport dotenv from 'dotenv';\nimport userRouter from './routes/user.route.js';\nimport authRouter from './routes/auth.route.js';\nimport listingRouter from './routes/listing.route.js';\nimport listingVendor from './routes/vendor.route.js';\nimport addrequest from './routes/request.route.js'\nimport tenant from './routes/tenant.route.js'\nimport review from './routes/review.route.js'\nimport addPayment from './routes/razorpay.route.js'\nimport cookieParser from 'cookie-parser';\nimport path from 'path';\nimport cors from 'cors';\ndotenv.config()\n\n\nconst PORT = process.env.PORT || 5000;\n\nmongoose\n  .connect(process.env.MONGO)\n  .then(() => {\n    console.log('Connected to MongoDB!');\n  })\n  .catch((err) => {\n    console.log(err);\n  });\n\nconst __dirname = path.resolve();\n\nconst app = express();\n\napp.use(express.json());\n\napp.use(cors());\n\n\napp.use(cookieParser());\n\n\napp.listen(PORT, () => {\n  console.log('Server is running on port !',{PORT});\n});\n\napp.use('/api/user', userRouter);\napp.use('/api/auth', authRouter);\napp.use('/api/listing', listingRouter);\napp.use('/api/vendor', listingVendor);\napp.use('/api/tenant',tenant);\napp.use('/api/review',review);\napp.use('/api/request',addrequest);\napp.use(\"/api/payment\", addPayment);\n\n\n\napp.use(express.static(path.join(__dirname, '/client/dist')));\n\napp.get('*', (req, res) => {\n  res.sendFile(path.join(__dirname, 'client', 'dist', 'index.html'));\n})\n\napp.use((err, req, res, next) => {\n  const statusCode = err.statusCode || 500;\n  const message = err.message || 'Internal Server Error';\n  return res.status(statusCode).json({\n    success: false,\n    statusCode,\n    message,\n  });\n});\n"
        },
        {
            "name": "user.model.js",
            "size": 555,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/user.model.js",
            "path": "api/models/user.model.js",
            "content": "import mongoose from 'mongoose';\n\nconst userSchema = new mongoose.Schema(\n  {\n    username: {\n      type: String,\n      required: true,\n      unique: true,\n    },\n    email: {\n      type: String,\n      required: true,\n      unique: true,\n    },\n    password: {\n      type: String,\n      required: true,\n    },\n    avatar:{\n      type: String,\n      default: \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\"\n    },\n  },\n  { timestamps: true }\n);\n\nconst User = mongoose.model('User', userSchema);\n\nexport default User;\n"
        },
        {
            "name": "tenant.model.js",
            "size": 1019,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/tenant.model.js",
            "path": "api/models/tenant.model.js",
            "content": "import mongoose, { Schema } from \"mongoose\";\n\n\nconst tenantSchema = new mongoose.Schema(\n    {\n        name: {\n            type: String,\n            required: true,\n        },\n        userImg: {\n            type: String\n\n        },\n        userID: {\n            type: Schema.Types.ObjectId,\n        },\n        address: {\n            type: String,\n            required: true,\n        },\n        designation: {\n            type: String,\n            required: true,\n        },\n        aadhaarNo: {\n            type: Number,\n            required: true,\n        },\n        organization: {\n            type: String,\n            required: true,\n        },\n        skills: {\n            type: Array,\n            required: true,\n        },\n        experience: {\n            type: Number,\n            required: true,\n        },\n        aadhaarURL: {\n            type: String,\n        }\n    },\n    { timestamps: true }\n);\n\nconst tenantProfile = mongoose.model('tenantProfile',\n    tenantSchema);\n\nexport default tenantProfile;    "
        },
        {
            "name": "listing.model.js",
            "size": 1044,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/listing.model.js",
            "path": "api/models/listing.model.js",
            "content": "import mongoose from 'mongoose';\n\nconst listingSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n    },\n    description: {\n      type: String,\n      required: true,\n    },\n    address: {\n      type: String,\n      required: true,\n    },\n    regularPrice: {\n      type: Number,\n      required: true,\n    },\n    discountPrice: {\n      type: Number,\n      required: true,\n    },\n    bathrooms: {\n      type: Number,\n      required: true,\n    },\n    bedrooms: {\n      type: Number,\n      required: true,\n    },\n    furnished: {\n      type: Boolean,\n      required: true,\n    },\n    parking: {\n      type: Boolean,\n      required: true,\n    },\n    type: {\n      type: String,\n      required: true,\n    },\n    offer: {\n      type: Boolean,\n      required: true,\n    },\n    imageUrls: {\n      type: Array,\n      required: true,\n    },\n    userRef: {\n      type: String,\n      required: true,\n    },\n  },\n  { timestamps: true }\n);\n\nconst Listing = mongoose.model('Listing', listingSchema);\n\nexport default Listing;\n"
        },
        {
            "name": "vendor.model.js",
            "size": 1785,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/vendor.model.js",
            "path": "api/models/vendor.model.js",
            "content": "import mongoose, { Schema, isValidObjectId } from 'mongoose';\n\nconst vendorSchema = new mongoose.Schema(\n  {\n    vendorId: {\n      type: Schema.Types.ObjectId\n\n    },\n    name: {\n      type: String,\n      required: true,\n\n    },\n    type: {\n      type: String,\n    },\n    description: {\n      type: String,\n\n    },\n    address: {\n      type: String,\n      required: true,\n    },\n    state: {\n      type: String,\n      required: true,\n    },\n    city: {\n      type: String,\n      required: true,\n    },\n    rent: {\n      type: Number,\n      required: true,\n    },\n    security: {\n      type: Number,\n      required: true,\n    },\n    marketDistance: {\n      type: Number,\n      required: true,\n    },\n    availRooms: {\n      type: Number,\n      required: true,\n    },\n    totalRooms: {\n      type: Number,\n      required: true,\n    },\n    // to do 'Wi-Fi', 'Parking', 'Laundry', 'Mess', 'AC', 'Gym', 'Furnished','Electric Backup','House Keeping'\n    wifi: {\n      type: Boolean,\n      default: false,\n    },\n    parking: {\n      type: Boolean,\n      default: false,\n    },\n    laundry: {\n      type: Boolean,\n      default: false,\n    },\n    mess: {\n      type: Boolean,\n      default: false,\n    },\n    ac: {\n      type: Boolean,\n      default: false,\n    },\n    gym: {\n      type: Boolean,\n      default: false,\n    },\n    furnished: {\n      type: Boolean,\n      default: false,\n    },\n    electricBackup: {\n      type: Boolean,\n      default: false,\n    },\n    houseKeeping: {\n      type: Boolean,\n      default: false,\n    },\n    imageURL: {\n      type: Array,\n    },\n    tenants: {\n      type: Array,\n    },\n    calendar: {\n      type: String,\n    }\n  },\n  { timestamps: true }\n);\n\nconst VendorListing = mongoose.model(\"VendorListing\", vendorSchema);\n\nexport default VendorListing;\n"
        },
        {
            "name": "review.model.js",
            "size": 394,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/review.model.js",
            "path": "api/models/review.model.js",
            "content": "import mongoose, { Schema } from \"mongoose\";\n\n\nconst review = new mongoose.Schema(\n    {\n        propertyId: {\n            type: mongoose.Schema.Types.ObjectId,\n            ref: 'VendorListing',\n\n        },\n\n        review: {\n            type: Array,\n\n        },\n\n\n    },\n    { timestamps: true }\n);\n\nconst reviewData = mongoose.model('reviewData',\n    review);\n\n\nexport default reviewData;    "
        },
        {
            "name": "request.model.js",
            "size": 587,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/models/request.model.js",
            "path": "api/models/request.model.js",
            "content": "import mongoose, { Schema } from \"mongoose\";\n\n\nconst request = new mongoose.Schema(\n    {\n        vendorId: {\n            type: String,\n            required: true,\n        },\n        tenantData: {\n            type: Object,\n            required: true,\n        },\n        status: {\n            type: String,\n            default: 'pending'\n\n        },\n        propertyId: {\n            type: mongoose.ObjectId,\n            ref: 'VendorListing',\n\n        }\n\n    },\n    { timestamps: true }\n);\n\nconst requestData = mongoose.model('requestData',\n    request);\n\n\nexport default requestData;    "
        },
        {
            "name": "listing.route.js",
            "size": 505,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/listing.route.js",
            "path": "api/routes/listing.route.js",
            "content": "import express from 'express';\nimport { createListing, deleteListing, updateListing, getListing, getListings } from '../controllers/listing.controller.js';\nimport { verifyToken } from '../utils/verifyUser.js';\n\nconst router = express.Router();\n\nrouter.post('/create', verifyToken, createListing);\nrouter.delete('/delete/:id', verifyToken, deleteListing);\nrouter.post('/update/:id', verifyToken, updateListing);\nrouter.get('//get:id', getListing);\nrouter.get('/get', getListings);\n\n\nexport default router;\n"
        },
        {
            "name": "review.route.js",
            "size": 239,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/review.route.js",
            "path": "api/routes/review.route.js",
            "content": "import express from 'express';\nimport {addReview,getReviews} from '../controllers/review.controller.js';\nconst router = express.Router();\n\nrouter.post('/addreview',addReview);\nrouter.get('/getreview/:id',getReviews);\nexport default router;"
        },
        {
            "name": "user.route.js",
            "size": 484,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/user.route.js",
            "path": "api/routes/user.route.js",
            "content": "import express from 'express';\nimport { deleteUser, test, updateUser,  getUserListings, getUser} from '../controllers/user.controller.js';\nimport { verifyToken } from '../utils/verifyUser.js';\n\n\nconst router = express.Router();\n\nrouter.get('/test', test);\nrouter.post('/update/:id', verifyToken, updateUser)\nrouter.delete('/delete/:id', verifyToken, deleteUser)\nrouter.get('/listings/:id', verifyToken, getUserListings)\nrouter.get('/:id', verifyToken, getUser)\n\nexport default router;"
        },
        {
            "name": "tenant.route.js",
            "size": 241,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/tenant.route.js",
            "path": "api/routes/tenant.route.js",
            "content": "import express from \"express\";\nimport { addTenant,getTenant } from \"../controllers/tenant.controller.js\";\n\nconst router=express.Router();\n\nrouter.post('/addtenant',addTenant);\nrouter.get('/gettenant/:id',getTenant);\n\n\nexport default router;\n"
        },
        {
            "name": "request.route.js",
            "size": 360,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/request.route.js",
            "path": "api/routes/request.route.js",
            "content": "import express from \"express\";\nimport { addRequest,getRequest,updateStatus,getProperty} from \"../controllers/request.controller.js\";\n\nconst router=express.Router();\n\nrouter.post('/addrequest',addRequest);\nrouter.get('/getrequest/:id',getRequest);\nrouter.put('/updateStatus/:id',updateStatus);\nrouter.get('/getproperty/:id',getProperty);\n\nexport default router;"
        },
        {
            "name": "razorpay.route.js",
            "size": 299,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/razorpay.route.js",
            "path": "api/routes/razorpay.route.js",
            "content": "import express from \"express\";\nimport Razorpay from \"razorpay\";\nimport { createOrder, verifyPayment } from \"../controllers/razorpay.controller.js\";\n\nconst router = express.Router();\n\n\nrouter.post('/create-order', createOrder);\n\nrouter.post('/verify-payment', verifyPayment);\n\nexport default router;\n"
        },
        {
            "name": "vendor.route.js",
            "size": 656,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/vendor.route.js",
            "path": "api/routes/vendor.route.js",
            "content": "import express from \"express\";\nimport { addVendor, removeVendor, updateVendor, getVendor, getVendors,addProfile,getNest,getCount } from '../controllers/vendor.controller.js';\nimport { verifyToken } from \"../utils/verifyUser.js\";\n\nconst router = express.Router();\n\nrouter.post('/addvendor', addVendor);\nrouter.delete('/removevendor/:id', verifyToken, removeVendor);\nrouter.put('/updatevendor/:id', verifyToken, updateVendor);\nrouter.get('/getvendor/:id', getVendor);\nrouter.get('/getnest/:id', getNest);\nrouter.get('/allvendors', getVendors);\nrouter.put('/addprofile/:id',addProfile);\nrouter.get('/getcount/:organization',getCount);\n\nexport default router;\n"
        },
        {
            "name": "auth.route.js",
            "size": 302,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/routes/auth.route.js",
            "path": "api/routes/auth.route.js",
            "content": "import express from 'express';\nimport { google, signOut, signin, signup } from '../controllers/auth.controller.js';\n\nconst router = express.Router();\n\nrouter.post(\"/signup\", signup);\nrouter.post(\"/signin\", signin);\nrouter.post('/google', google);\nrouter.get('/signout', signOut)\n\nexport default router;"
        },
        {
            "name": "verifyUser.js",
            "size": 676,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/utils/verifyUser.js",
            "path": "api/utils/verifyUser.js",
            "content": "import jwt from 'jsonwebtoken';\nimport dotenv from 'dotenv';\nimport cookieParser from 'cookie-parser';\nimport express from 'express';\nimport { errorHandler } from './error.js';\n\ndotenv.config(); // Initialize environment variables\n\nconst app = express();\napp.use(cookieParser()); // Ensure cookie-parser is used\n\nexport const verifyToken = (req, res, next) => {\n  const token = req.cookies.access_token;\n\n  if (!token) return next(errorHandler(401, 'Unauthorized: No token provided'));\n\n  jwt.verify(token, process.env.JWT_SECRET, (err, user) => {\n    if (err) return next(errorHandler(403, 'Forbidden: Invalid or expired token'));\n\n    req.user = user;\n    next();\n  });\n};\n\n"
        },
        {
            "name": "error.js",
            "size": 163,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/api/utils/error.js",
            "path": "api/utils/error.js",
            "content": "export const errorHandler = (statusCode, message) => {\n  const error = new Error();\n  error.statusCode = statusCode;\n  error.message = message;\n  return error;\n};\n"
        },
        {
            "name": "index.html",
            "size": 480,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/index.html",
            "path": "client/index.html",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>CampusNest</title>\n    <link rel=\"icon\" href=\"./main-logo.png\" type=\"image/x-icon\" />\n    <link\n  rel=\"stylesheet\"\n  href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css\"\n/>\n\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.jsx\"></script>\n  </body>\n</html>\n"
        },
        {
            "name": "postcss.config.js",
            "size": 80,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/postcss.config.js",
            "path": "client/postcss.config.js",
            "content": "export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n"
        },
        {
            "name": "package.json",
            "size": 1495,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/package.json",
            "path": "client/package.json",
            "content": "{\n  \"name\": \"client\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"lint\": \"eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0\",\n    \"preview\": \"vite preview\"\n  },\n  \"dependencies\": {\n    \"@emotion/react\": \"^11.13.3\",\n    \"@emotion/styled\": \"^11.13.0\",\n    \"@mui/material\": \"^6.1.7\",\n    \"@mui/styled-engine-sc\": \"^6.1.7\",\n    \"@mui/x-charts\": \"^7.22.2\",\n    \"@reduxjs/toolkit\": \"^1.9.7\",\n    \"axios\": \"^1.7.7\",\n    \"firebase\": \"^10.14.0\",\n    \"framer-motion\": \"^11.11.17\",\n    \"mern-estate\": \"file:..\",\n    \"razorpay\": \"^2.9.5\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-hot-toast\": \"^2.4.1\",\n    \"react-icons\": \"^4.12.0\",\n    \"react-leaflet\": \"^4.2.1\",\n    \"react-material-ui-carousel\": \"^3.4.2\",\n    \"react-persist\": \"^1.0.2\",\n    \"react-redux\": \"^8.1.3\",\n    \"react-router-dom\": \"^6.26.2\",\n    \"react-simple-typewriter\": \"^5.0.1\",\n    \"redux-persist\": \"^6.0.0\",\n    \"styled-components\": \"^6.1.13\",\n    \"swiper\": \"^10.3.1\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/line-clamp\": \"^0.4.4\",\n    \"@types/react\": \"^18.2.15\",\n    \"@types/react-dom\": \"^18.2.7\",\n    \"@vitejs/plugin-react-swc\": \"^3.3.2\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"eslint\": \"^8.45.0\",\n    \"eslint-plugin-react\": \"^7.32.2\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.3\",\n    \"postcss\": \"^8.4.47\",\n    \"tailwindcss\": \"^3.4.13\",\n    \"vite\": \"^4.4.5\"\n  }\n}\n"
        },
        {
            "name": ".eslintrc.cjs",
            "size": 526,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/.eslintrc.cjs",
            "path": "client/.eslintrc.cjs",
            "content": "module.exports = {\n  root: true,\n  env: { browser: true, es2020: true },\n  extends: [\n    'eslint:recommended',\n    'plugin:react/recommended',\n    'plugin:react/jsx-runtime',\n    'plugin:react-hooks/recommended',\n  ],\n  ignorePatterns: ['dist', '.eslintrc.cjs'],\n  parserOptions: { ecmaVersion: 'latest', sourceType: 'module' },\n  settings: { react: { version: '18.2' } },\n  plugins: ['react-refresh'],\n  rules: {\n    'react-refresh/only-export-components': [\n      'warn',\n      { allowConstantExport: true },\n    ],\n  },\n}\n"
        },
        {
            "name": "App.jsx",
            "size": 2767,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/App.jsx",
            "path": "client/src/App.jsx",
            "content": "import { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport SignIn from './pages/SignIn.jsx';\nimport SignUp from './pages/SignUp.jsx';\nimport About from './pages/About.jsx';\nimport Profile from './pages/Profile.jsx';\nimport Header from './components/Header.jsx';\nimport PrivateRoute from './components/PrivateRoute.jsx';\nimport Search from './pages/Search.jsx';\nimport RegisterVendor from './pages/RegisterVendor.jsx';\nimport Land from './pages/Land.jsx';\nimport BuildProfile from './pages/BuildProfile.jsx';\nimport Dash from './pages/vendor/Dash.jsx';\nimport Property from './pages/Property.jsx';\nimport Showlist from './pages/vendor/Showlist.jsx';\nimport Showtenant from './pages/vendor/Showtenant.jsx';\nimport LandlordContact from './components/LandlordContact.jsx';\nimport Showstatus from './pages/userDash/Showstatus.jsx';\nimport Shownest from './pages/userDash/Shownest.jsx';\nimport Footer from './components/Footer.jsx';\nimport MapSearch from './components/MapSearch.jsx';\nimport Statistics from './components/Statistics.jsx';\nimport Loader from './components/Loader.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\n// import { ToastContainer, toast } from \"react-toastify\";\n\n\nexport default function App() {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n\n    const timer = setTimeout(() => setLoading(false), 3000);\n    return () => clearTimeout(timer);\n\n  }, []);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <BrowserRouter>\n      <Header />\n      <Routes>\n        <Route path='/' element={<Land />} />\n        <Route path='/sign-in' element={<SignIn />} />\n        <Route path='/sign-up' element={<SignUp />} />\n        <Route path='/about' element={<About />} />\n        <Route path='/search' element={<Search />} />\n        <Route path='/vend' element={<RegisterVendor />} />\n        <Route path='/property/:listingId' element={<Property />} />\n        {/* <Route path='/listing/:listingId' element={<Listing />} /> */}\n        <Route path='/build' element={<BuildProfile />} />\n        <Route path='/show' element={<Dash />} />\n        <Route path='/viewlist' element={<Showlist />} />\n        <Route path='/view-tenants' element={<Showtenant />} />\n        <Route path='/rent' element={<Showstatus />} />\n        <Route path=\"/landlord-contact\" element={<LandlordContact />} />\n        <Route path=\"/nest\" element={<Shownest />} />\n        <Route path=\"/map-search\" element={<MapSearch />} />\n        <Route path=\"/view-dash\" element={<Statistics />} />\n        <Route element={<PrivateRoute />}>\n          <Route path='/profile' element={<Profile />} />\n        </Route>\n      </Routes>\n      <Footer />\n      <Toaster/>\n    </BrowserRouter>\n  );\n}\n"
        },
        {
            "name": "CommentForm.jsx",
            "size": 2982,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/CommentForm.jsx",
            "path": "client/src/components/CommentForm.jsx",
            "content": "import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport url from '../url.jsx';\n\nconst CommentForm = ({ propertyID, onCommentAdded }) => {\n  const [comment, setComment] = useState(\"\");\n  const [rating, setRating] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [success, setSuccess] = useState(\"\");\n\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const id = userDetails._id;\n  \n\n  // Handle form submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!comment.trim()) {\n      setError(\"Comment cannot be empty.\");\n      return;\n    }\n\n    if (rating < 1 || rating > 5) {\n      setError(\"Rating must be between 1 and 5.\");\n      return;\n    }\n\n    setLoading(true);\n    setError(\"\");\n    setSuccess(\"\");\n\n    try {\n      const response = await axios.post(`${url}/api/review/addreview`, {\n        \"propertyId\":propertyID,\n        \"userId\":id,\n        \"comments\":comment,\n        \"rating\":rating,\n      });\n\n      setSuccess(\"Comment and rating added successfully!\");\n      setComment(\"\");\n      setRating(1);\n      onCommentAdded(response.data.comments); // Update parent component\n    } catch (err) {\n      setError(\"Failed to add comment and rating. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6 my-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">Add a Comment</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"mb-4\">\n          <textarea\n            className=\"w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500\"\n            rows=\"4\"\n            placeholder=\"Write your comment here...\"\n            value={comment}\n            onChange={(e) => setComment(e.target.value)}\n          ></textarea>\n        </div>\n\n        <div className=\"mb-4\">\n          <label className=\"block text-gray-700 mb-2\">Rating (1 to 5):</label>\n          <select\n            className=\"w-full p-3 border rounded-lg focus:outline-none focus:border-blue-500\"\n            value={rating}\n            onChange={(e) => setRating(Number(e.target.value))}\n          >\n            {[1, 2, 3, 4, 5].map((value) => (\n              <option key={value} value={value}>\n                {value}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {error && <p className=\"text-red-600 mb-2\">{error}</p>}\n        {success && <p className=\"text-green-600 mb-2\">{success}</p>}\n\n        <button\n          type=\"submit\"\n          className={`w-full py-2 px-4 bg-blue-500 text-white rounded-lg shadow-md hover:bg-blue-600 ${\n            loading ? \"opacity-50 cursor-not-allowed\" : \"\"\n          }`}\n          disabled={loading}\n        >\n          {loading ? \"Submitting...\" : \"Add Comment\"}\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CommentForm;\n"
        },
        {
            "name": "Footer.jsx",
            "size": 3477,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Footer.jsx",
            "path": "client/src/components/Footer.jsx",
            "content": "import React from 'react';\n\nfunction Footer() {\n  return (\n    <>\n      <footer className=\"mt-64 footer footer-center p-10 text-white bg-gradient-to-r from-slate-700 via-slate-800 to-slate-900 \">\n        \n        {/* Brand Name */}\n        <div className=\"font-bold text-lg md:text-3xl text-center mb-6 tracking-wide\">\n          <span className=\"text-red-500\">Campus</span>\n          <span className=\"text-white\">Nest</span>\n        </div>\n\n        {/* Navigation Links */}\n        <nav className=\"flex flex-wrap justify-center gap-6 mb-5 text-lg\">\n          {['Home', 'About Us', 'Properties', 'Blog', 'Contact Us', 'FAQ'].map((link, index) => (\n            <a\n              key={index}\n              className=\"link link-hover no-underline text-white hover:text-blue-400 transition-colors duration-300\"\n              href={`#${link.replace(' ', '').toLowerCase()}`}\n            >\n              {link}\n            </a>\n          ))}\n        </nav>\n\n        {/* Social Media Links with Icons */}\n        <nav className=\"flex justify-center gap-6 mb-6 text-xl\">\n          {[\n            { name: 'Twitter', color: 'text-sky-400', icon: 'fab fa-twitter' },\n            { name: 'YouTube', color: 'text-red-600', icon: 'fab fa-youtube' },\n            { name: 'Facebook', color: 'text-blue-600', icon: 'fab fa-facebook' },\n            { name: 'Instagram', color: 'text-pink-500', icon: 'fab fa-instagram' },\n            { name: 'LinkedIn', color: 'text-blue-700', icon: 'fab fa-linkedin' },\n          ].map((social, index) => (\n            <a\n              key={index}\n              href=\"#\"\n              aria-label={social.name}\n              className={`hover:${social.color} transition-colors duration-300`}\n            >\n              <i className={social.icon}></i>\n            </a>\n          ))}\n        </nav>\n\n        {/* Contact Information */}\n        <div className=\"text-center mb-5 space-y-1\">\n          <p className=\"text-gray-400 hover:text-white transition-colors duration-300\">\ud83d\udcde +91 9999999999</p>\n          <p className=\"text-gray-400 hover:text-white transition-colors duration-300\">\u2709\ufe0f campusnest@gmail.com</p>\n        </div>\n\n        {/* Quick Links Section */}\n        <div className=\"flex flex-col md:flex-row justify-center gap-72 mb-6 text-left\">\n          <div className=\"space-y-2\">\n            <h4 className=\"font-semibold text-white mb-3 mx-9\">Company</h4>\n            {['About   ', 'Careers  ', 'Press'].map((item, index) => (\n              <a\n                key={index}\n                className=\"link link-hover text-gray-400 hover:text-blue-400 transition-colors duration-300\"\n                href=\"#\"\n              >\n                {item}\n              </a>\n            ))}\n          </div>\n          <div className=\"space-y-2\">\n            <h4 className=\"font-semibold text-white mb-3 mx-28\">Support</h4>\n            {['Help Center', 'Privacy Policy', 'Terms of Service'].map((item, index) => (\n              <a\n                key={index}\n                className=\"link link-hover text-gray-400 hover:text-blue-400 transition-colors duration-300\"\n                href=\"#\"\n              >\n                {item}\n              </a>\n            ))}\n          </div>\n        </div>\n\n        {/* Copyright */}\n        <aside className=\"text-center text-gray-400 hover:text-white transition-colors duration-300\">\n          <p>\u00a9 2024 CampusNest. All rights reserved.</p>\n        </aside>\n      </footer>\n    </>\n  );\n}\n\nexport default Footer;\n"
        },
        {
            "name": "LandlordContact.jsx",
            "size": 2539,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/LandlordContact.jsx",
            "path": "client/src/components/LandlordContact.jsx",
            "content": "import React, { useState } from 'react';\nimport { Card, CardContent, Typography, TextField, Button } from '@mui/material';\n\nconst LandlordContact = () => {\n  // Default landlord information\n  const landlordInfo = {\n    name: 'Rajesh Kumar',\n    phone: '+91 9876543210',\n    email: 'asch20080@gmail.com',\n    address: '456, MG Road, Bengaluru, Karnataka, India',\n    occupation: 'Real Estate Manager',\n    experience: '10 years of property management experience',\n    rating: '4.8/5',\n  };\n\n  const [message, setMessage] = useState('');\n\n  // Handler for message input\n  const handleMessageChange = (event) => {\n    setMessage(event.target.value);\n  };\n\n  // Handler for sending email\n  const handleSendMessage = () => {\n    // Open the user's email client with the message pre-filled\n    window.location.href = `mailto:${landlordInfo.email}?subject=Inquiry about Property&body=${encodeURIComponent(\n      message\n    )}`;\n  };\n\n  return (\n    <Card sx={{ maxWidth: 600, margin: 'auto', mt: 4, p: 2 }}>\n      <CardContent>\n        <Typography variant=\"h5\" component=\"div\" sx={{ mb: 2 }}>\n          Landlord Contact Information\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Name:</strong> {landlordInfo.name}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Phone:</strong> {landlordInfo.phone}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Email:</strong> {landlordInfo.email}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Address:</strong> {landlordInfo.address}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Occupation:</strong> {landlordInfo.occupation}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Experience:</strong> {landlordInfo.experience}\n        </Typography>\n        <Typography variant=\"body1\">\n          <strong>Rating:</strong> {landlordInfo.rating}\n        </Typography>\n\n        {/* Message Input */}\n        <TextField\n          label=\"Your Message\"\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          rows={4}\n          sx={{ mt: 3 }}\n          value={message}\n          onChange={handleMessageChange}\n        />\n\n        {/* Send Message Button */}\n        <Button\n          onClick={handleSendMessage}\n          variant=\"contained\"\n          color=\"primary\"\n          sx={{ mt: 3 }}\n        >\n          Send Message\n        </Button>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default LandlordContact;\n"
        },
        {
            "name": "CommentSection.jsx",
            "size": 2752,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/CommentSection.jsx",
            "path": "client/src/components/CommentSection.jsx",
            "content": "import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { FaStar } from \"react-icons/fa\";\nimport url from '../url.jsx';\n\nconst CommentsSection = ({ propertyID }) => {\n  const [comments, setComments] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  // Fetch comments and ratings from the API\n  const fetchComments = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${url}/api/review/getreview/${propertyID}`);\n      const reviews = response.data.reviews.review;\n      const commentsArray = reviews.map((item) => item.comments);\n      const ratingsArray = reviews.map((item) => item.rating);\n      setComments(commentsArray);\n      setRatings(ratingsArray);\n      setLoading(false);\n    } catch (err) {\n      setError(\"Failed to load comments. Please try again later.\");\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (propertyID) fetchComments();\n  }, [propertyID]);\n\n  // Helper function to render stars\n  const renderStars = (rating) => {\n    return Array(5)\n      .fill(0)\n      .map((_, index) => (\n        <FaStar\n          key={index}\n          className={`${\n            index < rating ? \"text-yellow-500\" : \"text-gray-300\"\n          } text-lg`}\n        />\n      ));\n  };\n\n  // Loading and Error UI\n  if (loading) {\n    return (\n      <div className=\"flex justify-center items-center p-4\">\n        <div className=\"loader\"></div>\n        <span className=\"ml-2 text-gray-600\">Loading comments...</span>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-100 p-4 rounded-lg\">\n        <p className=\"text-red-700 font-bold text-xl text-center\">No Comments Yet</p>\n      </div>\n    );\n  }\n\n  // Comments and Ratings UI\n  return (\n    <div className=\"bg-white shadow-md rounded-lg p-6 my-4\">\n      <h2 className=\"text-xl font-semibold mb-4 text-gray-800\">\n        User Reviews\n      </h2>\n      {comments.length > 0 ? (\n        <ul className=\"space-y-4\">\n          {comments.map((comment, index) => (\n            <li\n              key={index}\n              className=\"bg-gray-100 p-4 rounded-lg border-l-4 border-blue-500\"\n            >\n              <div className=\"flex items-center mb-2\">\n                {renderStars(ratings[index])}\n                <span className=\"ml-2 text-sm text-gray-600\">\n                  {ratings[index]} / 5\n                </span>\n              </div>\n              <p className=\"text-gray-700\">{comment}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"text-gray-600 text-center\">No comments yet.</p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentsSection;\n"
        },
        {
            "name": "Header.jsx",
            "size": 3030,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Header.jsx",
            "path": "client/src/components/Header.jsx",
            "content": "import { FaSearch } from 'react-icons/fa';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\n\nexport default function Header() {\n  const { currentUser } = useSelector((state) => state.user);\n  const [searchTerm, setSearchTerm] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set('searchTerm', searchTerm);\n    const searchQuery = urlParams.toString();\n    navigate(`/search?${searchQuery}`);\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.search);\n    const searchTermFromUrl = urlParams.get('searchTerm');\n    if (searchTermFromUrl) {\n      setSearchTerm(searchTermFromUrl);\n    }\n  }, [location.search]);\n\n  return (\n    <header className=\"bg-[#f4f4f4] shadow-md shadow-red-200 mb-20\">\n      <div className=\"container mx-auto flex items-center justify-between p-4\">\n      <Link to=\"/\" className=\"flex items-center hover:no-underline hover:scale-105 transition-transform duration-200 ease-in-out\">\n  <h1 className=\"text-white font-sans font-bold text-2xl\">\n    <span className=\"text-red-500\">Campus</span>\n    <span className=\"text-black\">Nest</span>\n  </h1>\n</Link>\n\n\n        <form\n          onSubmit={handleSubmit}\n          className=\"flex items-center bg-white rounded-lg shadow-md px-3 py-2\"\n        >\n          <input\n            type=\"text\"\n            placeholder=\"Search...\"\n            className=\"w-32 md:w-64 outline-none px-2 text-gray-700\"\n             minlength=\"2\"\n            maxlength=\"12\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <button type=\"submit\" className=\"text-gray-600 hover:text-gray-800\">\n            <FaSearch className=\"w-5 h-5\" />\n          </button>\n        </form>\n\n        <div className=\"flex items-center gap-6\">\n          <Link to=\"/\" className=\"text-white font-medium\">\n            <button className=\"bg-red-500 hover:bg-red-600 hover:scale-105 hover:border-e-zinc-300 text-white px-4 py-2 rounded-lg shadow\">\n              Home\n            </button>\n          </Link>\n\n          <Link to=\"/about\" className=\"text-white font-medium\">\n            <button onClick={() => navigate('/about')} className=\"bg-blue-500 hover:bg-blue-600 hover:scale-105 text-white px-4 py-2 rounded-lg shadow\">\n              About\n            </button>\n          </Link>\n\n          <Link to=\"/profile\">\n            {currentUser ? (\n              <img\n                className=\"w-10 h-10 rounded-full border-2 border-black object-cover\"\n                src={currentUser.avatar}\n                alt=\"profile\"\n              />\n            ) : (\n              <button className=\"bg-green-500 hover:bg-green-600 text-white px-4 py-2 rounded-lg shadow\">\n                Sign in\n              </button>\n            )}\n          </Link>\n        </div>\n      </div>\n    </header>\n  );\n}\n"
        },
        {
            "name": "About.jsx",
            "size": 8139,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/About.jsx",
            "path": "client/src/components/About.jsx",
            "content": "import React from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Navigation, Pagination, Autoplay } from 'swiper/modules';\n\nconst About = () => {\n  return (\n    <section className=\"py-16 my-10 bg-gray-100\">\n      <div className=\"container mx-auto px-4\">\n        <Swiper\n          modules={[Navigation, Pagination, Autoplay]}\n          navigation\n          pagination={{ clickable: true }}\n          autoplay={{ delay: 3000 }}\n          spaceBetween={20}\n          slidesPerView={1}\n          breakpoints={{\n            640: { slidesPerView: 1 },\n            768: { slidesPerView: 2 },\n            1024: { slidesPerView: 4 },\n          }}\n        >\n          {/* Card 1 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1475938/pexels-photo-1475938.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Unbiased Opinion\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Affordable Pricing</h2>\n                <p>CampusNest offers budget-friendly living spaces, ensuring quality accommodation without financial strain</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 2 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1396132/pexels-photo-1396132.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Choose Roommate\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Virtual Tours & Scheduling</h2>\n                <p>Request virtual property tours or schedule meetings easily, a feature not commonly offered elsewhere.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 3 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1475938/pexels-photo-1475938.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"PG Student Details\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Authentic Reviews</h2>\n                <p>Only verified tenants can leave reviews, ensuring genuine and reliable feedback for every property.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 4 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/186077/pexels-photo-186077.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Suitability Score\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Request Booking Feature</h2>\n                <p>Landlords can vet tenants through a booking request system, approving or rejecting profiles with ease.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 5 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/261102/pexels-photo-261102.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Amenities Info\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Amenities Info</h2>\n                <p>Discover the amenities provided by each PG, including Wi-Fi, meals, laundry, and more.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n          {/* Card 6 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1396132/pexels-photo-1396132.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Choose Roommate\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Secure Payments</h2>\n                <p>CampusNest offers a seamless payment experience with integrated Razorpay for secure token and security money transactions.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 7 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/1475938/pexels-photo-1475938.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"PG Student Details\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Vendor-Friendly Dashboard</h2>\n                <p>Landlords and vendors benefit from a dedicated dashboard to track property performance and statistics effortlessly.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n\n          {/* Card 8 */}\n          <SwiperSlide>\n            <div className=\"relative rounded-lg overflow-hidden shadow-lg hover:shadow-2xl transition-shadow duration-300 ease-in-out h-96\">\n              <img\n                src=\"https://images.pexels.com/photos/186077/pexels-photo-186077.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\"\n                alt=\"Suitability Score\"\n                className=\"w-full h-full object-cover\"\n              />\n              <div className=\"absolute inset-0 bg-gradient-to-t from-black via-transparent to-black opacity-75\"></div>\n              <div className=\"absolute bottom-0 p-6 text-white\">\n                <h2 className=\"text-2xl font-bold mb-2\">Advanced Search Filters</h2>\n                <p>Find properties that meet your specific needs with filters for amenities and other unique preferences.</p>\n              </div>\n            </div>\n          </SwiperSlide>\n        </Swiper>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n"
        },
        {
            "name": "Loader.jsx",
            "size": 1952,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Loader.jsx",
            "path": "client/src/components/Loader.jsx",
            "content": "import React from \"react\";\nimport { motion } from \"framer-motion\";\n\nconst Loader = () => {\n    const containerVariant = {\n        hidden: { opacity: 0 },\n        visible: {\n            opacity: 1,\n            transition: {\n                staggerChildren: 0.2, // Staggering the animation of each child (letter)\n                delayChildren: 0.3, // Delay before animation starts\n            },\n        },\n    };\n\n    const letterVariant = {\n        hidden: { opacity: 0, scale: 0.5 },\n        visible: {\n            opacity: 1,\n            scale: [1, 1.5, 1], // Smooth pulsing effect\n            transition: {\n                duration: 0.8,\n                repeat: Infinity,\n                repeatType: \"reverse\",\n                ease: \"easeInOut\",\n            },\n        },\n    };\n\n    return (\n        <div className=\"flex justify-center items-center h-screen bg-gradient-to-r from-gray-200 to-gray-300\">\n            {/* Pulse Animation for Text */}\n            <motion.div\n                variants={containerVariant}\n                initial=\"hidden\"\n                animate=\"visible\"\n                className=\"text-5xl font-bold text-black flex gap-2\"\n            >\n                {\"Campus\".split(\"\").map((char, index) => (\n                    <motion.span\n                        key={index}\n                        variants={letterVariant}\n                        className=\"inline-block text-red-500\"\n                    >\n                        {char}\n                    </motion.span>\n                ))}\n                {\"Nest\".split(\"\").map((char, index) => (\n                    <motion.span\n                        key={`nest-${index}`}\n                        variants={letterVariant}\n                        className=\"inline-block text-black-500\"\n                    >\n                        {char}\n                    </motion.span>\n                ))}\n            </motion.div>\n        </div>\n    );\n};\n\nexport default Loader;\n"
        },
        {
            "name": "Card.jsx",
            "size": 5500,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Card.jsx",
            "path": "client/src/components/Card.jsx",
            "content": "import { Link } from 'react-router-dom';\nimport { MdLocationOn, MdFoodBank, MdWindPower } from 'react-icons/md';\nimport { FaWifi, FaParking, FaCouch, FaBolt, FaSwimmingPool } from 'react-icons/fa';\nimport { GiVacuumCleaner, GiWashingMachine } from 'react-icons/gi';\nimport { BiDumbbell } from 'react-icons/bi';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport url from '../url.jsx';\n\nexport default function Card({ listing }) {\n\n  const [organizationCount, setOrganizationCount] = useState(0);\n  const org = useSelector((state) => state.user.organisation);\n  console.log(org,67);\n  const userId=useSelector((state)=>state.user.currentUser);\n\n  useEffect(() => {\n    if (org) {\n      const fetchOrganizationCount = async () => {\n        try {\n\n          const response = await axios.get(`${url}/api/vendor/getcount/${org}`, {\n            params: {\n              id: listing._id,\n            },\n          });\n          console.log('Count of vendors:', response.data.count);\n          if (response.data.success) {\n            setOrganizationCount(response.data.count);\n          } else {\n            console.error('Failed to fetch count:', response.data.message);\n          }\n        } catch (error) {\n          console.error('Error fetching organization count:', error);\n        }\n      };\n      fetchOrganizationCount();\n    }\n  }, []);\n\n  return (\n    <div className='bg-white shadow-md hover:shadow-lg  transition-shadow overflow-hidden rounded-lg  sm:w-[400px] '>\n      {/* <Link to={`/listing/${listing._id}`}> */}\n      <Link to={userId ? `/property/${listing._id}` : '/sign-in'}>\n        {/* Image Section */}\n        <img\n          src={\n            listing.imageURL?.[0] ||\n            'https://cdn.pixabay.com/photo/2024/06/14/19/14/house-8830418_1280.jpg'\n          }\n          alt='listing cover'\n          className='h-[320px] sm:h-[220px] w-full object-cover hover:scale-105 transition-scale duration-300'\n        />\n\n        {/* Content Section */}\n        <div className='p-3 flex flex-col gap-2 w-full'>\n          {/* Title and Location */}\n          <p className='truncate text-lg font-semibold text-slate-700'>\n            {listing.name}\n          </p>\n          <div className='flex items-center gap-1'>\n            <MdLocationOn className='h-4 w-4 text-green-700' />\n            <p className='text-sm text-gray-600 truncate w-full'>\n              {listing.address}\n            </p>\n          </div>\n\n          {/* Description */}\n          <p className='text-sm text-gray-600 line-clamp-2'>\n            {listing.description}\n          </p>\n\n          {/* Rent and Market Distance */}\n          <p className='text-slate-500 mt-2 font-semibold'>\n            Rent: \u20b9{listing.rent?.toLocaleString('en-US')} / month\n          </p>\n          <p className='text-slate-500'>\n            Market Distance: {listing.marketDistance} meters\n          </p>\n          <p className='text-green-600'> <span className='text-green-600 text-xl'> {organizationCount} </span> people from your organization stay here</p>\n\n          {/* Room Details */}\n          <div className='text-slate-700 flex gap-4'>\n            <div className='font-bold text-xs'>\n              {listing.totalRooms > 1\n                ? `${listing.totalRooms} rooms`\n                : `${listing.totalRooms} room`}\n            </div>\n            <div className='font-bold text-xs'>\n              {listing.availRooms > 1\n                ? `${listing.availRooms} available`\n                : `${listing.availRooms} available`}\n            </div>\n          </div>\n\n          {/* Amenities Section */}\n          <div className='flex flex-wrap gap-2 mt-2 text-xs text-gray-600'>\n            {listing.wifi && (\n              <div className='flex items-center gap-1'>\n                <FaWifi className='text-blue-500' /> Wi-Fi\n              </div>\n            )}\n            {listing.parking && (\n              <div className='flex items-center gap-1'>\n                <FaParking className='text-yellow-600' /> Parking\n              </div>\n            )}\n            {listing.electricBackup && (\n              <div className='flex items-center gap-1'>\n                <FaBolt className='text-red-500' /> E.Backup\n              </div>\n            )}\n            {listing.ac && (\n              <div className='flex items-center gap-1'>\n                <MdWindPower className='text-red-500' /> AC\n              </div>\n            )}\n            {listing.gym && (\n              <div className='flex items-center gap-1'>\n                <BiDumbbell className='text-green-700' /> Gym\n              </div>\n            )}\n            {listing.laundry && (\n              <div className='flex items-center gap-1'>\n                <GiWashingMachine className='text-purple-500' /> Laundry\n              </div>\n            )}\n            {listing.houseKeeping && (\n              <div className='flex items-center gap-1'>\n                <GiVacuumCleaner className='text-pink-500' /> Housekeeping\n              </div>\n            )}\n            {listing.furnished && (\n              <div className='flex items-center gap-1'>\n                <FaCouch className='text-brown-700' /> Furnished\n              </div>\n            )}\n            {listing.mess && (\n              <div className='flex items-center gap-1'>\n                <MdFoodBank className='text-green-700' /> Mess\n              </div>\n            )}\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n}\n"
        },
        {
            "name": "PrivateRoute.jsx",
            "size": 266,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/PrivateRoute.jsx",
            "path": "client/src/components/PrivateRoute.jsx",
            "content": "import { useSelector } from 'react-redux';\nimport { Outlet, Navigate } from 'react-router-dom';\n\nexport default function PrivateRoute() {\n  const { currentUser } = useSelector((state) => state.user);\n  return currentUser ? <Outlet /> : <Navigate to='/sign-in' />;\n}\n"
        },
        {
            "name": "PaymentButton.jsx",
            "size": 1948,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/PaymentButton.jsx",
            "path": "client/src/components/PaymentButton.jsx",
            "content": "import React from \"react\";\nimport axios from \"axios\";\nimport url from '../url.jsx';\n\nconst PaymentButton = ({ amount }) => {\n  const loadRazorpayScript = () => {\n    const script = document.createElement(\"script\");\n    script.src = \"https://checkout.razorpay.com/v1/checkout.js\";\n    script.onload = () => handlePayment();\n    script.onerror = () => alert(\"Razorpay SDK failed to load. Are you online?\");\n    document.body.appendChild(script);\n  };\n\n  const handlePayment = async () => {\n    try {\n      // Create order on the server\n      const { data } = await axios.post(`${url}/api/payment/create-order`, { amount });\n\n      const options = {\n        key: \"rzp_test_FRFdoaNdjz8LjW\",\n        amount: data.order.amount,\n        currency: \"INR\",\n        name: \"CampusNest\",\n        description: \"Rent Payment\",\n        order_id: data.order.id,\n        handler: async (response) => {\n          const paymentData = {\n            razorpay_order_id: response.razorpay_order_id,\n            razorpay_payment_id: response.razorpay_payment_id,\n            razorpay_signature: response.razorpay_signature,\n          };\n\n          // Verify payment signature on the server\n          const verifyResponse = await axios.post(`${url}/api/payment/verify-payment`, paymentData);\n\n          if (verifyResponse.data.success) {\n            alert(\"Payment Successful!\");\n          } else {\n            alert(\"Payment Verification Failed!\");\n          }\n        },\n        prefill: {\n          name: \"Ashish Chauhan\",\n          email: \"asch20080@gmail.com\",\n          contact: \"8171065385\",\n        },\n        theme: {\n          color: \"#3399cc\",\n        },\n      };\n\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.open();\n    } catch (error) {\n      alert(\"Payment failed. Please try again.\");\n    }\n  };\n\n  return (\n    <button onClick={loadRazorpayScript}>\n      Pay \u20b9{amount}\n    </button>\n  );\n};\n\nexport default PaymentButton;\n"
        },
        {
            "name": "MapSearch.jsx",
            "size": 4213,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/MapSearch.jsx",
            "path": "client/src/components/MapSearch.jsx",
            "content": "import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet';\nimport { useNavigate } from 'react-router-dom';\nimport 'leaflet/dist/leaflet.css';\nimport markerIcon from 'leaflet/dist/images/marker-icon.png';\nimport markerIconShadow from 'leaflet/dist/images/marker-shadow.png';\n\nconst defaultIcon = L.icon({\n  iconUrl: markerIcon,\n  shadowUrl: markerIconShadow,\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n});\n\nL.Marker.prototype.options.icon = defaultIcon;\n\nconst MapSearch = () => {\n  const navigate = useNavigate();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  const locations = [\n    { id: 1, name: 'Mumbai', lat: 19.0760, lng: 72.8777, description: 'Financial capital of India.' },\n    { id: 2, name: 'Delhi', lat: 28.6139, lng: 77.2090, description: 'Capital city known for its historical sites.' },\n    { id: 3, name: 'Bangalore', lat: 12.9716, lng: 77.5946, description: 'IT hub with pleasant weather.' },\n    { id: 4, name: 'Chennai', lat: 13.0827, lng: 80.2707, description: 'Coastal city known for its cultural heritage.' },\n    { id: 5, name: 'Hyderabad', lat: 17.3850, lng: 78.4867, description: 'City of pearls and biryani.' },\n    { id: 6, name: 'Pune', lat: 18.5204, lng: 73.8567, description: 'Education and cultural hub.' },\n    { id: 7, name: 'Kolkata', lat: 22.5726, lng: 88.3639, description: 'City of joy with a rich colonial history.' },\n    { id: 8, name: 'Noida', lat: 28.5355, lng: 77.3910, description: 'Modern city known for IT parks and infrastructure.' }\n\n  ];\n  \n\n  const handleMarkerClick = (location) => {\n    setSelectedLocation(location);\n  };\n\n  const handleNavigate = (location) => {\n    const searchTerm = location.name.toUpperCase();\n    navigate(`/search?searchTerm=${searchTerm}`);\n  };\n  \n\n  return (\n    <div className=\"flex flex-col md:flex-row h-screen\" >\n        \n      {/* Sidebar */}\n      <div className=\"w-full md:w-1/4 bg-gray-900 text-white p-4 overflow-y-auto \">\n        <h2 className=\"text-2xl font-bold mb-4\">Select a Location</h2>\n        <ul className=\"space-y-4\">\n          {locations.map((location) => (\n            <li\n              key={location.id}\n              className=\"p-4 bg-gray-800 rounded-lg cursor-pointer hover:bg-gray-700 transition-all\"\n              onClick={() => handleNavigate(location)}\n            >\n              <h3 className=\"text-xl font-semibold\">{location.name}</h3>\n              <p className=\"text-gray-400\">{location.description}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {/* Map Container */}\n      <div className=\"flex-1\">\n        <MapContainer center={[20.6245, 81.209]} zoom={5} className=\"h-full w-full\">\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n         {locations.map((location) => (\n  <Marker\n    key={location.id}\n    position={[location.lat, location.lng]}\n    eventHandlers={{\n      click: () => handleMarkerClick(location),\n    }}\n  >\n    <Popup>\n      <div className=\"text-center\">\n        <h3 className=\"font-bold\">{location.name}</h3>\n        <p>{location.description}</p>\n        <button\n          onClick={() => handleNavigate(location)}\n          className=\"mt-2 px-3 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 transition-all\"\n        >\n          View Properties\n        </button>\n      </div>\n    </Popup>\n  </Marker>\n))}\n\n        </MapContainer>\n      </div>\n\n      {/* Info Box */}\n      {selectedLocation && (\n        <div className=\"absolute bottom-4 left-4 w-80 p-4 bg-white shadow-lg rounded-lg border border-gray-200\">\n          <h3 className=\"text-xl font-bold\">{selectedLocation.name}</h3>\n          <p className=\"text-gray-700\">{selectedLocation.description}</p>\n          <button\n            onClick={() => handleNavigate(selectedLocation)}\n            className=\"mt-2 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 transition-all\"\n          >\n            Explore Properties\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MapSearch;\n"
        },
        {
            "name": "Statistics.jsx",
            "size": 5996,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Statistics.jsx",
            "path": "client/src/components/Statistics.jsx",
            "content": "import * as React from \"react\";\nimport { BarChart } from \"@mui/x-charts/BarChart\";\nimport { PieChart } from \"@mui/x-charts/PieChart\";\nimport axios from \"axios\";\nimport { Card, Typography, CircularProgress, Box } from \"@mui/material\";\nimport { useSelector } from \"react-redux\";\nimport { useState } from \"react\";\nimport url from '../url.jsx';\n\nexport default function Statistics() {\n  const [chartData, setChartData] = React.useState({\n    categories: [],\n    occupancyRates: [],\n    revenues: [],\n    designation: [],\n    values: [],\n    tenantAadhar: 0,\n  });\n\n  const [loading, setLoading] = React.useState(true);\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const id = userDetails._id;\n  const [udata, setUdata] = useState([]);\n  const [xlabels, setxlabels] = useState([]);\n\n  React.useEffect(() => {\n    const fetchVendorData = async () => {\n      try {\n        const response = await axios.get(\n          `${url}/api/vendor/getvendor/${id}`\n        );\n        const vendorData = response.data;\n        const tenants = response.data[0]?.tenants || [];\n        if(!vendorData && !tenants){\n            alert('Please create a Listing First!')\n            return;\n        }else{\n        const categories = vendorData.map((vendor) => vendor.name);\n        const occupancyRates = vendorData.map((vendor) => {\n          const totalRooms = vendor.totalRooms > 0 ? vendor.totalRooms : 0;\n          const occupiedRooms = totalRooms - vendor.availRooms;\n          return totalRooms > 0\n            ? ((occupiedRooms / totalRooms) * 100).toFixed(2)\n            : 0;\n        });\n        const revenues = vendorData.map((vendor) => {\n          const totalRooms = vendor.totalRooms > 0 ? vendor.totalRooms : 0;\n          return (totalRooms - vendor.availRooms) * vendor.rent;\n        });\n\n        const tenantAadhar = vendorData.reduce((sum, vendor) => {\n          return (\n            sum + (Array.isArray(vendor.tenants) ? vendor.tenants.length : 0)\n          );\n        }, 0);\n\n        const designationCounts = tenants.reduce((acc, tenant) => {\n          const designation = tenant.designation || \"Unknown\";\n          acc[designation] = (acc[designation] || 0) + 1;\n          return acc;\n        }, {});\n\n        setUdata(Object.values(designationCounts));\n        setxlabels(Object.keys(designationCounts));\n\n        setChartData({\n          categories,\n          occupancyRates,\n          revenues,\n          tenantAadhar,\n          uData: Object.values(designationCounts),\n          xLabels: Object.keys(designationCounts),\n        });\n\n        setLoading(false);\n    }\n      } catch (error) {\n        console.error(\"Error fetching vendor data:\", error);\n        setLoading(false);\n      }\n    };\n\n    fetchVendorData();\n  }, []);\n\n  if (loading) {\n    return (\n      <Box className=\"flex justify-center items-center h-screen\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  return (\n    <div className=\"p-6 bg-gray-100 min-h-screen\">\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n        {/* Occupancy Rates */}\n        <Card className=\"shadow-lg p-4 bg-white rounded-md\">\n          <Typography variant=\"h6\" className=\"text-lg font-bold text-gray-800\">\n            Occupancy Rates\n          </Typography>\n          <BarChart\n            xAxis={[\n              {\n                id: \"vendorNames\",\n                data: chartData.categories,\n                scaleType: \"band\",\n                label: \"Vendor Names\",\n              },\n            ]}\n            series={[\n              {\n                data: chartData.occupancyRates,\n                label: \"Occupancy Rate (%)\",\n                color: \"#1fa52a\", // Green\n              },\n            ]}\n            width={500}\n            height={300}\n          />\n        </Card>\n\n        {/* Revenue Estimation */}\n        <Card className=\"shadow-lg p-4 bg-white rounded-md\">\n          <Typography variant=\"h6\" className=\"text-lg font-bold text-gray-800\">\n            Estimated Monthly Revenue\n          </Typography>\n          <BarChart\n            xAxis={[\n              {\n                id: \"vendorNames\",\n                data: chartData.categories,\n                scaleType: \"band\",\n                label: \"Vendor Names\",\n              },\n            ]}\n            series={[\n              {\n                data: chartData.revenues,\n                label: \"Revenue (\u20b9)\",\n                color: \"#f3db56\", // yellow\n              },\n            ]}\n            width={500}\n            height={300}\n          />\n        </Card>\n\n        {/* Tenant Designations */}\n        <Card className=\"shadow-lg p-4 bg-white rounded-md\">\n          <Typography variant=\"h6\" className=\"text-lg font-bold text-gray-800\">\n            Tenant Designations\n          </Typography>\n          <BarChart\n            width={500}\n            height={300}\n            series={[\n              {\n                data: udata,\n                id: \"designationId\",\n                stack: \"total\",\n                color: \"#6a5acd\", // Amber\n              },\n            ]}\n            xAxis={[\n              { data: xlabels, scaleType: \"band\", label: \"Designations\" },\n            ]}\n          />\n        </Card>\n\n        {/* Tenant Aadhar Breakdown */}\n        <Card className=\"shadow-lg p-4 bg-white rounded-md\">\n          <Typography variant=\"h6\" className=\"text-lg font-bold text-gray-800\">\n            Tenant Aadhar Verification\n          </Typography>\n          <PieChart\n            series={[\n              {\n                data: [\n                  { id: 0, value: chartData.tenantAadhar, label: \"Verified\" },\n                  { id: 1, value: 2, label: \"Unverified\" },\n                ],\n                innerRadius: 30,\n                outerRadius: 100,\n                paddingAngle: 5,\n                cornerRadius: 5,\n                color: [\"#4CAF50\", \"#F44336\"], \n              },\n            ]}\n            width={500}\n            height={300}\n          />\n        </Card>\n      </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "OAuth.jsx",
            "size": 1384,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/OAuth.jsx",
            "path": "client/src/components/OAuth.jsx",
            "content": "import { GoogleAuthProvider, getAuth, signInWithPopup } from 'firebase/auth';\nimport { app } from '../firebase.js';\nimport { useDispatch } from 'react-redux';\nimport { signInSuccess } from '../redux/user/userSlice';\nimport { useNavigate } from 'react-router-dom';\nimport url from '../url.jsx';\n\nexport default function OAuth() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleGoogleClick = async () => {\n    try {\n      const provider = new GoogleAuthProvider();\n      const auth = getAuth(app);\n\n      const result = await signInWithPopup(auth, provider);\n       \n      // console.log(\"Ashish : \",result.user.photoURL);\n\n      const res = await fetch(`${url}/api/auth/google`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          name: result.user.displayName,\n          email: result.user.email,\n          photo: result.user.photoURL,\n        }),\n      });\n      const data = await res.json();\n      dispatch(signInSuccess(data));\n      navigate('/');\n    } catch (error) {\n      console.log('could not sign in with google', error);\n    }\n  };\n  return (\n    <button\n      onClick={handleGoogleClick}\n      type='button'\n      className='bg-red-700 text-white p-3 rounded-lg uppercase hover:opacity-95'\n    >\n      Continue with google\n    </button>\n  );\n}\n"
        },
        {
            "name": "Map.jsx",
            "size": 1969,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/Map.jsx",
            "path": "client/src/components/Map.jsx",
            "content": "\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet'; // Import Leaflet for custom icons\nimport 'leaflet/dist/leaflet.css';\n\n\n// Define the cities with their positions\nconst cities = [\n    { name: 'Mumbai', position: [19.0760, 72.8777] },\n    { name: 'Delhi', position: [28.6139, 77.2090] },\n    { name: 'Bangalore', position: [12.9716, 77.5946] },\n    { name: 'Chennai', position: [13.0827, 80.2707] },\n    { name: 'Hyderabad', position: [17.3850, 78.4867] },\n    { name: 'Pune', position: [18.5204, 73.8567] },\n    { name: 'Kolkata', position: [22.5726, 88.3639] },\n    { name: 'Ahmedabad', position: [23.0225, 72.5714] }\n];\n\n// Define a custom icon\nconst customIcon = new L.Icon({\n    iconUrl: '/pointer.png', // Replace with your icon URL\n    iconSize: [30, 30], // Size of the icon\n    iconAnchor: [15, 30], // Point of the icon which will correspond to marker's location\n    popupAnchor: [0, -30] // Point from which the popup should open relative to the iconAnchor\n});\n\nconst MapSection = () => {\n    return (\n        <div className=\"map-container\">\n            <h1 className=\"page-title\">Cities We Serve</h1>\n            <MapContainer center={[20.5937, 78.9629]} zoom={5} style={{ height: '500px', width: '100%' }}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {cities.map((city, index) => (\n                    <Marker\n                        key={index}\n                        position={city.position}\n                        icon={customIcon} // Use the custom icon\n                    >\n                        <Popup>{city.name}</Popup>\n                    </Marker>\n                ))}\n            </MapContainer>\n        </div>\n    );\n};\n\nexport default MapSection;\n"
        },
        {
            "name": "SearchBar.css",
            "size": 760,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/SearchBar.css",
            "path": "client/src/components/SearchBar.css",
            "content": ".search-bar {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background-color: white;\n    padding: 10px 45px;\n    width: 77vw;\n    height: 12vh;\n    border-radius: 25px;\n    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n}\n\n.search-bar-field {\n    display: flex;\n    flex-direction: column;\n    margin-right: 10px;\n    width: 15vw;\n}\n\n.search-bar-field label {\n    margin-bottom: 5px;\n    font-weight: bold;\n}\n\n.search-bar-field input,\n.search-bar-field select {\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n}\n\n.search-btn {\n    background-color: black;\n    color: white;\n    padding: 10px 20px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n}\n\n.search-btn i {\n    margin-right: 5px;\n}"
        },
        {
            "name": "SearchBar.jsx",
            "size": 1679,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/components/SearchBar.jsx",
            "path": "client/src/components/SearchBar.jsx",
            "content": "import React from 'react';\nimport './SearchBar.css';\n\nconst SearchBar = () => {\n    return (\n        <div className=\"search-bar\">\n            <div className=\"search-bar-field\">\n                <label>Looking For</label>\n                <input type=\"text\" placeholder=\"What to look for ?\" />\n            </div>\n            <div className=\"search-bar-field\">\n                <label>Type</label>\n                <select>\n                    <option>Property Type</option>\n                    <option>PG</option>\n                    <option>Hostel</option>\n                </select>\n            </div>\n            <div className=\"search-bar-field\">\n                <label>Price</label>\n                <select>\n                    <option>Price</option>\n                    <option>Low to High</option>\n                    <option>High to Low</option>\n                </select>\n            </div>\n            <div className=\"search-bar-field\">\n                <label>Location</label>\n                <select>\n                    <option>All Cities</option>\n                    <option>Mumbai</option>\n                    <option>Noida</option>\n                    <option>Greater Noida</option>\n                    <option>Delhi</option>\n                    <option>Hyderabad</option>\n                    <option>Pune</option>\n                    <option>Kolkata</option>\n                    <option>Bangalore</option>\n                    <option>Chennai</option>\n                </select>\n            </div>\n            <button className=\"search-btn\">\n                <i className=\"fa fa-search\"></i> Search\n            </button>\n        </div>\n    );\n};\n\nexport default SearchBar;\n"
        },
        {
            "name": "main.jsx",
            "size": 502,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/main.jsx",
            "path": "client/src/main.jsx",
            "content": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App.jsx';\nimport './index.css';\nimport { persistor, store } from './redux/store.js';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport punycode from 'punycode';\n\nReactDOM.createRoot(document.getElementById('root')).render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>\n);\n"
        },
        {
            "name": "index.css",
            "size": 3251,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/index.css",
            "path": "client/src/index.css",
            "content": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n\n\n/* @import url('https://fonts.googleapis.com/css2?family=Source+Code+Pro&display=swap'); */\n\ncode {\n    font-family: 'Source Code Pro', Menlo, Monaco, Consolas, 'Courier New', monospace;\n  }\nbody {\n    font-family:sans-serif;\n}\n\n\n* {\n    padding: 0px;\n    margin: 0px;\n}\n\n.pageContainer {\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    width: 100%;\n    /* background-color: whitesmoke; */\n}\n\n\n.topSection {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 20px;\n    height: 40vh;\n    margin-top: 150px;\n    width: 97vw;\n    background-color: #f4f4f4;\n}\n\n\n.leftText {\n    flex: 1;\n    font-size: 1.7rem;\n    padding: 20px;\n    font-family:sans-serif;\n}\n\n\n.rightText iframe {\n    flex: 1;\n    margin-top: -70px;\n    height: 700px;\n    width: 600px;\n    /* text-align: right; */\n    /* padding: 20px; */\n    /* font-size: 2rem; */\n}\n\n.road-container {\n    text-align: center;\n    padding: 50px;\n    margin-top: -100px;\n}\n\n\n\n.road {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    margin-top: 100px;\n}\n\n.city {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 0 30px;\n    position: relative;\n}\n\n.city-circle {\n    background-color: rgb(42, 53, 143);\n    color: white;\n    border-radius: 50%;\n    width: 50px;\n    height: 50px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 18px;\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.city p {\n    margin-top: 10px;\n    font-size: 20px;\n    color: #555;\n}\n\n.road-line {\n    height: 5px;\n    width: 100px;\n    background-color: rgb(42, 53, 143);\n    position: absolute;\n    top: 25px;\n    left: 55px;\n}\n\n\n\n.page-title {\n    font-size: 36px;\n    margin-bottom: 20px;\n    color: #333;\n    \n}\n#about{\n    margin-top: 100px;\n}\n\n/* \n  **************************************************************************\n  \n  ABOUT \n  \n  ************************************************************************** */\n\n\n.about-section {\n    padding: 20px;\n    background-color: #f9f9f9;\n    min-height: 70vh;\n}\n\n.page-title {\n    text-align: center;\n    margin-bottom: 40px;\n    font-size: 2rem;\n    color: #333;\n}\n\n.features-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n\n    gap: 20px;\n}\n\n.feature-box {\n    background-color: #ffffff;\n    \n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    padding: 20px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    height: 250px;\n\n    transition: box-shadow 0.3s ease;\n}\n\n.feature-box:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n}\n\n.feature-box h2 {\n    margin: 0;\n    margin-bottom: 10px;\n    color: rgb(43, 40, 40);\n}\n\n.feature-box p {\n    font-size: 1rem;\n    color: rgb(62, 62, 64);\n}\n\n.loader {\n    border: 4px solid #f3f3f3;\n    border-radius: 50%;\n    border-top: 4px solid #3498db;\n    width: 24px;\n    height: 24px;\n    animation: spin 1s linear infinite;\n  }\n  \n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  "
        },
        {
            "name": "firebase.js",
            "size": 562,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/firebase.js",
            "path": "client/src/firebase.js",
            "content": "// firebase.js\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBmcFaDw57DOMmNX5YTOMy0JzJBcXz3bRc\",\n  authDomain: \"campusnest-346ce.firebaseapp.com\",\n  projectId: \"campusnest-346ce\",\n  storageBucket: \"campusnest-346ce.appspot.com\",\n  messagingSenderId: \"329308652667\",\n  appId: \"1:329308652667:web:5487ea9890b46dde4bcede\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const storage = getStorage(app); // Export storage for image uploads\n"
        },
        {
            "name": "Land.jsx",
            "size": 4988,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/Land.jsx",
            "path": "client/src/pages/Land.jsx",
            "content": "import React, { useEffect } from \"react\";\nimport About from \"../components/About.jsx\";\nimport { Typewriter } from \"react-simple-typewriter\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Navigation } from \"swiper/modules\";\nimport SwiperCore from \"swiper\";\nimport \"swiper/css/bundle\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\n\nSwiperCore.use([Navigation]);\n\n// const navigate=useNavigate();\n\nconst images = [\n  \"https://images.pexels.com/photos/258154/pexels-photo-258154.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n  \"https://images.pexels.com/photos/280221/pexels-photo-280221.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2\",\n  \"https://images.unsplash.com/photo-1531971589569-0d9370cbe1e5?q=80&w=2962&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D\",\n];\n\nconst Land = () => {\n  const cities = [\n    \"Mumbai\",\n    \"Delhi\",\n    \"Bangalore\",\n    \"Chennai\",\n    \"Hyderabad\",\n    \"Pune\",\n    \"Kolkata\",\n    \"Ahmedabad\",\n  ];\n\n  useEffect(() => {\n    localStorage.setItem(\"organization\", \"jiit\");\n  }, []);\n\n  return (\n    <>\n      <div className=\"pageContainer\" id=\"top\">\n        {/* Top section with text */}\n        <div className=\"topSection\">\n          <div className=\"leftText\">\n            <h1\n              style={{\n                fontWeight: \"bold\",\n                fontSize: \"3.5rem\",\n                marginBottom: \"100px\",\n              }}\n              className=\"bg-gradient-to-r from-blue-600 via-purple-700 to-pink-700 text-transparent bg-clip-text\"\n            >\n              Find Your{\" \"}\n              <span style={{ color: \"#ef4444\" }}>\n                <Typewriter\n                  words={[\"Campus Nest\", \"Dream PG\", \"Dream Flat\"]}\n                  loop={0}\n                  cursor\n                  cursorStyle=\"_\"\n                  typeSpeed={70}\n                  deleteSpeed={50}\n                  delaySpeed={1000}\n                />\n              </span>\n              Here\n            </h1>\n\n            <p className=\"text-slate-600 items-start text-justify\">\n              We offer unbiased opinions, room selection, PG student details,\n              and personalized scores to help you find the perfect home away\n              from your home.We offer unbiased opinions, room selection, PG\n              student details, and personalized scores to help you find the\n              perfect home away from your home.We offer unbiased opinions, room\n              selection, PG student details, and personalized scores to help you\n              find the perfect home away from your home\n            </p>\n          </div>\n          <div className=\"rightText\">\n            <iframe\n              className=\"w-96 h-1/2 mx-auto block\"\n              src=\"https://lottie.host/embed/c39d66c5-c05c-4c34-a69a-33fed4dc28f9/xDp3VVSV6t.json\"\n            ></iframe>\n          </div>\n        </div>\n\n        {/* Bottom section that has image also  */}\n      </div>\n\n      {/* Search By Map */}\n      <div class=\"flex justify-center items-center mb-32\">\n        <Link to={'/map-search'}>\n      <button  className=\"px-14 py-5 mt-16 text-xl bg-gradient-to-r from-slate-800 to-blue-500 text-white font-semibold rounded-full shadow-lg hover:from-slate-800 hover:to-blue-500 hover:scale-105 transition-transform duration-300 ease-in-out\">\n            Search By Map \ud83d\udccc\n          </button>\n          </Link>\n      </div>\n\n      {/* Road  Section */}\n      <div className=\"road-container\">\n        <h1 className=\"text-5xl text-center  font-bold text-slate-600\">\n          Our Expansion{\" \"}\n        </h1>\n        <div className=\"road\">\n          {cities.map((city, index) => (\n            <div key={index} className=\"city\">\n              <div className=\"city-circle\">{index + 1}</div>\n              <p>{city}</p>\n              {index !== cities.length - 1 && <div className=\"road-line\"></div>}\n            </div>\n          ))}\n        </div>\n      </div>\n      <Swiper\n        spaceBetween={30}\n        navigation\n        loop={true} // Allows continuous loop sliding\n        className=\"mySwiper mt-32\"\n      >\n        {images.map((url, index) => (\n          <SwiperSlide key={index}>\n            <img\n              src={url}\n              alt={`Slide ${index}`}\n              className=\"w-full h-[500px] object-cover rounded-2xl\"\n            />\n          </SwiperSlide>\n        ))}\n      </Swiper>\n\n      <h1 className=\"text-5xl text-center mt-32 font-bold text-slate-600\">\n        Why Choose Us?\n      </h1>\n\n      <About id=\"about\" />\n      <div className=\"text-center mb-16\">\n        <Link to={\"/search\"}>\n          {\" \"}\n          <button className=\"px-14 py-5 mt-16 text-xl bg-gradient-to-r from-slate-800 to-blue-500 text-white font-semibold rounded-full shadow-lg hover:from-slate-800 hover:to-blue-500 hover:scale-105 transition-transform duration-300 ease-in-out\">\n            Find Your Nest \ud83c\udfe0\n          </button>{\" \"}\n        </Link>\n      </div>\n    </>\n  );\n};\n\nexport default Land;\n"
        },
        {
            "name": "SignIn.jsx",
            "size": 2834,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/SignIn.jsx",
            "path": "client/src/pages/SignIn.jsx",
            "content": "import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport url from '../url.jsx';\nimport {\n  signInStart,\n  signInSuccess,\n  signInFailure,\n} from '../redux/user/userSlice.js';\nimport OAuth from '../components/OAuth.jsx';\n\nexport default function SignIn() {\n  const [formData, setFormData] = useState({});\n  const { loading, error } = useSelector((state) => state.user);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      dispatch(signInStart());\n      const res = await fetch(`${url}/api/auth/signin`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      const data = await res.json();\n      console.log(data);\n      if (data.success === false) {\n        dispatch(signInFailure(data.message));\n        return;\n      }\n      dispatch(signInSuccess(data));\n      navigate('/');\n    } catch (error) {\n      dispatch(signInFailure(error.message));\n    }\n  };\n  return (\n    <div\n      className=\"-mt-20 h-screen w-full bg-cover bg-center flex items-center justify-center\"\n      style={{\n        backgroundImage:\n          \"url(https://plus.unsplash.com/premium_photo-1687960116228-13d383d20188?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\",\n      }}\n    >\n    <div className='p-6 max-w-lg w-full bg-white bg-opacity-90 rounded-lg shadow-lg'>\n      <h1 className='text-3xl text-center font-semibold my-7'>Sign In</h1>\n      <form onSubmit={handleSubmit} className='flex flex-col gap-4'>\n        <input\n          type='email'\n          placeholder='email'\n          className='border p-3 rounded-lg'\n          id='email'\n          onChange={handleChange}\n        />\n        <input\n          type='password'\n          placeholder='password'\n          className='border p-3 rounded-lg'\n          id='password'\n          minlength=\"8\"\n          maxLength=\"12\"\n          required\n          onChange={handleChange}\n        />\n\n        <button\n          disabled={loading}\n          className='bg-slate-700 text-white p-3 rounded-lg uppercase hover:opacity-95 disabled:opacity-80'\n        >\n          {loading ? 'Loading...' : 'Sign In'}\n        </button>\n        <OAuth/>\n      </form>\n      <div className='flex gap-2 mt-5'>\n        <p>Dont have an account?</p>\n        <Link to={'/sign-up'}>\n          <span className='text-blue-700'>Sign up</span>\n        </Link>\n      </div>\n      {error && <p className='text-red-500 mt-5'>{error}</p>}\n    </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "About.jsx",
            "size": 2918,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/About.jsx",
            "path": "client/src/pages/About.jsx",
            "content": "import React from 'react';\nimport { FaBullseye, FaRegSmile } from 'react-icons/fa';\n\nexport default function About() {\n  return (\n    <div className=\"py-20 px-6 max-w-7xl mx-auto h-full bg-gradient-to-r from-gray-100 via-white to-gray-100\">\n      <div className=\"text-center mb-12\">\n        <h1 className=\"text-5xl font-extrabold text-slate-800 mb-6 hover:text-red-500 transition duration-300\">\n          About <span className=\"text-black\"><span className=\"text-red-500\">Campus</span>Nest</span>\n        </h1>\n        <p className=\"text-lg text-slate-600 max-w-3xl mx-auto leading-relaxed\">\n          Discover a new way to find, rent, and manage properties tailored to your needs. Transparency and convenience are our priorities.\n        </p>\n      </div>\n\n\n      <div className=\"grid gap-8 md:grid-cols-2\">\n    \n        <div className=\"space-y-6 p-6 rounded-xl shadow-lg bg-white hover:shadow-2xl transition duration-300\">\n          <div className=\"flex items-center gap-3\">\n            <FaBullseye className=\"text-red-500 text-3xl\" />\n            <h2 className=\"text-2xl font-semibold text-slate-800 hover:text-blue-600 transition duration-300\">\n              Our Mission\n            </h2>\n          </div>\n          <p className=\"text-slate-700 leading-relaxed\">\n            Our mission is to help clients achieve their real estate goals by providing the best properties and new-gen features like map-based search, virtual tours, and more.\n            Whether buying, selling, or renting, we're here to guide you.\n          </p>\n        </div>\n\n  \n        <div className=\"space-y-6 p-6 rounded-xl shadow-lg bg-white hover:shadow-2xl transition duration-300\">\n          <div className=\"flex items-center gap-3\">\n            <FaRegSmile className=\"text-blue-500 text-3xl\" />\n            <h2 className=\"text-2xl font-semibold text-slate-800 hover:text-blue-600 transition duration-300\">\n              Why Choose Us\n            </h2>\n          </div>\n          <p className=\"text-slate-700 leading-relaxed\">\n            With years of experience and a customer-first approach, we strive to make every transaction seamless and rewarding.\n            From initial inquiries to final agreements, we\u2019re committed to your satisfaction.\n          </p>\n        </div>\n      </div>\n\n  \n      <div className=\"mt-16 flex flex-col items-center\">\n        <p className=\"text-lg text-slate-700 text-center max-w-2xl leading-relaxed\">\n          Let us help you find your next home. Explore the most desirable neighborhoods, compare properties,\n          and enjoy unparalleled customer service.\n        </p>\n        <button\n          onClick={() => alert('We are working on it! Thank you')}\n          className=\"mt-8 px-8 py-3 bg-gradient-to-r from-blue-600 to-blue-700 text-white rounded-lg shadow-lg hover:scale-105 transform transition duration-300\"\n        >\n          Learn More\n        </button>\n      </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "Search.jsx",
            "size": 7579,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/Search.jsx",
            "path": "client/src/pages/Search.jsx",
            "content": "import { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './search.css'; \nimport Card from '../components/Card.jsx'\nimport url from '../url.jsx';\n\nexport default function Search() {\n  const navigate = useNavigate();\n  const [sidebardata, setSidebardata] = useState({\n    searchTerm: '',\n    type: 'all',\n    amenities: {\n      parking: false,\n      furnished: false,\n      wifi: false,\n      mess: false,\n      gym: false,\n      ac: false,\n      electricBackup: false,\n      laundry: false,\n      houseKeeping: false,\n    },\n    sort: 'created_at',\n    order: 'desc',\n  });\n\n  const [loading, setLoading] = useState(false);\n  const [listings, setListings] = useState([]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.search);\n    const searchTermFromUrl = urlParams.get('searchTerm');\n\n    const amenitiesFromUrl = urlParams.get('amenities');\n    const sortFromUrl = urlParams.get('sort');\n    const orderFromUrl = urlParams.get('order');\n    const propTypeFromUrl=urlParams.get('type');\n\n    if (\n      searchTermFromUrl ||\n      amenitiesFromUrl ||\n      sortFromUrl ||\n      orderFromUrl ||\n      propTypeFromUrl\n    ) {\n      setSidebardata({\n        searchTerm: searchTermFromUrl || '',\n        type: propTypeFromUrl || 'all',\n        amenities: amenitiesFromUrl ? JSON.parse(amenitiesFromUrl) : sidebardata.amenities,\n        sort: sortFromUrl || 'created_at',\n        order: orderFromUrl || 'desc',\n      });\n    }\n\n    const fetchListings = async () => {\n      setLoading(true);\n      const searchQuery = urlParams.toString();\n      console.log(\"TESTING : - \", searchQuery);\n      \n      // const res = await fetch(`/api/listing/get?${searchQuery}`);\n      const res = await fetch(`${url}/api/vendor/allvendors?${searchQuery}`);\n      console.log(\"RESPONSE : \", res);\n      const data = await res.json();\n      console.log(\"DATA : \", data);\n      \n      setListings(data);\n      setLoading(false);\n    };\n\n    fetchListings();\n  }, [location.search]);\n\n  const handleChange = (e) => {\n    const { id, value, checked } = e.target;\n    \n    if (id === 'searchTerm') {\n      setSidebardata({ ...sidebardata, searchTerm: value });\n    }\n    \n    if (id === 'sort_order') {\n      const [sort, order] = value.split('_');\n      setSidebardata({ ...sidebardata, sort, order });\n    }\n    \n    if(id === 'prop_type'){\n      console.log(\"TYPE : \" , value);\n      \n      setSidebardata({ ...sidebardata, type: value });\n    }\n\n    if (e.target.type === 'checkbox') {\n      setSidebardata({\n        ...sidebardata,\n        amenities: {\n          ...sidebardata.amenities,\n          [id]: checked,\n        },\n      });\n    }\n\n\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const urlParams = new URLSearchParams();\n    urlParams.set('searchTerm', sidebardata.searchTerm);\n    urlParams.set('type', sidebardata.type);\n    urlParams.set('amenities', JSON.stringify(sidebardata.amenities));\n    urlParams.set('sort', sidebardata.sort);\n    urlParams.set('order', sidebardata.order);\n    const searchQuery = urlParams.toString();\n    navigate(`/search?${searchQuery}`);\n  };\n\n\n  return (\n    <div className=\"search-container\">\n      <div className=\"sidebar sticky top-10 p-5 bg-red-100 min-w-[250px] h-[calc(100vh-40px)] rounded-lg border-r-2 border-gray-300 shadow-md \">\n\n        <form onSubmit={handleSubmit} className=\"search-form\">\n          <div className=\"form-group\">\n            <label>Search Term:</label>\n            <input\n              type=\"text\"\n              id=\"searchTerm\"\n              placeholder=\"Search...\"\n              value={sidebardata.searchTerm}\n              minLength=\"2\"\n              maxLength=\"12\"\n              onChange={handleChange}\n            />\n          </div>\n \n          <div className=\"checkbox-group\">\n            <label>Amenities:</label>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"parking\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.parking}\n              />\n              <span>Parking</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"furnished\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.furnished}\n              />\n              <span>Furnished</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"wifi\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.wifi}\n              />\n              <span>Wifi</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"mess\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.mess}\n              />\n              <span>Mess</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"gym\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.gym}\n              />\n              <span>Gym</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"ac\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.ac}\n              />\n              <span>AC</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"electricBackup\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.electricBackup}\n              />\n              <span>Electricity Backup</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"laundry\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.laundry}\n              />\n              <span>Laundry</span>\n            </div>\n            <div>\n              <input\n                type=\"checkbox\"\n                id=\"houseKeeping\"\n                onChange={handleChange}\n                checked={sidebardata.amenities.houseKeeping}\n              />\n              <span>House Keeping</span>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <label>Property Type :</label>\n            <select onChange={handleChange} id=\"prop_type\">\n              <option value=\"all\">All</option>\n              <option value=\"Both\">Both</option>\n              <option value=\"Girls\">Boys</option>\n              <option value=\"Boys\">Girls</option>\n            </select>\n          </div>\n\n          <div className=\"form-group\">\n            <label>Sort:</label>\n            <select onChange={handleChange} id=\"sort_order\">\n              <option value=\"regularPrice_desc\">Price high to low</option>\n              <option value=\"regularPrice_asc\">Price low to high</option>\n              <option value=\"createdAt_desc\">Latest</option>\n              <option value=\"createdAt_asc\">Oldest</option>\n            </select>\n          </div>\n\n          <button type=\"submit\" className=\"search-button\">Search</button>\n        </form>\n      </div>\n\n      \n       <div className=\"listings\">\n        \n        {loading ? (\n          <p className=\"loading-text\">Loading...</p>\n        ) : listings.length === 0 ? (\n          <p>No listing found!</p>\n        ) :  (\n          \n          listings.map((listing) => <Card key={listing._id} listing={listing} />)\n          //  Card \n        )}\n\n      </div> \n    </div>\n  );\n}\n"
        },
        {
            "name": "search.css",
            "size": 1939,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/search.css",
            "path": "client/src/pages/search.css",
            "content": "/* Search.css */\n\n/* Container Layout */\n.search-container {\n    display: flex;\n    gap: 20px;\n}\n\n/* Sidebar */\n.sidebar {\n    padding: 20px;\n    border-right: 2px solid #ddd;\n    min-width: 250px;\n    background-color: #f6e9e9;\n    color: #111010; /* Light text for readability */\n    border-radius: 30px;\n    margin-top: 40px;\n    position: sticky;\n    top:0; \n    height: auto;\n}\n\n.search-form {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n}\n\n/* Form Elements */\n.form-group {\n    display: flex;\n    flex-direction: column;\n    gap: 8px;\n    color: #090202; /* Light text for form labels */\n}\n\n.form-group input,\n.form-group select {\n    padding: 8px;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    background-color: #444;\n    color: #f0f0f0; /* Light text for inputs */\n}\n\n.form-group input::placeholder {\n    color: #f9f1f1; /* Subtle placeholder color */\n}\n\n/* Checkbox Group */\n.checkbox-group {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    color: #0d0c0c; /* Light text for checkboxes */\n}\n\n.checkbox-group div {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n}\n\n/* Search Button */\n.search-button {\n    background-color: #444;\n    color: #fff;\n    padding: 10px;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n}\n\n.search-button:hover {\n    background-color: #555;\n    color: #f0f0f0;\n}\n\n/* Listings Section */\n\n.listings {\n    display: flex;\n    flex-wrap: wrap; /* Space between the cards */\n    gap: 10px;\n    margin-top: 40px;\n}\n\n\n\n.loading-text {\n    text-align: center;\n    font-size: 1.2em;\n    color: #555;\n}\n\n.show-more {\n    text-align: center;\n    font-size: 1.2em;\n    color: #007bff;\n    cursor: pointer;\n}\n\n.show-more:hover {\n    text-decoration: underline;\n}\n\n/* Adjust link color for light mode */\na {\n    color: #007bff;\n    text-decoration: none;\n}\n\na:hover {\n    text-decoration: underline;\n}\n"
        },
        {
            "name": "SignUp.jsx",
            "size": 2998,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/SignUp.jsx",
            "path": "client/src/pages/SignUp.jsx",
            "content": "import { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport OAuth from '../components/OAuth.jsx';\nimport url from '../url.jsx';\n\nexport default function SignUp() {\n  const [formData, setFormData] = useState({});\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      const res = await fetch(`${url}/api/auth/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      const data = await res.json();\n      console.log(data);\n      if (data.success === false) {\n        setLoading(false);\n        setError(data.message);\n        return;\n      }\n      setLoading(false);\n      setError(null);\n      navigate('/sign-in');\n    } catch (error) {\n      setLoading(false);\n      setError(error.message);\n    }\n  };\n  return (\n    <div\n      className=\"-mt-20 min-h-screen w-full bg-cover bg-center flex items-center justify-center\"\n      style={{\n        backgroundImage:\n          \"url(https://plus.unsplash.com/premium_photo-1687960116228-13d383d20188?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D)\",\n      }}\n    >\n      <div className=\"p-6 max-w-lg w-full bg-white bg-opacity-90 rounded-lg shadow-lg\">\n        <h1 className=\"text-3xl text-center font-semibold mb-6\">Sign Up</h1>\n        <form onSubmit={handleSubmit} className=\"flex flex-col gap-4\">\n          <input\n            type=\"text\"\n            placeholder=\"username\"\n            className=\"border p-3 rounded-lg\"\n            id=\"username\"\n            required\n            onChange={handleChange}\n          />\n          <input\n            type=\"email\"\n            placeholder=\"email\"\n            className=\"border p-3 rounded-lg\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n          <input\n            type=\"password\"\n            placeholder=\"password\"\n            className=\"border p-3 rounded-lg\"\n            id=\"password\"\n            minLength=\"8\"\n            maxLength=\"12\"\n            required\n            onChange={handleChange}\n          />\n          <button\n            disabled={loading}\n            className=\"bg-slate-700 text-white p-3 rounded-lg uppercase hover:opacity-95 disabled:opacity-80\"\n          >\n            {loading ? 'Loading...' : 'Sign Up'}\n          </button>\n          <OAuth />\n        </form>\n        <div className=\"flex gap-2 mt-5\">\n          <p>Have an account?</p>\n          <Link to={'/sign-in'}>\n            <span className=\"text-blue-700\">Sign in</span>\n          </Link>\n        </div>\n        {error && <p className=\"text-red-500 mt-5\">{error}</p>}\n      </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "profile.css",
            "size": 675,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/profile.css",
            "path": "client/src/pages/profile.css",
            "content": "body {\n    background-color: #f4f4f4;\n}\n\n.profile-form {\n    background-color: white;\n    padding: 20px;\n    border-radius: 30px;\n    margin: 6vw;\n}\n\n.details-container {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n}\n\n.details-section {\n    display: flex;\n    flex-wrap: wrap;\n    margin-top: 15px;\n}\n\n.submit-section {\n    margin-top: 20px;\n}\n\n.aadhaar-upload-box {\n    border: 2px dashed #ccc;\n    padding: 20px;\n    text-align: center;\n    cursor: pointer;\n    margin-top: 20px;\n}\n\n.aadhaar-upload-box p {\n    margin: 0;\n    font-size: 16px;\n    color: #888;\n}\n\n.aadhaar-upload-box:hover {\n    background-color: #f9f9f9;\n    border-color: #aaa;\n}\n"
        },
        {
            "name": "RegisterVendor.jsx",
            "size": 9082,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/RegisterVendor.jsx",
            "path": "client/src/pages/RegisterVendor.jsx",
            "content": "import { useSelector } from 'react-redux';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Button, TextField, Grid } from '@mui/material';\nimport { storage } from '../firebase.js'; // import Firebase storage\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport './vend.css';\nimport toast, { Toaster } from 'react-hot-toast';\nimport url from '../url.jsx';\n\nconst RegisterVendor = () => {\n    const userDetails = useSelector((state) => state.user.currentUser);\n    const id = userDetails._id;\n    const [selectedFiles, setSelectedFiles] = useState([]);\n    const [imageURLs, setImageURLs] = useState([]);\n    const [rooms, setRooms] = useState('');\n    const [vendorDetails, setVendorDetails] = useState({\n        vendorId: id,\n        name: '',\n        description: '',\n        address: '',\n        state: '',\n        city: '',\n        type:'',\n        rent: 0,\n        security: 0,\n        marketDistance: 0,\n        availRooms: 0,\n        totalRooms: 0,\n        wifi: false,\n        parking: false,\n        laundry: false,\n        mess: false,\n        ac: false,\n        gym: false,\n        furnished: false,\n        electricBackup: false,\n        houseKeeping: false,\n    });\n\n    const amenOptions = [\n        { label: 'Wi-Fi', key: 'wifi' },\n        { label: 'Parking', key: 'parking' },\n        { label: 'Laundry', key: 'laundry' },\n        { label: 'Mess', key: 'mess' },\n        { label: 'AC', key: 'ac' },\n        { label: 'Gym', key: 'gym' },\n        { label: 'Furnished', key: 'furnished' },\n        { label: 'Electric Backup', key: 'electricBackup' },\n        { label: 'House Keeping', key: 'houseKeeping' },\n    ];\n\n    const handleAmenityClick = (amenityKey) => {\n        setVendorDetails(prevDetails => ({\n            ...prevDetails,\n            [amenityKey]: !prevDetails[amenityKey]\n        }));\n    };\n\n    const handleFileChange = (e) => {\n        const files = Array.from(e.target.files);\n        setSelectedFiles(files);\n    };\n\n    const handleUploadClick = () => {\n        document.getElementById('fileInput').click();\n    };\n\n    const handleRoomsChange = (e) => {\n        setRooms(e.target.value);\n        setVendorDetails({ ...vendorDetails, totalRooms: parseInt(e.target.value, 10) || 0 });\n    };\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setVendorDetails({\n            ...vendorDetails,\n            [name]: ['rent', 'security', 'marketDistance', 'availRooms'].includes(name) ? parseInt(value, 10) || 0 : value\n        });\n    };\n\n    const uploadImagesToFirebase = async () => {\n        const urls = [];\n        for (const file of selectedFiles) {\n            const storageRef = ref(storage, `vendors/${Date.now()}_${file.name}`);\n            await uploadBytes(storageRef, file);\n            const url = await getDownloadURL(storageRef);\n            urls.push(url);\n        }\n        setImageURLs(urls);\n        console.log(\"NOrmal urls : \",urls);\n        console.log(\"Image urls : \",imageURLs);\n        \n        return urls;\n    };\n\n    const addVendor = async () => {\n        try {\n            const urls = await uploadImagesToFirebase();\n            const vendorData = {\n                ...vendorDetails,\n                imageURL: urls, // Add image URLs to vendor details\n            };\n\n            const response = await axios.post(`${url}/api/vendor/addvendor`, vendorData);\n            if (response.data.success) {\n                toast.success('Vendor Registered Successfully');\n                \n            } else {\n                toast.error('Failed to Register Vendor: ' + response.data.message);\n\n            }\n        } catch (error) {\n            console.error('Error registering vendor:', error);\n            toast.error('Failed to Register Vendor: Network or Server error');\n            \n        }\n    };\n\n    return (\n        <form className=\"pg-form\">\n            <h1 className=\"text-2xl text-center p-5 font-mono\">List Your Property</h1>\n            <Grid container spacing={3}>\n                \n                <Grid item xs={12} >\n                    <TextField label=\"Name Of The Property\" fullWidth \n                    required name=\"name\" \n                    onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} >\n                    <TextField label=\"Description\" fullWidth \n                    required name=\"description\" \n                    onChange={handleInputChange} \n                    multiline\n                    rows={4} />\n                </Grid>\n                {/* Address Section */}\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Address\" fullWidth \n                    required name=\"address\" \n                    onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"State\" required fullWidth\n                     name=\"state\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"City\" fullWidth \n                    required name=\"city\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Rent Amount\" fullWidth\n                     required type=\"number\" name=\"rent\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Security Amount\" fullWidth\n                     required type=\"number\" name=\"security\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Market distance(km)\" fullWidth\n                     required name=\"marketDistance\" onChange={handleInputChange} />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Available Rooms\" fullWidth \n                    required type=\"number\" name=\"availRooms\" onChange={handleInputChange} />\n                </Grid>\n\n                {/* Number of Rooms Section */}\n                <Grid item xs={12} sm={6}>\n                    <TextField label=\"Number of Rooms\" fullWidth\n                     required type=\"number\" value={rooms} onChange={handleRoomsChange} />\n                </Grid>\n                <Grid item xs={12} >\n                    <TextField label=\"Paste your Google Calendar link\" fullWidth\n                     required   name=\"calendar\" onChange={handleInputChange} />\n                </Grid>\n\n                {/* Upload Photos Section */}\n                <Grid item xs={12}>\n                    <div className=\"photo-box\" onClick={handleUploadClick}>\n                        <p>Upload Image</p>\n                        <input id=\"fileInput\" type=\"file\" multiple accept=\"image/*\" \n                        onChange={handleFileChange} style={{ display: 'none' }} />\n                    </div>\n                    {selectedFiles.length > 0 && <p>{selectedFiles.length} file(s) selected</p>}\n                </Grid>\n\n                <Grid item xs={12}>\n                    <TextField\n                        select\n                      \n                        fullWidth\n                        required\n                        name=\"type\"\n                        value={vendorDetails.type}\n                        onChange={handleInputChange}\n                        SelectProps={{\n                            native: true,\n                        }}\n                    >\n                        <option value=\"\">Select Type :</option>\n                        <option value=\"Boys\">Boys</option>\n                        <option value=\"Girls\">Girls</option>\n                        <option value=\"Girls\">Both</option>\n                    </TextField>\n                </Grid>\n\n                {/* Amenities Section */}\n                <Grid item xs={12}>\n                    <div className=\"amen-box\">\n                        <p>Amenities:</p>\n                        <div className=\"amen-btns\">\n                            {amenOptions.map((amenity) => (\n                                <Button\n                                    key={amenity.key}\n                                    variant={vendorDetails[amenity.key] ? 'contained' : 'outlined'}\n                                    onClick={() => handleAmenityClick(amenity.key)}\n                                    style={{ margin: '5px' }}\n                                >\n                                    {amenity.label}\n                                </Button>\n                            ))}\n                        </div>\n                    </div>\n                </Grid>\n\n                {/* Register Button */}\n                <Grid item xs={12} className=\"next-box\">\n                    <Button variant=\"contained\" style={{ margin: '0px' }} onClick={addVendor}>\n                        Add\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nexport default RegisterVendor;\n"
        },
        {
            "name": "BuildProfile.jsx",
            "size": 7371,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/BuildProfile.jsx",
            "path": "client/src/pages/BuildProfile.jsx",
            "content": "import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Button, TextField, Chip, Grid } from '@mui/material';\nimport axios from 'axios';\nimport { storage } from '../firebase.js';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport './profile.css';\nimport { useDispatch } from 'react-redux';\nimport { build, org } from '../redux/user/userSlice.js';\nimport toast, { Toaster } from 'react-hot-toast';\nimport url from '../url.jsx';\n\nconst BuildProfile = () => {\n    const dispatch = useDispatch();\n    const userDetails = useSelector((state) => state.user.currentUser);\n\n    const id = userDetails._id;\n    const [tenantDetails, setTenantDetails] = useState({\n        name: '',\n        userImg: userDetails.avatar,\n        userID: id,\n        address: '',\n        designation: '',\n        aadhaarNo: '',\n        organization: '',\n        skills: [],\n        experience: 0,\n    });\n\n\n    const [aadhaarURL, setAadhaarURL] = useState(null);\n    const [skillInput, setSkillInput] = useState('');\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setTenantDetails({ ...tenantDetails, [name]: value });\n    };\n\n\n    const handleSkillInputChange = (e) => {\n        setSkillInput(e.target.value);\n    };\n\n    const addSkill = (e) => {\n        if (e.key === 'Enter' && skillInput.trim()) {\n            setTenantDetails((prevState) => ({\n                ...prevState,\n                skills: [...prevState.skills, skillInput.trim()],\n            }));\n            setSkillInput('');\n        }\n    };\n\n    const removeSkill = (index) => {\n        setTenantDetails((prevState) => ({\n            ...prevState,\n            skills: prevState.skills.filter((_, i) => i !== index),\n        }));\n    };\n\n    const handleAadhaarURL = (e) => {\n        setAadhaarURL(e.target.files[0]);\n    };\n\n    const uploadAadhaarImage = async () => {\n        if (!aadhaarURL) return null;\n\n        const storageRef = ref(storage, `aadhaar/${Date.now()}_${aadhaarURL.name}`);\n        await uploadBytes(storageRef, aadhaarURL);\n        const url = await getDownloadURL(storageRef);\n        return url;\n    };\n    console.log(\"Tenant Data : \", tenantDetails);\n    console.log(\"URL : \", aadhaarURL);\n\n\n    const handleProfileSubmit = async () => {\n        try {\n            const aadhaarImageURL = await uploadAadhaarImage();\n            console.log(\"URL : \", aadhaarImageURL);\n\n\n            const profileData = {\n                ...tenantDetails,\n                aadhaarURL: aadhaarImageURL, // Add uploaded Aadhaar image URL\n            };\n             \n            const response = await axios.post(`${url}/api/tenant/addtenant`, profileData);\n            if (response.data.success) {\n         \n                toast.success('Profile created successfully');\n                dispatch(build(true));\n                console.log(tenantDetails.organization,899);\n                dispatch(org(tenantDetails.organization));\n\n            } \n        } catch (error) {\n            console.error('Error creating profile:', error);\n            toast.error('Failed to create profile: Network or server error');\n          \n        }\n    };\n\n    return (\n        <form className=\"profile-form\">\n            <h1 className=\"text-2xl text-center p-5 font-mono\">Create Tenant Profile</h1>\n            <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Name\"\n                        fullWidth\n                        required\n                        name=\"name\"\n                        value={tenantDetails.name}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Address\"\n                        fullWidth\n                        required\n                        name=\"address\"\n                        value={tenantDetails.address}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Designation\"\n                        fullWidth\n                        required\n                        name=\"designation\"\n                        value={tenantDetails.designation}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Aadhaar Number\"\n                        fullWidth\n                        required\n                        name=\"aadhaarNo\"\n                        value={tenantDetails.aadhaarNo}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                    <TextField\n                        label=\"Organization\"\n                        fullWidth\n                        required\n                        name=\"organization\"\n                        value={tenantDetails.organization}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label=\"Add Skill\"\n                        fullWidth\n                        value={skillInput}\n                        onChange={handleSkillInputChange}\n                        onKeyDown={addSkill}\n                        placeholder=\"Type a skill and press Enter\"\n                    />\n                    <div className=\"skills-chips\">\n                        {tenantDetails.skills.map((skill, index) => (\n                            <Chip\n                                key={index}\n                                label={skill}\n                                onDelete={() => removeSkill(index)}\n                                color=\"primary\"\n                                style={{ margin: '5px' }}\n                            />\n                        ))}\n                    </div>\n                </Grid>\n                <Grid item xs={12}>\n                    <TextField\n                        label=\"Experience (years)\"\n                        type=\"number\"\n                        fullWidth\n                        required\n                        name=\"experience\"\n                        value={tenantDetails.experience}\n                        onChange={handleInputChange}\n                    />\n                </Grid>\n\n                <Grid item xs={12}>\n                    <div className=\"photo-upload\">\n                        <p>Upload Aadhaar Photo</p>\n                        <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={handleAadhaarURL}\n                        />\n                    </div>\n                </Grid>\n\n                <Grid item xs={12} className=\"submit-box\">\n                    <Button\n                        variant=\"contained\"\n                        onClick={handleProfileSubmit}\n                    >\n                        Submit Profile\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n};\n\nexport default BuildProfile;\n"
        },
        {
            "name": "property.css",
            "size": 1644,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/property.css",
            "path": "client/src/pages/property.css",
            "content": ".amenities-title{\n    font-size: 2rem;\n    text-align: center;\n}\n\n.property-container {\n    max-width: 1200px;\n    margin: 0 auto;\n    padding: 20px;\n}\n\n.property-carousel {\n    height: 400px;\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);\n}\n\n.carousel-image {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n\n.thumbnail-image {\n    width: 100%;\n    height: 100px;\n    object-fit: cover;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: transform 0.3s ease;\n}\n\n.thumbnail-image:hover {\n    transform: scale(1.05);\n}\n\n.property-info {\n    margin-top: 20px;\n}\n\n.amenity-card {\n    padding: 8px;\n    text-align: center;\n    background-color: #f8f8f8;\n    border-radius: 4px;\n}\n\n.booking-button {\n    display: block;\n    margin: 0 auto;\n    padding: 10px 30px;\n    font-size: 18px;\n}\n\n.property-info-container {\n    background-color: #f9f9f9;\n    padding: 20px;\n    border-radius: 10px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    max-width: 70vw;\n    margin: auto;\n}\n\n.property-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin-bottom: 20px;\n    color: #333;\n    text-align: center;\n}\n\n.property-info {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 15px;\n}\n\n.property-info-item {\n    flex: 1 1 45%;\n    background-color: #fff;\n    padding: 15px;\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n.info-label {\n    font-size: 1rem;\n    font-weight: 500;\n    color: #555;\n}\n\n.info-value {\n    font-size: 1rem;\n    font-weight: 700;\n    color: #000;\n}\n"
        },
        {
            "name": "Property.jsx",
            "size": 7934,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/Property.jsx",
            "path": "client/src/pages/Property.jsx",
            "content": "import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { FaWifi, FaCar, FaTshirt, FaUtensils, FaSnowflake, FaDumbbell, FaCouch, FaBolt, FaBroom } from 'react-icons/fa';\nimport SwiperCore from 'swiper';\nimport { Navigation, Pagination, Autoplay } from 'swiper/modules';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css/bundle';\nimport './property.css';\nimport CommentsSection from '../components/CommentSection.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\nimport url from '../url.jsx';\n\nSwiperCore.use([Navigation, Pagination, Autoplay]);\n\nconst Property = () => {\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const profile = useSelector((state) => state.user.profile);\n  const id = userDetails._id;\n  const params = useParams();\n  const [property, setProperty] = useState(null);\n  const [error, setError] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchProperty = async () => {\n      try {\n        const response = await axios.get(`${url}/api/vendor/getvendor/${params.listingId}`);\n        setProperty(response.data[0]);\n      } catch (err) {\n        setError('Failed to load property details.');\n      }\n    };\n\n    fetchProperty();\n  }, [params.listingId]);\n\n\n  const handleImageClick = (img) => {\n    setSelectedImage(img);\n    setIsModalOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedImage(null);\n  };\n\n  const handleBookingRequest = async () => {\n    try {\n      console.log(profile, 90)\n      if (!profile) {\n        toast.error(\"Please create your profile first!\");\n        navigate('/build');\n        return;\n      }\n      const response = await axios.get(`${url}/api/tenant/gettenant/${id}`);\n      if (response.status === 200) {\n        const tenantData = response.data.tenant;\n        const data = {\n          vendorId: property.vendorId,\n          tenantData,\n          propertyId: property._id,\n        };\n\n        if (id === data.vendorId) {\n          toast.error(\"You cannot book your own property!\");\n\n          return;\n        }\n\n        const postResponse = await axios.post(`${url}/api/request/addrequest`, data);\n        if (postResponse.status === 201) {\n          toast.success(\"Request sent successfully!\");\n        } else {\n          console.error('Failed to store data:', postResponse.statusText);\n        }\n      }\n    } catch (error) {\n      console.error('Error while fetching tenant profile data:', error.message);\n    }\n  };\n\n  const handleContactClick = () => {\n    navigate('/landlord-contact');\n  };\n  const handletourClick = () => {\n    window.open(property.calendar);\n  };\n\n  if (!property) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <p className=\"text-lg font-semibold\">Loading property details...</p>\n      </div>\n    );\n  }\n\n  return (\n\n\n    <div className=\"p-6 bg-gradient-to-br from-blue-50 to-gray-100 min-h-screen flex flex-col items-center\">\n      <div className=\"max-w-3xl w-full bg-white shadow-2xl rounded-lg overflow-hidden\">\n        {/* Swiper for Property Images */}\n        <Swiper\n          spaceBetween={10}\n          slidesPerView={1}\n          navigation\n          pagination={{ clickable: true }}\n          autoplay={{ delay: 3000 }}\n          className=\"w-full h-64\"\n        >\n          {property.imageURL && property.imageURL.length > 0 ? (\n            property.imageURL.map((img, index) => (\n              <SwiperSlide key={index} onClick={() => handleImageClick(img)}>\n                <img src={img} alt={`Property Image ${index + 1}`} className=\"w-full h-64 object-cover cursor-pointer\" />\n              </SwiperSlide>\n            ))\n          ) : (\n            <SwiperSlide>\n              <img src=\"https://via.placeholder.com/600\" alt=\"Placeholder Image\" className=\"w-full h-64 object-cover\" />\n            </SwiperSlide>\n          )}\n        </Swiper>\n\n        {/* Modal for Full-Size Image */}\n        {isModalOpen && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n            <div className=\"relative\">\n              <img src={selectedImage} alt=\"Full View\" className=\"max-w-full max-h-screen object-contain\" />\n              <button\n                onClick={closeModal}\n                className=\"absolute top-4 right-4 text-white bg-gray-800 rounded-full p-2 hover:bg-gray-600\"\n              >\n                X\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Property Details */}\n        <div className=\"p-6\">\n          <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">{property.name}</h2>\n          <p className=\"text-gray-600 mb-4\">{property.description}</p>\n\n          {/* Property Information */}\n          <div className=\"mb-4\">\n            <p><span className=\"font-bold\">Address:</span> {property.address}, {property.city}, {property.state}</p>\n            <p><span className=\"font-bold\">Rent:</span> \u20b9{property.rent}</p>\n            <p><span className=\"font-bold\">Security Deposit:</span> \u20b9{property.security}</p>\n            <p><span className=\"font-bold\">Market Distance:</span> {property.marketDistance} km</p>\n            <p><span className=\"font-bold\">Available Rooms:</span> {property.availRooms}</p>\n            <p><span className=\"font-bold\">Hostel Type:</span> {property.type}</p>\n          </div>\n\n          {/* Amenities */}\n          <h4 className=\"text-2xl font-semibold mb-4\">Amenities</h4>\n          <div className=\"grid grid-cols-2 gap-4\">\n            {property.wifi && <Amenity icon={<FaWifi />} label=\"Wi-Fi\" />}\n            {property.parking && <Amenity icon={<FaCar />} label=\"Parking\" />}\n            {property.laundry && <Amenity icon={<FaTshirt />} label=\"Laundry\" />}\n            {property.mess && <Amenity icon={<FaUtensils />} label=\"Mess\" />}\n            {property.ac && <Amenity icon={<FaSnowflake />} label=\"Air Conditioning\" />}\n            {property.gym && <Amenity icon={<FaDumbbell />} label=\"Gym\" />}\n            {property.furnished && <Amenity icon={<FaCouch />} label=\"Furnished\" />}\n            {property.electricBackup && <Amenity icon={<FaBolt />} label=\"Electric Backup\" />}\n            {property.houseKeeping && <Amenity icon={<FaBroom />} label=\"House Keeping\" />}\n          </div>\n\n          {/* Booking and Contact Buttons */}\n          <div className=\"mt-6 flex space-x-4\">\n            <button\n              onClick={handleBookingRequest}\n              className=\"bg-blue-600 text-white py-2 px-6 rounded-lg hover:bg-blue-700 transition duration-300\"\n            >\n              Request Booking\n            </button>\n            <button\n              onClick={handleContactClick}\n              className=\"bg-green-600 text-white py-2 px-6 rounded-lg hover:bg-green-700 transition duration-300\"\n            >\n              Contact Landlord\n            </button>\n            {property.calendar && (\n              <button\n                onClick={handletourClick}\n                className=\"bg-green-600 text-white py-2 px-6 rounded-lg hover:bg-green-700 transition duration-300\"\n              >\n                Request Property Tour\n              </button>\n            )}\n\n          </div>\n        </div>\n        {/* Other property details here */}\n        <CommentsSection propertyID={property._id} />\n      </div>\n      {/* Comment Section starts here */}\n\n\n\n    </div>\n  );\n};\n\n// Amenity Component for Icons\nconst Amenity = ({ icon, label }) => {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <div className=\"text-sky-600 text-2xl\">{icon}</div>\n      <p className=\"text-gray-700 font-medium\">{label}</p>\n    </div>\n  );\n};\n\nexport default Property;\n"
        },
        {
            "name": "Profile.jsx",
            "size": 7617,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/Profile.jsx",
            "path": "client/src/pages/Profile.jsx",
            "content": "import { useSelector } from 'react-redux';\nimport { useRef, useState, useEffect } from 'react';\nimport {\n  getDownloadURL,\n  getStorage,\n  ref,\n  uploadBytesResumable,\n} from 'firebase/storage';\nimport { app } from '../firebase.js';\nimport {\n  updateUserStart,\n  updateUserSuccess,\n  updateUserFailure,\n  deleteUserFailure,\n  deleteUserStart,\n  deleteUserSuccess,\n  signOutUserStart,\n} from '../redux/user/userSlice.js';\nimport { useDispatch } from 'react-redux';\nimport { Link,useNavigate } from 'react-router-dom';\nimport url from '../url.jsx';\nexport default function Profile() {\n  const fileRef = useRef(null);\n  const { currentUser, loading, error } = useSelector((state) => state.user);\n  const [file, setFile] = useState(undefined);\n  const [filePerc, setFilePerc] = useState(0);\n  const [fileUploadError, setFileUploadError] = useState(false);\n  const [formData, setFormData] = useState({});\n  const [updateSuccess, setUpdateSuccess] = useState(false);\n  const [showListingsError, setShowListingsError] = useState(false);\n  const [userListings, setUserListings] = useState([]);\n  const dispatch = useDispatch();\n\n  // firebase storage\n  // allow read;\n  // allow write: if\n  // request.resource.size < 2 * 1024 * 1024 &&\n  // request.resource.contentType.matches('image/.*')\n \n\n \n    const navigate = useNavigate();\n  \n    const handleButtonClick = () => {\n      navigate('/viewlist');\n    };\n\n  useEffect(() => {\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [file]);\n\n  const handleFileUpload = (file) => {\n    const storage = getStorage(app);\n    const fileName = new Date().getTime() + file.name;\n    const storageRef = ref(storage, fileName);\n    const uploadTask = uploadBytesResumable(storageRef, file);\n\n    uploadTask.on(\n      'state_changed',\n      (snapshot) => {\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setFilePerc(Math.round(progress));\n      },\n      (error) => {\n        setFileUploadError(true);\n      },\n      () => {\n        getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) =>\n          setFormData({ ...formData, avatar: downloadURL })\n        );\n      }\n    );\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.id]: e.target.value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      dispatch(updateUserStart());\n      const res = await fetch(`${url}/api/user/update/${currentUser._id}`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n      const data = await res.json();\n      if (data.success === false) {\n        dispatch(updateUserFailure(data.message));\n        return;\n      }\n\n      dispatch(updateUserSuccess(data));\n      setUpdateSuccess(true);\n    } catch (error) {\n      dispatch(updateUserFailure(error.message));\n    }\n  };\n\n  const handleDeleteUser = async () => {\n    try {\n      dispatch(deleteUserStart());\n      const res = await fetch(`${url}/api/user/delete/${currentUser._id}`, {\n        method: 'DELETE',\n      });\n      const data = await res.json();\n      if (data.success === false) {\n        dispatch(deleteUserFailure(data.message));\n        return;\n      }\n      dispatch(deleteUserSuccess(data));\n    } catch (error) {\n      dispatch(deleteUserFailure(error.message));\n    }\n  };\n\n  const handleSignOut = async () => {\n    try {\n      localStorage.removeItem('organization');\n      dispatch(signOutUserStart());\n      const res = await fetch(`${url}/api/auth/signout`);\n      const data = await res.json();\n      if (data.success === false) {\n        dispatch(deleteUserFailure(data.message));\n        return;\n      }\n      dispatch(deleteUserSuccess(data));\n    } catch (error) {\n      dispatch(deleteUserFailure(data.message));\n    }\n  };\n\n  // const handleShowListings = async () => {\n  //   navigate(`/show`);\n  // };\n\n  return (\n    <div\n      className=\"-mt-20 h-auto w-full bg-cover bg-center flex items-center justify-center\"\n      style={{\n        backgroundImage:\n          \"url('https://plus.unsplash.com/premium_photo-1687960116228-13d383d20188?q=80&w=2940&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D')\"\n      }}\n    >\n    <div className='mt-32 p-6 max-w-lg w-full h-full bg-white bg-opacity-90 rounded-lg shadow-lg'>\n      <h1 className='text-3xl font-semibold text-center my-7'>Profile</h1>\n      <form onSubmit={handleSubmit} className='flex flex-col gap-4'>\n        <input\n          onChange={(e) => setFile(e.target.files[0])}\n          type='file'\n          ref={fileRef}\n          hidden\n          accept='image/*'\n        />\n        <img\n          onClick={() => fileRef.current.click()}\n          src={formData.avatar || currentUser.avatar}\n          alt='profile'\n          className='rounded-full h-24 w-24 object-cover cursor-pointer self-center mt-2'\n        />\n        <p className='text-sm self-center'>\n          {fileUploadError ? (\n            <span className='text-red-700'>\n              Error Image upload (image must be less than 2 mb)\n            </span>\n          ) : filePerc > 0 && filePerc < 100 ? (\n            <span className='text-slate-700'>{`Uploading ${filePerc}%`}</span>\n          ) : filePerc === 100 ? (\n            <span className='text-green-700'>Image successfully uploaded!</span>\n          ) : (\n            ''\n          )}\n        </p>\n        <input\n          type='text'\n          placeholder='username'\n          defaultValue={currentUser.username}\n          id='username'\n          className='border p-3 rounded-lg'\n          onChange={handleChange}\n        />\n        <input\n          type='email'\n          placeholder='email'\n          id='email'\n          defaultValue={currentUser.email}\n          className='border p-3 rounded-lg'\n          onChange={handleChange}\n        />\n        <input\n          type='password'\n          placeholder='password'\n          onChange={handleChange}\n          id='password'\n          className='border p-3 rounded-lg'\n        />\n        <button\n          disabled={loading}\n          className='bg-slate-700 text-white rounded-lg p-3 uppercase hover:opacity-95 disabled:opacity-80'\n        >\n          {loading ? 'Loading...' : 'Update'}\n        </button>\n        <Link\n          className='bg-green-700 text-white p-3 rounded-lg uppercase text-center hover:opacity-95'\n          to={'/build'}\n        >\n          Build Your Profile\n        </Link>\n        <Link\n          className='bg-green-700 text-white p-3 rounded-lg uppercase text-center hover:opacity-95'\n          to={'/vend'}\n        >\n          Create Listing\n        </Link>\n        <Link\n          className='bg-green-700 text-white p-3 rounded-lg uppercase text-center hover:opacity-95'\n          to={'/rent'}\n        >\n          Rented Properties\n        </Link>\n      </form>\n      <div className='flex justify-between mt-5'>\n        <span\n          onClick={handleDeleteUser}\n          className='text-red-700 cursor-pointer'\n        >\n          Delete account\n        </span>\n        <span onClick={handleSignOut} className='text-red-700 cursor-pointer'>\n          Sign out\n        </span>\n      </div>\n\n      <p className='text-red-700 mt-5'>{error ? error : ''}</p>\n      <p className='text-green-700 mt-5'>\n        {updateSuccess ? 'User is updated successfully!' : ''}\n      </p>\n      <button onClick={handleButtonClick} className='bg-green-700 w-full text-white p-3 rounded-lg uppercase text-center hover:opacity-95'>\n        Show Listings\n      </button>\n    </div>\n    </div>\n  );\n}\n"
        },
        {
            "name": "Yourlisting.jsx",
            "size": 126,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/Yourlisting.jsx",
            "path": "client/src/pages/userDash/Yourlisting.jsx",
            "content": "import React from 'react'\n\nconst Yourlisting = () => {\n  return (\n    <div>Yourlisting</div>\n  )\n}\n\nexport default Yourlisting"
        },
        {
            "name": "side.css",
            "size": 872,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/side.css",
            "path": "client/src/pages/userDash/side.css",
            "content": ".dash {\n    margin-top: 1vh;\n    width: 250px;\n    height: 100vh;\n    padding: 20px;\n    position: fixed;\n    background-color: white;\n    border-radius: 30px;\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\n    border: 1px solid rgba(255, 255, 255, 0.2);\n    overflow-y: auto;\n}\n\n.dash h2 {\n    font-size: 1.5em;\n    margin-bottom: 1em;\n}\n\n.dash ul {\n    list-style: none;\n    padding: 0;\n}\n\n.dash ul li {\n    margin: 2em 0;\n    color: #ff9f00;\n}\n\n.dash ul li :hover {\n    background-color: #ff9f00;\n}\n\n.dash ul li a {\n    display: block;\n    color: black;\n    text-decoration: none;\n    font-size: 1.1em;\n    padding: 12px 15px;\n    width: 100%;\n    box-sizing: border-box;\n    border-radius: 8px;\n    transition: background-color 0.3s ease, color 0.3s ease;\n}\n\n\n.dash ul li a:hover {\n    background: linear-gradient(90deg, #4a90e2, #a63db4, #f66d6d);\n    color: white;\n}"
        },
        {
            "name": "Side.jsx",
            "size": 459,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/Side.jsx",
            "path": "client/src/pages/userDash/Side.jsx",
            "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../vendor/Dash.css';\n\nconst Side = () => {\n    return (\n        <div className=\"dash \">\n\n            <ul>\n                <li>\n                    <Link to=\"/rent\">View Request Status</Link>\n                </li>\n                <li>\n                    <Link to=\"/nest\">Your Campus Nest</Link>\n                </li>\n\n            </ul>\n        </div>\n    );\n};\n\nexport default Side;\n"
        },
        {
            "name": "Shownest.jsx",
            "size": 6009,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/Shownest.jsx",
            "path": "client/src/pages/userDash/Shownest.jsx",
            "content": "import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { FaWifi, FaCar, FaTshirt, FaUtensils, FaSnowflake, FaDumbbell, FaCouch, FaBolt, FaBroom } from 'react-icons/fa';\nimport Side from './Side.jsx';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport 'swiper/css/pagination';\nimport { Navigation, Pagination } from 'swiper/modules';\nimport CommentForm from '../../components/CommentForm.jsx';\nimport url from '../../url.jsx';\n\nfunction Shownest() {\n  const [vendorData, setVendorData] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const id = userDetails._id;\n  const [comments, setComments] = useState([]);\n\n  // Update comments when a new comment is added\n  const handleCommentAdded = (updatedComments) => {\n    setComments(updatedComments);\n  };\n\n  // Fetch vendor listing data from the backend\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${url}/api/vendor/getnest/${id}`);\n        const data = await response.json();\n        setVendorData(data);\n        \n      } catch (error) {\n        console.error('Error fetching vendor data:', error);\n      }\n    };\n\n    fetchData();\n  }, [id]);\n\n  // Check if there's data to display\n  if (vendorData.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-screen\">\n        <p className=\"text-lg font-semibold\">Loading your Campus Nest...</p>\n      </div>\n    );\n  }\n\n  const vendor = vendorData[0]; // Displaying only one property\n  console.log(\"PropertyID: \",vendor._id);\n\n  return (\n    <>\n      <Side />\n      <div className=\"p-6 bg-gradient-to-br from-blue-50 to-gray-100 min-h-screen flex flex-col items-center\">\n        <div className=\"max-w-3xl w-full bg-white shadow-2xl rounded-lg overflow-hidden\">\n          {/* Image Section */}\n          {vendor.imageURL && vendor.imageURL.length > 0 && (\n            <img\n              src={vendor.imageURL[0]}\n              alt={vendor.name}\n              className=\"w-full h-64 object-cover cursor-pointer\"\n              onClick={() => setShowModal(true)}\n            />\n          )}\n\n          {/* Vendor Details */}\n          <div className=\"p-6\">\n            <h2 className=\"text-3xl font-bold text-gray-800 mb-4\">{vendor.name}</h2>\n            <p className=\"text-gray-600 mb-4\">{vendor.description}</p>\n\n            <div className=\"mb-4\">\n              <p>\n                <span className=\"font-bold\">Address:</span> {vendor.address}, {vendor.city}, {vendor.state}\n              </p>\n              <p>\n                <span className=\"font-bold\">Rent:</span> \u20b9{vendor.rent}\n              </p>\n              <p>\n                <span className=\"font-bold\">Security Deposit:</span> \u20b9{vendor.security}\n              </p>\n              <p>\n                <span className=\"font-bold\">Market Distance:</span> {vendor.marketDistance} km\n              </p>\n              <p>\n                <span className=\"font-bold\">Available Rooms:</span> {vendor.availRooms}\n              </p>\n              <p>\n                <span className=\"font-bold\">Total Rooms:</span> {vendor.totalRooms === -1 ? 'Not Specified' : vendor.totalRooms}\n              </p>\n            </div>\n\n            {/* Amenities Section */}\n            <div className=\"mt-6\">\n              <h4 className=\"text-2xl font-semibold mb-4\">Amenities</h4>\n              <div className=\"grid grid-cols-2 gap-4\">\n                {vendor.wifi && <Amenity icon={<FaWifi />} label=\"Wi-Fi\" />}\n                {vendor.parking && <Amenity icon={<FaCar />} label=\"Parking\" />}\n                {vendor.laundry && <Amenity icon={<FaTshirt />} label=\"Laundry\" />}\n                {vendor.mess && <Amenity icon={<FaUtensils />} label=\"Mess\" />}\n                {vendor.ac && <Amenity icon={<FaSnowflake />} label=\"Air Conditioning\" />}\n                {vendor.gym && <Amenity icon={<FaDumbbell />} label=\"Gym\" />}\n                {vendor.furnished && <Amenity icon={<FaCouch />} label=\"Furnished\" />}\n                {vendor.electricBackup && <Amenity icon={<FaBolt />} label=\"Electric Backup\" />}\n                {vendor.houseKeeping && <Amenity icon={<FaBroom />} label=\"House Keeping\" />}\n              </div>\n            </div>\n            \n          </div>\n          <CommentForm propertyID={vendor._id} onCommentAdded={handleCommentAdded} />\n        </div>\n        {/* review section */}\n\n      {/* Add Comment Form */}\n      \n    \n\n        \n       \n      </div>\n\n      {/* Modal for Swiper Full-Size Images */}\n      {showModal && (\n        <div\n          className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\n          onClick={() => setShowModal(false)}\n        >\n          <div className=\"relative w-full max-w-3xl\">\n            <button\n              className=\"absolute top-4 right-4 text-white text-2xl font-bold z-50\"\n              onClick={() => setShowModal(false)}\n            >\n              &times;\n            </button>\n            <Swiper\n              navigation\n              pagination={{ clickable: true }}\n              modules={[Navigation, Pagination]}\n              className=\"max-h-screen\"\n            >\n              {vendor.imageURL.map((image, index) => (\n                <SwiperSlide key={index}>\n                  <img\n                    src={image}\n                    alt={`${vendor.name} - ${index + 1}`}\n                    className=\"w-full h-auto object-contain\"\n                  />\n                </SwiperSlide>\n              ))}\n            </Swiper>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\n// Amenity Component for Icons\nfunction Amenity({ icon, label }) {\n  return (\n    <div className=\"flex items-center space-x-2\">\n      <div className=\"text-sky-600 text-2xl\">{icon}</div>\n      <p className=\"text-gray-700 font-medium\">{label}</p>\n    </div>\n  );\n}\n\nexport default Shownest;\n"
        },
        {
            "name": "Showstatus.jsx",
            "size": 5642,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/userDash/Showstatus.jsx",
            "path": "client/src/pages/userDash/Showstatus.jsx",
            "content": "import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Side from \"./Side.jsx\";\nimport { useSelector } from \"react-redux\";\nimport PaymentButton from \"../../components/PaymentButton.jsx\";\nimport url from '../../url.jsx';\n\nconst Showstatus = () => {\n  const [properties, setProperties] = useState([]);\n  const userDetails = useSelector((state) => state.user.currentUser);\n  const id = userDetails._id;\n  // const [profile, setProfile] = useState(null);\n\n  // Function to handle the \"Send Token\" button click\n  const handleClick = async (profile,vendorId) => {\n    console.log(\"Vendor Id : \", vendorId);\n    \n    try {\n      const response = await axios.put(\n        `${url}/api/vendor/addprofile/${vendorId}`,\n        {\n          profile: profile,\n        }\n      );\n      console.log(\"Token sent successfully:\", response.data);\n      // alert(\"Token sent successfully!\");\n    } catch (error) {\n      console.error(\"Error sending token:\", error);\n      alert(\"Failed to send token.\");\n    }\n    console.log(profile,33);\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(\n          `${url}/api/request/getproperty/${id}`\n        );\n        const responseData = response.data.responseData;\n        const formattedProperties = responseData.map((item) => ({\n          vendorId:item?.propertyId?._id, // make changes here\n          name: item.propertyId?.name,\n          address: item.propertyId?.address,\n          rent: item.propertyId?.rent,\n          security: item.propertyId?.security,\n          wifi: item.propertyId?.wifi,\n          parking: item.propertyId?.parking,\n          laundry: item.propertyId?.laundry,\n          mess: item.propertyId?.mess,\n          ac: item.propertyId?.ac,\n          gym: item.propertyId?.gym,\n          furnished: item.propertyId?.furnished,\n          electricBackup: item.propertyId?.electricBackup,\n          houseKeeping: item.propertyId?.houseKeeping,\n          imageURL:item.propertyId?.imageURL || \"https://via.placeholder.com/150\",\n          status: item.status,\n          profile: item.tenantData, // Added userID to the property object\n        }));\n        setProperties(formattedProperties);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n     \n    };\n\n    fetchData();\n  }, [id]);\n\n  return (\n    <>\n      <Side />\n      <div className=\"flex flex-col items-center p-8 bg-gray-50 min-h-screen\">\n        {properties.length === 0 ? (\n          <p className=\"text-gray-500 text-lg\">Loading...</p>\n        ) : (\n          properties.map((property, index) => (\n            <div\n              key={index}\n              className=\"w-3/4 max-w-4xl bg-white shadow-md rounded-lg p-6 mb-6 ml-20 flex flex-col md:flex-row items-start md:items-center md:justify-between space-y-4 md:space-y-0\"\n            >\n              <div className=\"md:w-1/3 flex-shrink-0\">\n                <img\n                  src={property.imageURL}\n                  alt=\"Property\"\n                  className=\"w-full h-48 object-contain rounded-lg\"\n                />\n              </div>\n              <div className=\"md:w-2/3 md:ml-6 space-y-2\">\n                <h3 className=\"text-xl font-semibold text-gray-800\">\n                  {property.name}\n                </h3>\n                <p className=\"text-gray-600\">\n                  <strong>Address:</strong> {property.address}\n                </p>\n                <p className=\"text-gray-600\">\n                  <strong>Rent:</strong> \u20b9{property.rent}\n                </p>\n                <p className=\"text-gray-600\">\n                  <strong>Security:</strong> \u20b9{property.security}\n                </p>\n                <p className=\"text-gray-600\">\n                  <strong>Amenities:</strong>\n                  {property.wifi && \" WiFi,\"}\n                  {property.parking && \" Parking,\"}\n                  {property.laundry && \" Laundry,\"}\n                  {property.mess && \" Mess,\"}\n                  {property.ac && \" AC,\"}\n                  {property.gym && \" Gym,\"}\n                  {property.furnished && \" Furnished,\"}\n                  {property.electricBackup && \" Electric Backup,\"}\n                  {property.houseKeeping && \" Housekeeping,\"}\n                </p>\n              </div>\n              <div className=\"md:w-2/6 flex flex-col space-y-2\">\n                {/* Status Button */}\n                <button\n                  className={`px-4 py-2 rounded-lg text-sm font-bold ${\n                    property.status === \"accepted\"\n                      ? \"bg-green-500 text-white\"\n                      : \"bg-red-500 text-white\"\n                  }`}\n                >\n                  {property.status === \"accepted\"\n                    ? \"Accepted\"\n                    : property.status === \"rejected\"\n                    ? \"Rejected\"\n                    : \"Pending\"}\n                </button>\n\n                {/* Send Token Button */}\n                <button\n                  className={`px-4 py-2 rounded-lg text-sm font-bold transition-colors duration-200 \n    ${\n      property.status === \"accepted\"\n        ? \"bg-blue-500 hover:bg-blue-600 text-white cursor-pointer\"\n        : \"bg-gray-300 text-gray-600 cursor-not-allowed\"\n    }\n  `}\n                  disabled={property.status !== \"accepted\"}\n                  onClick={() => handleClick(property.profile,property.vendorId)}\n                >\n                  <PaymentButton amount={property.security} />\n                </button>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Showstatus;\n"
        },
        {
            "name": "vend.css",
            "size": 624,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vend.css",
            "path": "client/src/pages/vend.css",
            "content": "body {\n    background-color: #f4f4f4;\n}\n\n.pg-form {\n    background-color: white;\n    padding: 20px;\n    border-radius: 30px;\n    margin: 6vw;\n}\n\n.amenities-container {\n    display: flex;\n    flex-direction: column;\n    margin-top: 10px;\n}\n\n.amenities-buttons {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.submit-section {\n    margin-top: 20px;\n}\n\n.photo-box {\n    border: 2px dashed #ccc;\n    padding: 20px;\n    text-align: center;\n    cursor: pointer;\n    margin-top: 20px;\n}\n\n.photo-box p {\n    margin: 0;\n    font-size: 16px;\n    color: #888;\n}\n\n.photo-box:hover {\n    background-color: #f9f9f9;\n    border-color: #aaa;\n}"
        },
        {
            "name": "showlist.css",
            "size": 2235,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vendor/showlist.css",
            "path": "client/src/pages/vendor/showlist.css",
            "content": "\n.main-box {\n    margin-left: 20vw;\n    margin-top: 5vh;\n    display: flex;\n    flex-direction: row; \n    flex-wrap: wrap;\n    gap: 13px; \n    padding: 20px;\n}\n\n.main-box2{\n    margin-left: 20vw;\n    margin-top: 5vh;\n\n}\n\n\n.tenant-card {\n    display: flex;\n    width: 65vw;\n    height: 40vh;\n    border: 1px solid #e0e0e0;\n    border-radius: 8px;\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n    overflow: hidden;\n    margin: 20px auto;\n    background-color: #fff;\n}\n\n.profile1 {\n    width: 30%;\n    height: 100%; /* Ensure the profile section takes up full height */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background-color: #f9f9f9;\n    padding: 10px; /* Adding padding to ensure the image doesn't touch edges */\n}\n\n.profile1 img {\n    width: auto; /* Adjust the width to fit better inside the profile container */\n    height: 60%;\n    border-radius: 8px;\n    object-fit: cover;\n\n}\n\n.tenant-details {\n    width: 50%;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n.tenant-name {\n    font-size: 1.5rem; /* Slightly larger font for better visibility */\n    font-weight: 600;\n    margin-bottom: 10px;\n}\n\n.tenant-info {\n    margin-bottom: 20px;\n    line-height: 1.5;\n    font-size: 1rem; /* Ensure readability */\n}\n\n.view-id-btn {\n    /* margin-top: 10px; */\n    padding: 8px 12px;\n    background-color: #007bff;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    cursor: pointer;\n    height: 60px;\n}\n\n.view-id-btn:hover {\n    background-color: #0056b3;\n}\n\n.action-buttons {\n    display: flex;\n    gap: 10px;\n    margin-top: 10px; /* Ensure there's space between the action buttons and other content */\n}\n\n.action-button {\n    padding: 8px 16px;\n    border-radius: 4px;\n    font-weight: 600;\n    cursor: pointer;\n    border: none;\n    width: 25%; /* Full width for the action buttons */\n}\n\n.action-button.accept {\n    background-color: #28a745;\n    color: white;\n}\n\n.action-button.accept:hover {\n    background-color: #218838;\n}\n\n.action-button.reject {\n    background-color: #dc3545; /* Changed to red for reject */\n    color: white;\n}\n\n.action-button.reject:hover {\n    background-color: #c82333;\n}\n"
        },
        {
            "name": "Dash.css",
            "size": 1190,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vendor/Dash.css",
            "path": "client/src/pages/vendor/Dash.css",
            "content": ".dash {\n    \n    width: 265px;\n    height: 100%;\n    padding: 20px;\n    position:absolute;\n    background-color: rgb(249, 236, 241);\n    box-shadow: 0 4px 10px rgba(6, 35, 179, 0.2);\n    border: 1px solid rgba(180, 167, 220, 0.2);\n}\n\n.dash h2 {\n    font-size: 1.5em;\n    margin-bottom: 1em;\n}\n\n.dash ul {\n    list-style: none;\n    padding: 0;\n}\n\n.dash ul li {\n    margin: 2em 0;\n    color: #ff9f00;\n}\n\n.dash ul li :hover {\n    background-color: #3cff00;\n}\n\n.dash ul li a {\n    display: block;\n    background: linear-gradient(90deg, #4a90e2, #a63db4, #f66d6d);\n    color: white;\n    text-decoration: none;\n    font-size: 1.1em;\n    padding: 12px 15px;\n    /* Add padding for space around the text */\n    width: 100%;\n    /* Makes anchor take full width of the sidebar */\n    box-sizing: border-box;\n    /* Ensure padding doesn\u2019t affect width */\n    border-radius: 8px;\n    transition: background-color 0.3s ease, color 0.3s ease;\n}\n\n\n.dash ul li a:hover {\n    transform: scale(1.1); /* Slightly enlarges the text */\n    text-shadow: 0 2px 5px rgba(255, 255, 255, 0.3); /* Adds a soft white shadow around the text */\n    letter-spacing: 0.5px; /* Slightly increases the letter spacing */\n}\n"
        },
        {
            "name": "Showlist.jsx",
            "size": 1550,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vendor/Showlist.jsx",
            "path": "client/src/pages/vendor/Showlist.jsx",
            "content": "import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Dash from './Dash.jsx';\nimport './showlist.css';\nimport { useSelector } from 'react-redux';\nimport Card from '../../components/Card.jsx';\nimport url from '../../url.jsx';\n\nconst Showlist = () => {\n    const userDetails = useSelector((state) => state.user.currentUser);\n    console.log(userDetails)\n    const id = userDetails._id;\n    console.log(id);\n    const [properties, setProperties] = useState([]);\n    // const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchProperties = async () => {\n            try {\n                const response = await axios.get(`${url}/api/vendor/getvendor/${id}`);\n                setProperties(response.data);\n\n\n                console.log(response.data, \"response\");\n\n            } catch (err) {\n                setError('Failed to load properties.');\n            }\n        };\n\n        fetchProperties();\n    }, []);\n    console.log(properties, \"properties\");\n\n\n        return (\n            <>\n                <Dash />\n                <div className='main-box'>\n                    {console.log(properties, \"inside div\")}\n                    {\n                        Array.isArray(properties) && properties.length > 0 \n                        ? properties.map((property) => <Card key={property._id} listing={property} />)\n                        : <p>No properties available</p> \n                    }\n                </div>\n            </>\n        );\n    };\n    \n    export default Showlist;\n    \n"
        },
        {
            "name": "Showtenant.jsx",
            "size": 6297,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vendor/Showtenant.jsx",
            "path": "client/src/pages/vendor/Showtenant.jsx",
            "content": "import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { Typography, Box, Grid, Card, CardContent, Avatar } from '@mui/material';\nimport { GiConsoleController } from 'react-icons/gi';\nimport \"./showlist.css\";\nimport Dash from './Dash.jsx';\nimport toast, { Toaster } from 'react-hot-toast';\nimport url from '../../url.jsx';\n\nfunction Showtenant() {\n    const [tenantData, setTenantData] = useState(null);\n    const [error, setError] = useState('');\n\n\n    // Get the current user ID from Redux store\n    const userDetails = useSelector((state) => state.user.currentUser);\n    const userId = userDetails?._id;\n    console.log(\"User ID : \", userId);\n\n    useEffect(() => {\n        const checkTenant = async () => {\n            if (!userId) {\n                toast.error('User ID not found. Please log in.');\n                return;\n            }\n\n            try {\n                // Call the API to fetch tenant data\n                const response = await axios.get(`${url}/api/request/getrequest/${userId}`);\n                const tenants = response.data.request.map(req => req.tenantData.tenant);\n\n                if (response.status === 201) {\n                    setTenantData(response.data.request);\n                } else {\n                    console.log(\"No tenant data found:\");\n                    setError('No tenant data found for this user.');\n                }\n            } catch (err) {\n                console.error(\"Error fetching tenant data:\", err.message);\n                setError('Failed to fetch tenant data. Please try again later.');\n            }\n        };\n        checkTenant();\n    }, [userId]);\n    console.log(tenantData, 900);\n\n    // Handle click for Accept or Reject\n    const handleClick = async (status, id) => {\n        console.log(\"Status : \", status, \" ID : \", id);\n        // setClick(true)\n\n        try {\n            // API call to update the tenant status\n            const response = await axios.put(`${url}/api/request/updateStatus/${id}`, {\n                status: status,\n            });\n\n            if (response.status === 200) {\n                toast.success(`Tenant request ${status} successfully.`);\n                // Update the local state to reflect the change\n                setTenantData(prevData =>\n                    prevData.map(tenant =>\n                        tenant._id === id ? { ...tenant, status: status } : tenant\n                    )\n                );\n            } else {\n                toast.error(`Failed to update the status. Please try again.`);\n            }\n        } catch (err) {\n            console.error(\"Error updating tenant status:\", err.message);\n    \n            toast.error(`Error: ${err.message}`);\n        }\n    };\n\n    return (\n        <>\n            <Dash />\n            <div className=\"show-tenant-container main-box2 \">\n                {error && (\n                    <Typography color=\"error\" className=\"error-message\">\n                        {error}\n                    </Typography>\n                )}\n                {console.log(\"Tenant data \", tenantData)}\n                {tenantData && tenantData.length > 0 ? (\n                    tenantData.map((tenant) => (\n                        <div key={tenant._id} className=\"tenant-card\">\n                            <div className=\" profile1\">\n                                <img\n                                    onClick={() => window.open(tenant.tenantData.userImg, '_blank')}\n                                    src={tenant.tenantData.userImg}\n                                    alt=\"Profile Image\"\n                                    \n                                />\n                            </div>\n\n\n\n                            <div className=\"tenant-details\">\n                                <Typography variant=\"h6\" className=\"tenant-name\">\n                                    Name: {tenant.tenantData.name}\n                                </Typography>\n                                <div className=\"tenant-info\">\n                                    <div>\n                                        <strong>Organization:</strong> {tenant.tenantData.organization}\n                                    </div>\n                                    <div>\n                                        <strong>Designation:</strong> {tenant.tenantData.designation}\n                                    </div>\n                                    <div>\n                                        <strong>Address:</strong> {tenant.tenantData.address}\n                                    </div>\n                                    <div>\n                                        <strong>Govt Id Number:</strong> {tenant.tenantData.aadhaarNo}\n                                    </div>\n                                    <div>\n                                        <strong>Experience:</strong> {tenant.tenantData.experience} years\n                                    </div>\n                                    \n\n                                    <div className=\"action-buttons\">\n                                    <button\n                                        onClick={() => window.open(tenant.tenantData.aadhaarURL, '_blank')}\n                                        className=\"view-id-btn\"\n                                    >\n                                        View Govt ID\n                                    </button>\n                                        <button onClick={() => handleClick('accepted', tenant._id)} className=\"action-button accept\">\n                                            Accept\n                                        </button>\n                                        <button onClick={() => handleClick('rejected', tenant._id)} className=\"action-button reject\">\n                                            Reject\n                                        </button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                ) : (\n                    <Typography variant=\"body1\" className=\"no-requests\">No requests</Typography>\n                )}\n            </div>\n        </>\n    );\n}\n\nexport default Showtenant;\n"
        },
        {
            "name": "Dash.jsx",
            "size": 667,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/vendor/Dash.jsx",
            "path": "client/src/pages/vendor/Dash.jsx",
            "content": "import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Dash.css';\n\nconst Dash = () => {\n    return (\n        <div className=\"dash\">\n       \n            <ul>\n                <li>\n                    <Link to=\"/viewlist\">View Listings</Link>\n                </li>\n                <li>\n                    <Link to=\"/vend\">Create Listing</Link>\n                </li>\n                <li>\n                    <Link to=\"/view-tenants\">View Tenants</Link>\n                </li>\n                <li>\n                    <Link to=\"/view-dash\">View DashBoard</Link>\n                </li>\n            </ul>\n        </div>\n    );\n};\n\nexport default Dash;\n"
        },
        {
            "name": "video.mp4",
            "size": 51999,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/pages/video.mp4",
            "path": "client/src/pages/video.mp4",
            "content": "\u0000\u0000\u0000 ftypisom\u0000\u0000\u0002\u0000isomiso2avc1mp41\u0000\u0000\u0000\bfree\u0000\u0000\ufffd%mdat\u0000\u0000\u0002\ufffd\u0006\u0005\ufffd\ufffd\ufffd\ufffdE\ufffd\ufffd\ufffdH\ufffd\ufffd,\ufffd \ufffd#\ufffd\ufffdx264 - core 159 r2991 1771b55 - H.264/MPEG-4 AVC codec - Copyleft 2003-2019 - http://www.videolan.org/x264.html - options: cabac=1 ref=3 deblock=1:0:0 analyse=0x3:0x113 me=hex subme=7 psy=1 psy_rd=1.00:0.00 mixed_ref=1 me_range=16 chroma_me=1 trellis=1 8x8dct=1 cqm=0 deadzone=21,11 fast_pskip=1 chroma_qp_offset=-2 threads=22 lookahead_threads=3 sliced_threads=0 nr=0 decimate=1 interlaced=0 bluray_compat=0 constrained_intra=0 bframes=3 b_pyramid=2 b_adapt=1 b_bias=0 direct=1 weightb=1 open_gop=0 weightp=2 keyint=250 keyint_min=25 scenecut=40 intra_refresh=0 rc_lookahead=40 rc=crf mbtree=1 crf=23.0 qcomp=0.60 qpmin=0 qpmax=69 qpstep=4 ip_ratio=1.40 aq=1:1.00\u0000\ufffd\u0000\u0000!<e\ufffd\ufffd\u00007\ufffd\ufffd\ufffd\ufffd\ufffd\u00056;\ufffd\u0417\u0011\ufffd\ufffd3\u001f\ufffd\u0015\ufffd\ufffd47\ufffd\ufffd\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u000e.\ufffd\ufffd7`q4\ufffd\ufffd\u0000\u0000\u0003\u0000s\ufffd\u0017\ufffd@\ufffd\ufffd\u0004\ufffd\u0017\ufffd\ufffd\u0006\ufffd7\ufffd\b\u0017\ufffd*\nN\ufffd\ufffd\ufffd\r}>a2V\u0000\u0003\ufffd%L\ufffdx\ufffdn^\u0004\ufffd\ufffd\ufffd:\ufffd3QX\ufffd\u034c*\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffdQ\ufffdd\ufffd\ufffd\ufffd9\t\ufffd\ufffd\ufffd\u000b\ufffd\ufffd\ufffdr\ufffd\ufffd\u0003?g\ufffdtH\ufffd\u0006\ufffd\ufffd,\ufffd\ufffdl3\ufffd\u0017\ufffdT\ufffd\ufffd)\ufffd\u0011\ufffd|k\u00ba\u001e%\ufffd\n]<a\ufffd3\ufffd\n\u0015\ufffd\ufffd\ufffd\ufffdg\ufffd_me\u014d<\u0000\r\u06b9\ufffd\ufffd\ufffd7\u001c\ufffd\ufffd8\ufffd\u0016\ufffd\ufffd\ufffdn\u0016\ufffd\ufffd\ufffd3\u001e\ufffd\ufffd\u00004?\ufffd^\ufffd\ufffd\ufffd!\ufffd\u0007\u0017\ufffd7@\ufffd\ufffd\ufffd\ufffd)k\ufffd\ufffd\t(\ufffd\ufffd\ufffd}\ufffd\ufffd\ufffde\ufffd\ufffd\ufffd\ufffd\u0007h@\u0000\ufffd\ufffd\u0005\ufffd\ufffd\ufffd\ufffd\ufffd\u0000\ufffd\ufffd\n\ufffd\ufffd\u0005x\ufffd\ufffd\ufffd\u0007x\u001e\u0011\ufffd\u0016\ufffdk\ufffd_\u0006'x\ufffd\u0013.\ufffd\ufffd\ufffd\r?\ufffd\u001c\ufffd\ufffd\ufffdW^\ufffd\ufffd\u037c L\ufffdX\ufffd;\u001e\ufffdO!\ufffd;^\ufffdZn\ufffd\\$H\u0215jwY\u001fH>\u03045\t{9I7'qk\ufffdo#:\ufffdi\ufffd\ufffdQ\ufffd\ufffd+\ufffd\ufffdh\tG\ufffd\u0011\ufffdr:o\ufffd\ufffd!\ufffd\ufffd\u001axGPL\ufffdkc\n\u0179Jv\ufffd\ufffdd\ufffd4o#l[\u001bB\ufffd&\ufffd]\ufffd|\n\ufffdz\u0012\u001a\ufffd\u0018\ufffd\u001a\u0005\ufffdx)\ufffd\ufffd\ufffd^c'f\ufffd\ufffd\ufffdm\ufffd\ufffd&\ufffd3\ufffdm\ufffd\ufffd6\ufffd\ufffd\ufffd\ufffd`\ufffd<\u000f(\ufffd\u036d[MS\u0002\ufffd\u0013J\u01ca\ufffd\ufffd3S\ufffd\ufffd\ue5dfoG\u0703\ufffdz\ufffd\ufffd\ufffd\ufffd<\u0279\u069cy\u0014N\n\ufffd\ufffdl\u01375\ufffda\r^\r\ufffd\ufffd\u04d7\u0007?gPqO\ufffdj\u0016\ufffd\ufffd7\ufffd\u000b`\ufffd\u0006\ufffd\ufffd\u0574\ufffd@\"\ufffd\u0012\u0005\ufffdrt(\n\u0016\ufffdr\ufffdD\ufffd\ufffd\u000e\ufffd!\ufffdWN\ufffd\ufffd#\ufffdl\ufffd\\\ufffd2\u0007\ufffd\u001e\u0005\u0017\ufffd\ufffd\u0007YM\ufffd\ufffdM\ufffd\ufffd\u0015\ufffd\ufffd\ufffdp\ufffd\r\ufffdR_\ufffd\ufffd\u0016\u0000bAV\ufffd\ufffdhi\"\u071f\bf.\ufffd!\ufffd\u0015\ufffdR\ufffd{\ufffd\ufffd\ufffdQ\ufffd5(r\ufffdn%\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd_\ufffd\u001e\ufffd\ufffd\"`\ufffd\ufffd\u0016\ufffd\f\u0001\ufffd,~\ufffd%;N\u0000H\ufffd\ufffd\ufffd\ufffdY'}1\u0018\r\u0019\ufffd\u00078\ufffd]#\u000f\ufffd#\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd>\ufffd\ufffd\u001b\ufffdb\ufffd\ufffd\ufffd|\ufffd\ufffdQ;\u000fj\ufffd\ufffd\ufffd \ufffd\u0754\ufffd\u000e.!e\ufffd\ufffd\u0403eM\ufffd\ufffd\ufffd\ufffdu4)\ufffd-R\ufffd\ufffd\ufffd}j|Ft\ufffd\u07c7!\ufffd\u001b\ufffd\ufffdXoP\u0015jo\ufffd ])\u001be\ufffd\ufffd\ufffd \u0753\u001a\ufffd\ufffd\u02a0\ufffd\ufffd>A\u001a\ufffd\ufffd1\u001c71#\ufffd\u0012r\ufffd\u001d\ufffd\ufffd\ufffd\ufffd\ufffdv\ufffd\u001c2Z\ufffd\ufffd\ufffd\ufffd\u001e:\ufffd\ufffd\n\ufffd\u001c58eAmj\u001f\ufffdI\ufffdc~>\ufffd\ufffd\ufffdW\ufffd\ufffdBR\t\ufffd\u000f\u0005\ufffd\ufffd\fD\ufffd\u0002\ufffd$\u0019\ufffdi\ufffd\u000f\ufffd;\ufffd~s\ufffdK\ufffd<\ufffdp\ufffdK)\f\ufffd9Q\u0003\t\ufffd\u001e\ufffd\b8\ufffd\ufffd\u0003\ufffd\ufffd\ufffd\ufffdhEh\ufffd\ufffd\ufffdgR\ufffd\u0001w\ufffd\ufffdY\r \u0015\ufffd!\ufffd\ufffd\u0672%\ufffdo\ufffd\ufffd\ufffd}t4\u000e\ufffdm&\ufffd\ufffds\f\ufffd\u0003\b\ufffd&1\b\ufffd\u0013\ufffdw\b|>\ufffd\ufffdI$\ufffd#\ufffd\ufffdF\ufffd\ufffdJ\b\ufffd{\ufffd\ufffd6`/\ufffd\ufffd\ufffdH\u0216Pv\ufffd4\ufffd\u07a2J-9E\ufffd*E:\ufffd\ufffd\u0001\ufffd1\ufffd\r\ufffd\ufffd&%G\ufffd\u0000\ufffd\ufffd\u06c7u\ufffd\ufffd\u001aW\ufffd\ufffd\f\ufffd\ufffd\ufffd\u0007Hgt~6\f@\ufffdf\ufffd\u001fOb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdc2K\ufffd\ufffd\ufffdg`\u000e\ufffd6\ufffd\ufffd9\b\ufffdr\ufffd\ufffd6o\ufffd\ufffdc\u04d3\ufffd\u0013V\ufffd\ufffd<\ufffd\ufffd\ufffdA:j\u0000\ufffd^y4\ufffdV\ufffdF\ufffd\ufffd<-\ufffdv\f\ufffdEJd\n\ufffd%P\ufffd\ufffd\b.\u074fUU\u000f\ufffd\u0000\ufffdZ\ufffd\ufffd\ufffd\ufffd\ufffdc\ufffd\tP\u06d5E\ufffd9a)M\ufffd\ufffd\ufffd\ufffdW=}Q\ufffd\u05a3^s\ufffd\ufffd\ufffd\ufffdS_zn\ufffd*\ufffd\ufffdw\ufffd\ufffd\ufffd;\u000b\ufffd\u0013\ufffd|\ufffd\ufffdI\ufffdV\u063c\u0002r~\ufffd\u0001!,\ufffd\u0211m2F\ufffd\ufffds\ufffd\ufffde?2\ufffdc\ufffd\ufffd\ufffd\u0001\u0014\ufffd\ufffd1o.\ufffd\ufffd\ufffd\u007f\ufffd\u000b\u0018\u0005\ufffd\ufffd\ufffdAU4\ufffd\u0017\u0000=\u001d\ufffdg\u0197\ufffd\ufffd4$\ufffd\ufffd\ufffd\ufffd\u000b\ufffd?\ufffd\ufffd\u0012\ufffd\ufffdE@a\ufffds+\ufffdI\u04b6\u001f\ufffd\ufffd\ufffdx\u0000\ufffd\ufffd(c\ufffdK\ufffd\u0651\ufffd\u0001HU]\ufffd'Sa\u0016\r,!\ufffd\ufffd\ufffd\ufffd\ufffd9\ufffd\ufffdf\ufffd\ufffd^,N\u000b\u0006\ufffdG\ufffd$: \ufffd;\u0019m\ufffdT\ufffd\ufffdP{\u06dd\ufffdU%\ufffd>\ufffdd,\u06b5:E\ufffd4#\ufffd\ufffd+\ufffd\ufffd\u000b2\ufffdQ\ufffd\u0017\u007f\u0119\ufffd\ufffdKJ\ufffd\ufffd\ufffd\ufffd$\ufffd\u0004:\ufffd\ufffd\ufffdd1\ufffd\ufffd\ufffd\u0019;((\ufffdD\ufffd\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\u0016\b\ufffdp\ufffd\u0013mU\ufffd\ufffd\ufffd\ufffdo\ufffd.\ufffd6\ufffdc\ufffd\ufffd\ufffd\ufffd\u0725\ufffdN\ufffd\ufffd\ufffd\ufffdg4m\u0015^\ufffd\ufffd\ufffd\ufffd|\u0665\ufffdqCl\ufffd\ufffdIt\ufffd9\ufffd?\u00072O\f\u001a\ufffdQ\ufffd\ufffdZl\ufffd\u0524^D)v;)Jy\ufffd\ufffdvw\ufffdMG~\ufffda\ufffd\ufffd\ufffdL\ufffdBU(0\u000bd\ufffd`\ufffd\ufffdp\ufffdZ\r\ufffdN\ufffd\ufffdxL&T\ufffd\ufffd\u00007\ufffd\u0018\uf6fb\ufffd\ufffd\"\u00015\ufffd\ufffd\u000b\u000e\u0019)\u0609v\ufffd\ufffdV{\\\u0017?\ufffd\ufffdLf\u000etdg\u0019Ph!\ufffd\u0018\ufffd\ufffd\ufffd\ufffd\ufffdl\ufffd\u0003_mkF{\u001a9\ufffd>w\u0006\ufffd\ufffd\ufffd`\ufffd\u0012\ufffd\ufffdQ/\ufffd\u000b\ufffdX^\ufffd\t\ufffd\ufffd\u05fb\ufffde\u001a@z\ufffd/YZ\ufffd\u000b\ufffd\u0006\u000b\ufffd\ufffd\u000eB\tr\ufffd\ufffdY\ua4bb \ufffd%\u001b}0G\ufffd\ufffd?\ufffdUj\ufffd\ufffd5\ufffd.\ufffd\u0147T\ufffd\ufffd\ufffd7d\ufffdn\u001e\ufffdP\ufffde\ufffd\ufffdu\ufffd.pS\\\ufffdOx\u06eet_\ufffd}z\u001f6k\u001e\ufffdZ\ufffd-\u001bVr\ufffd93VM\ufffd\u007f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u03847h\ufffd~\ufffd\u001f\ufffdr\ufffd~\u000bB{V\ufffd\ufffd\ufffd\ufffd\ufffd\u001bk\u0003\ufffdv<\ufffde\ufffd{\ufffd\u0596\t>\ufffd(\u0015\ufffd\ufffd\ufffd\ufffd\ufffd*\u0001\u0017\ufffd\u001e\r\ufffd\ufffd\ufffdd\u0011\ufffd\ufffd\ufffd\u000fGr\ufffd\ufffd\ufffd\ufffd^\u04f8\ufffdsT`\u0019Z$\ufffd\ufffdy%\ufffd|\ufffd\b\ufffd+\ufffd\u0000\ufffd\u0002\ufffd\ufffd\ufffd\ufffd\ufffdQo|\ufffdr\ufffd\ufffd\ufffde\u0487_.b\ufffd\u001d\u007f\ufffd\rw~\ufffdsWM\u0003D1\ufffd\\\ufffd\ufffd=\ufffd\ufffd#\ufffd-\ufffd\ufffd\u0002\ufffd~\u001c\u0014\u0016he\u000e\t\ufffd\u000b)p9O\u0006\ufffd\ufffd\ufffd\ufffdd#$w:tf\u000fs\ufffd\ufffdc\ufffdigGi\ufffd\u0019\u06fe\ufffdW!\ufffdw\ufffd\ufffdVtt\u001c\ufffd~\ufffd\ufffd\ufffd\ufffdhke\u007fb\u0006(^b\ufffdS\u0006\ufffd\ufffd\u0002 \ufffd\ufffd\ufffd\ufffd\ufffd_`\ufffd\ufffd\ufffd\ufffd`\n}\ufffdANBDu\u0007\f\ufffd\ufffdbJ\ufffd\u0015\ufffd}#\ufffd\u0188;\ufffd\ufffd\ufffd?\ufffd\b\u00da\u0007\ufffdAb\ufffdCP%7|\ufffd\u0018T\ufffd\u0003z\u001b\ufffd\u001a(\u0117d~?\ufffd[\ufffd\u000b\ufffd\ufffd*p:)4\ufffd\u000f\u0010\u0452\ufffd|3G\ufffd\ufffd\t\ufffd\u0015\ufffd\ufffd\u0012\u0010.\ufffda\ufffds[m\ufffd\ufffd4\u001ew\\<\ufffd\u0017\ufffddQ}\u001a\u05ac%\ufffdD\u001c^\ufffd=y\ufffd}\ufffdz\ufffd\u0018\ufffd@>\u00100k\ufffd\u0000&`\u0000\ufffd\ufffd\u00146kl\ufffd7\u001d\u0007\u001e\u0673\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0006\ufffdU;P~\ufffdR\ufffd\ufffd\u0000\ufffd\ufffdXT\ufffd\ufffdYkM\ufffd\u0010\u001e\ufffdaJE\u000f\ufffdR\ufffd\ufffdb\u04cfb\ufffd.\ufffd\u0002j\ufffdW \ufffd\u0007\ufffd\ufffdU\ufffd\ufffdiC\ufffd\u05c5\u0188\u0011\ufffd\ufffd\ufffd\ufffd\u0014\ufffd\ufffd9\"\ufffd\u001d\ufffdI\ufffd\ufffdZ\ufffd\u000f)\u001br\ufffdA\u0012\r\ufffd\ufffd\u0016\u000e\ufffd\ufffd;Eg\ufffd0\\\ufffdp\ufffd\t\ufffd\u01b5!\ufffd\ufffd\ufffd\ufffdz\ufffd&\ufffd\u0003OV\ufffd\u0192,q\ufffd\ufffd\u000eEE\ufffdI<W\ufffd\u0017\ufffd\ufffd\\F\ufffdL\ufffd\u001c/\ufffdt_\u0017\ufffd?\ufffdg\ufffd\ufffd\u023a\ufffd\ufffd\ufffd\ufffdM\ufffdG\ufffd\ufffd\ufffdC\ufffd\ufffd\u001d\ufffd\u000f\ufffd\ufffdc\u0230\ufffd\udb47\udf07N\ufffd\ufffd\t*\ufffd\ufffd\fG3l\ufffd\ufffd\ufffdS\ufffd}n\ufffd\ufffd:\ufffd\ufffdINw\ufffd\ufffdL\ufffd{\ufffdQ\ufffd\"\ufffda\u04b07SF\ufffd\ufffd\\Y\u045f\ufffd\ufffdNv\ufffd5&\ufffd\u04d5\ufffd\ufffd\u001eqM\ufffd\ufffdp3\ufffd\ufffdq\ufffd\r\ufffd\ufffd'\ufffd\ufffdm\ufffd\ufffd\ufffd\"\ufffd\u0011\ufffd\ufffd\ufffd\ufffdX\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0011O\u000b\ufffdx\ufffd\ufffd\u0019\u0306T^\ufffd\ufffd\u9a87\ufffd#}\ufffd\u001a{\ufffd\u000e\ufffd\ufffd \ufffd\ufffd\u000e\ufffd\ufffd:-\ufffd|\n7\u001a!<\ufffdt\ufffd\ufffdB\ufffd\\d\ufffd\u0012\ufffd\ufffd\u05f1\u0001<c`N\ufffdX\u0005\ufffd\u0018\n\ufffd*\u043f\b\ufffdH\u0012S\u0018\ufffd3;s\ufffd\be\u0011\ufffd\ufffd\ufffd\ufffdDx\ufffd\ufffd\u0015\ufffd2%\ufffd$O1\u001a\u0007-\ufffd\ufffdT\u051f\ufffd\ufffd\u0563\ufffd\ufffdC\ufffdV\ufffd5W\ufffd.\ufffd\ufffd:}\ufffd\ufffd\ufffd\ufffd\ufffdN mk\ufffd\ufffd\ufffd\ufffd;\ufffdx\ufffd2+\ufffd\ufffd\ufffd\"\ufffdD\\\u007fu\ufffd\ufffd\u001d\ufffd\u001a\ufffd0\ufffd\u001f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd(\ufffd\ufffd8\u0099\ufffd\u001a\ufffdYg\ufffd\ufffdU\ufffd\u00190J@Y\ufffd\ufffd>\u0004j,\ufffdQ=x\ufffd{A_y\ufffd[c\ufffd\ufffd]t)\ufffd7\u0003\ufffd?\ufffd\ufffd\u0019\ufffd\ufffdO \ufffd\u001a\u0526\ufffdO3tW\b\u0016\ufffd\ufffd'_\ufffd\u0019\u0010\ufffdA>fG!\ufffd\u0011\u0014\ufffd!SV\ufffd\u02fa#\ufffd\n\ufffd};\ufffd\ufffd\ufffd{\ufffdFzA\ufffd\u001d\ufffd$\u001f%\u0003\ufffd\ufffd|\ufffd\ufffdB\ufffd\ufffd\u01a2\ufffd\ufffd i\ufffd\u04f7`$\ufffd\u001a\ufffdiG\ufffdd\ufffd\ufffd\ufffd]\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\\)K-\ufffd\u018ewA\ufffdM\u0004\ufffd\u001d\ufffdd\u000fZ\u001e\ufffd`\u0000\uc9f5.^;\ufffd%\ufffd\ufffd\ufffd[\ufffd\ufffd-D\u001e\ufffd\u0003\u0004\u068d+\ufffd\ufffd\ufffdh\ufffde\ufffdn\ufffde\ufffd\ufffd\ufffd/\ufffdpR\u0015\ro\ufffd\ufffd\u06ec\ufffd\ufffd\ufffd8A9\ufffde\u0003\ufffd\ufffdZ\u0014R\ufffdv\ufffd\u0000-\ufffd\ufffd\"A:\u001cR\ufffd\ufffd\ufffdt\ufffd$\u05b3w9\ufffd\"\ufffd\ufffd_]\ufffdp\ufffd\ufffd\u0006Df\u0018z\ufffd\u0018N\ufffd`\u0015\ufffdDc\ufffd\u0006{A\u0001\ufffd\ufffdF\u001f,\ufffd\ufffd\ufffdk\ufffdy\u0007\ufffd\u0007\ufffd\ufffd\u0015\ufffd\ufffd\ufffdY \ufffd\ufffdRB\ufffd\ufffd\ufffd)\ufffd\t\ufffd\ufffd\ufffd\u059e\ufffd9\ufffdz\u0015\ufffd\ufffd\ufffd\ufffd+O^V5\ufffdo\ufffd\u001b\ufffd\ufffdow\ufffd\ufffdT\ufffdSrMQ\u0771\u0003\ufffd\ufffd5\ufffdu\ufffd\ufffd-\\\ufffdfJ\ufffd'\ufffd\f\ns\u0018\ufffd\ufffd\ufffd\u0013\ufffd6@5o\ufffd\ufffdN\ufffd\\\u07644\ufffd'\ufffdnZ\ufffd\u0019\u07e7\ufffdF\ufffd\ufffdq\u0001x<\ufffd\ufffd\ufffdoy\ufffd\u34ff\ufffd\n\ufffd\ufffd\ufffd4\ufffd\ufffd:\ufffd=\ufffdN\ufffd\u03bc\ufffd\ufffdk\ufffd\ufffdG8/)E\ufffdU\ufffd\u0018\ufffd\ufffd{\ufffd5TZ\f\ufffd\ufffd\r\ufffdT\u001c7!\ufffd\ufffd\u0013\ufffd\ufffd\ufffd\ufffd\ufffd`\ufffd6\ufffd\ufffdsp\ufffd\u001b))*\ufffd\ufffd\ufffd\u059a\ufffdn\u001e\ufffd\ufffdN\ufffd8\ufffdY\u000f\ufffd85or~\ufffd\ufffdOzC\ufffd\ufffd\n-\ufffd\n\u001fx\u0013lR\ufffdBI1\ufffd\"\ufffd\ufffd}\ufffd\u0016\ufffd\ufffd^@\ufffd\ufffdC\ufffd\u0014V\ufffdR*\ufffd\ufffd\u0203\ufffdV\ufffdV4r\ufffd\ufffd\u0507.?E\ufffd+\u0001\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdtn>\ufffd\u0016\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdU\\A\ufffd\ufffd\ufffd6\ufffd\ufffd\u0018\ufffd\ufffd?\u007f\ufffdc1\ufffd>\ufffd\ufffd\u001e\ufffd_\ufffdC aq\ufffd #\ufffd\ufffd\ufffd\ufffd\ufffd\u0011,>\u000b\ufffdS\t;\ufffdAF\ufffd\ufffd4&\u0015\ufffd\u0017\ufffd\ufffd\ufffd\ufffd/)k\ufffdz\u007f\ufffd\f\ufffd\ufffd\ufffdm\ufffd\ufffd\ufffd\u0017\ufffdh\ufffd\ufffd>ac\ufffd)\ufffd7\ufffdu4\ufffd\u0006\ufffd\ufffd/\u0014\ufffdK\u000e\ufffd\"\ufffd\ufffd);\u001e\u0002\u00b1\ufffdgL\ufffd_\u007fr\u0004-G\ufffdR\ufffd2\ufffd<H#|\ufffd>\ufffd\ufffd\ufffd\ufffd\u0005\u0488U\u0573\ufffd4\ufffd\ufffd\ufffd<\ufffd\u8bd61\ufffd\ufffd\u0764\u00ed\ufffdk~l-T\ufffd\u007f{\ufffd\ufffd\u0014\n\ufffdK\u001d\ufffd\ufffdV4\ufffdy]6Q\u001dtaZX+\b\u0002\ufffdQ\ufffd~\u0011\ufffd\u001d]\ufffdbw#$\u0002(Y\u0002\u07c0\ufffdo%]aMl;B\ufffd\ufffd\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffdm\ufffd?\ufffd\ufffd|\u0633\ufffd\ufffd\ufffd\u0001Z\ufffd\ufffdK|\u0006\ufffd\ufffd\u0015\ufffd\ufffd_Q\ufffdMB \ufffd\ufffd\ufffd!\u0003\ufffd\ufffdu\ufffd\u0474\u0004\ufffd\ufffdJ{@\ufffd\ufffd\ufffd\u001d>\ufffdu\u0015P\u0002\ufffd@FE\ufffds\ufffd\ufffd\u0012\ufffdbl*\ufffd$A\u0011\u001b\ufffd$\ufffd\ufffdk\u0001\u0013.\t\ufffd\ufffd\u0019nfp\ufffd\ufffd\u0014\u0004\"G\ufffd5\ufffd\ufffd\u001d\ufffd\ufffdO\ufffd\ufffd\ufffd\u019f)\u000e\ufffd\ufffd\ufffd7I\ufffd\ufffd\u0016\ufffd\ufffd\u0016uHG\ufffd`\ufffd\ufffd\ufffdw\ufffds\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffd4G[R\ufffd\u001a\ufffd\ufffd\ufffd\u0011\ufffdT{\u043a\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\u0005\u0002\ufffdP3|nj\ufffd|,e\ufffd\ufffd!%\u0016\ufffd\ufffd\ufffd\ufffd\ufffd\"\u001c\ufffd\ufffd\ufffd\ufffd.T\u000e\ufffdg\ufffdm\ufffd\ufffdGl)(-\u0004k'\ufffd\ufffdY\u0001[\u02593\ufffd^\u0019u\ufffdi\ufffdR\u0017\ufffdd\ufffd\ufffd\ufffdt\ufffd\u0011 \ufffd\ufffd]\u0000\ufffd\ufffd\ufffd\ufffd\ufffd\u0019\ufffd\ufffdk\ufffd\u001b\ufffdO\ufffd\ufffds\ufffd\u0019?\ufffd\ufffd0\\`o\ufffdm\ufffdc\ufffd|3\ufffd\ufffd\u07aa\ufffd\u048e\ufffdK \u0004\ufffd\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\ufffd\u001d\u001b\u0014Z\\\ufffd\u0003\u001d\ufffdg\ufffd='\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdc\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffdz\ufffd\ufffdd\ufffd\ufffd\ufffd/<\ufffd\ufffd\ufffdq\ufffd\ufffdS\ufffde\ufffd;wG\ufffd\ufffd\ufffd\ufffdNv\ufffd\u0003\ufffd\ufffd\ufffd%\ufffd\ufffd\n}#?v\ufffd\r\ufffd\ufffdV\u007f\ufffd\ufffd6^\ufffd\ufffd\ufffd\u021fv\ufffd\u0005)J\ufffd\ufffd\u000b x\u049c\ufffd\ufffd2~^\ufffd\ufffd\ufffd\ufffde>\ufffd\ufffdM\ufffd\ufffd$\u0503\ufffd\b#\ufffdbF\ufffdx%\ufffd\ufffd\ufffdN\ufffd7A\ufffd`\ufffdp#\ufffd>\ufffd\ufffdp\ufffd\ufffdt\ufffd\ufffdO\ufffd\ufffd\u07da\ufffd0+\ufffdK\ufffd\ufffdRy\ufffd\u0015\u001dH\ufffd\ufffd\ufffd_{\"\ufffdm]7:\ufffdN`\ufffd\u0000\ufffd\ufffd*6<\ufffd-C\ufffd\ufffd\ufffd;\u0014\ufffd{\ufffd\ufffd\u000e\ufffd>\ufffd\u0015\u000f\u0001\ufffd\ufffd\ufffd~\ufffdC\ufffdmx\ufffd\ufffd\ufffddBB(\u0003!\u0018\ufffd\u0019\ufffdSv4\ufffdsw\ufffdI\ufffd$\u0006\ufffd\ufffd\ufffdT\u0012\u00176\u067f+\ufffd\ufffdNc\ufffd\u0019\ufffd\ufffdB=(`\ufffdu~|J\ufffd\ufffd.\ufffd\u0011\u0013\ufffd_\ufffdT\ufffd\ufffd\ufffd\ufffd\u0591\ufffd\ufffd/\ufffd4\ufffd\ufffd\ufffdy\ufffd&\ufffd7\ufffd4G0\u007f\ufffd9N\ufffd\ufffded\u0000);\frs\ufffdA\ufffd\u007f\ufffdq\ufffd,\ufffd+\ufffd)\ufffdw\ufffdY(\ufffdK\ufffd7|\ufffd\u000f\ufffd?\ufffd\ufffdF\ufffdA\ufffd:\ufffd(\ufffd\ufffd \ufffdr\ufffdf\ufffd\u000e\ufffd4G6i\ufffd\ufffd\"G,\u0723\ufffd\ufffd\u02b2c[\ufffd\u0168\ufffd\ufffd]*\ufffd\ufffd\ufffd\ufffd&\ufffd1\u001d\ufffdK\ufffd\ufffd?\ufffd\u028d\ufffd`zu\ufffdIp\ufffd\ufffdG\ufffd2/\ufffd'\ufffd\u0002\ufffd7\ufffd\u00a8}\ufffdo\u001a%Q\u0018\ufffd\ufffd\ufffd\u06f0\ufffd\u001eL\ufffd\ufffd\ufffd\ufffd?\u0014\ufffd\ufffdtF\ufffd\ufffdU\ufffd(\ufffd\ufffd\u0010\ufffd\u0015/]\ufffd\ufffdO?)h{\u7a54\ufffd$\u0005\ufffd`\ufffd\u000f\u0001g9\u0729\ufffd\ufffd\ufffd\ufffd\ufffdp\ufffd\u0001\u01af\ufffd\u0015\ufffdd\ufffd\u0013\u0003\ufffd\ufffd\u0004.%\ufffd\ufffd+\ufffd\ufffdp\ufffd\u0001{\ufffd\ufffd\ufffd3F\ufffdF\ufffdp\ufffd\u001e\ufffd\u001e\ufffd\u000b\ufffd\ufffdjc\ufffd\ufffdX\ufffd<{\u0012\ufffd\ufffdP{M\ufffdnf\ufffd\ufffdT\ufffd\u001d\ufffd\u001a$\u0191\ufffda\u0004D\ufffd\ufffd\ufffdp\u00162f:_6\ufffd5\ufffdI\ufffd\ufffd\ufffd\ufffd\u0012 >\ufffd\ufffd\ufffd\ufffdzK\ufffd\u000f\ufffd.\ufffd\ufffdX\ufffd]\ufffdHe\u001c\ufffd\ufffd\ufffd\u0013\ufffd\u0019\u0017:\ufffd\ufffd\u0016\ufffdW\ufffd\ufffdY\ufffdW\ufffd\ufffd\ufffdL\ufffd\ufffd\ufffdQZ\ufffd\r\ufffdk\u06da\ufffdK\ufffdH]\ufffd3q\u0005i\ufffd#\ufffd\u0016\u0015\ufffdcCz\u001e\ufffd\ufffd\ufffd\ufffd\ufffdyI\ufffdF\u0001d\ufffd\u066b\ufffd7\ufffd\ufffd\ufffd\u001bt\u05b9\ufffdOqe\ufffd\u001b\ufffd\ufffd\ufffd\ufffdR~\u001a\ufffd-.G\u02f9\ufffd`,\ufffdsG\ufffdxF{\u0000\ufffd\ufffdeY\ufffd\u001cz*\u001b\ufffd\ufffdjjV]\ufffd\ufffd\ufffd\ufffdR\ufffd\ufffd\ufffd\ufffdV\ufffd\ufffdA\ufffd\u0234\ufffd=|\ufffd\ufffd\ufffdU\ufffd\ufffda\ufffd\ufffd\ufffd\u000f\ufffd)u?X\ufffd\ufffd\ufffdp*'\u000e\ufffd7\ufffd\ufffd\ufffdQ\ufffd\ufffds\ufffdYQM0\u0004\ufffd\ufffd\ufffd13\ufffd\u0015\u0010@\ufffddm\ufffd\ufffd\ufffdM\ufffd\ufffdt\u0002\u063b\ufffd\u0299\ufffd\ufffd\ufffd.\u0017B\ufffd\u0011\u0012>\ufffd\u00f9\ufffd\ufffd!\ufffdSR1\ufffd\ufffdNu\u00abX\ufffd\u0003\ufffd\t\ufffd\ufffd&z\ufffd\u02a3\ufffdM\ufffd\ufffd\b\ufffd\u06f9\ufffd\ufffd%\ufffd9j\ufffdtV\ufffd\ufffd\ufffdh@\ufffd\u07e8\ufffd\u001c\ufffd\u017d\ufffd/\u001e\ufffd/N\ufffd{\ufffd%poyIN\u0001O'\ufffd\ufffd\ufffdB(\ufffd\ufffd\ufffdK\ufffd\ufffd\ufffd\ufffd\ufffd\u0576p~\ufffd\u033cuc\u05d2c*W\u0012)h\ufffdK\ufffd\ufffd\ufffd 5[\ufffd9y\ufffd\ufffd\u0010\ufffd\ufffd\ufffd\ufffdz;VJ=5\ufffd4q\ufffd'1:\u073e\u0014\ufffd\ufffd;\ufffd \u0010\ufffd\ufffd\ufffdA\ufffd%U\ufffd7Q\n\ufffdv\ufffd\ufffd7\ufffd\u001ebX\ufffdb\ufffdE\ufffd\ufffd{b\nH\u001c\ufffd\u0005R3jO\ufffd\ufffd\ufffd\ufffd+K\u0017\ufffd0\ufffd\ufffdN])\ufffd\ufffdz\ufffd\ufffd\ufffd\ufffdjv\ufffd\u01f3\ufffd`\ufffd\ufffd\ufffd8\u0286t\ufffdX\ufffd'I_\ufffdR\ufffd\u05b7\u0007\ufffd\tH\u0013\ufffdB\ufffd\ufffd\ufffdt\ufffd\u0018>\u0005\ufffd\ufffd\ufffd\u001cQt\ufffd\u000e\ufffdl\ufffd\"(\ufffd:G\ufffdhlk\b\b\r\ufffd\ufffd\u3385\ufffd-\ufffd\u0013\u0004\u0552\ufffd#\ufffd\ufffd\ufffd\ufffd\ufffdf\ri\ufffd\ufffdz\ufffd\u02d6\ufffd\ufffdo\ufffd\u0001d\ufffd\ufffdZ\ufffd\ufffd\ufffd\ufffd-\ufffd9\u00152\ufffd\ufffd\ufffd\ufffd}q(r\u001e\ufffd,j\ufffd\ufffdR\ufffd\u06f8!\ufffd\u02a7\ufffd\ufffd.\ufffd\ufffdM\ufffd[Y\"\r^\ufffd\u0019\ufffd^\ufffdSe\ufffdW\u046f\")\u0013$\ufffd\ufffd\ufffd\ufffdZOY\ufffd\ufffd\ufffd\ufffdG\ufffdO\ufffd&\ufffd#'\ufffd:\u055d[\u018dcg\f]\ufffd\ufffd1\ufffd\ufffdNp\u0018\ufffd\ufffd\ufd1cNl\ufffd\ufffdn_\ufffd\ufffd\ufffdp&R\ufffdm\ufffd\ufffd\ufffdJ\ufffd!\b\u047cz\u0017G\ufffdS\u0006\ufffd(\ufffd\ufffd\u0015-\u01e1_j\ufffdL7\ufffd\u001e\u0011\u024dy\ufffd\ufffd\ufffd\ufffd\u027e\n\ufffd\ufffd\ufffd0\u03d1\ufffdI\ufffd|sP+\u0017\ufffd6z[\ufffdD\u0003\ufffd\ufffd\ufffdUP4~\ufffd \u001c\ufffd&\ufffd\u000b\ufffd4\ufffd&J\uee56S\ufffd\ufffd=^\ufffd8\ufffd\ufffd\ufffd_Q3N8\ufffd[\ufffd\u0000\ufffd\ufffd:\u0006'\ufffd\ufffd\ufffdk\u007f\ufffdZ\ufffdK\ufffd\ufffd\ufffdK\ufffd\ufffd\u001e\u0269\ufffd\ufffd\ufffd\u0019:mDu\ufffdf\ufffdO\ufffd\ufffd\u0000\ufffd>hbv\ufffd\ufffd*\ufffd\ufffdI\ufffd$\ufffd\u000b%\u001ay\ufffdD\ufffd\u001c\ufffd/\ufffd`&$\ufffd\ufffd+\ufffd\ufffd\ufffd\\\ufffd\ufffdB4\ufffd\ufffd\ufffd@,\ufffd\ufffd\ufffd$\ufffdr\"c\u000f|\ufffd\u0014\ufffd\ufffdN\ufffd\ufffdi\ufffdj\ufffd\ufffd'\ufffd}Z\ufffd\ufffd\ufffd\ufffd'\ufffdo\u0016\u00005\ufffd\ufffd\"\ufffd\ufffdv\u03f3\u001a\u001d\ufffdI\ufffd\ufffd\u0005\ufffdH>\ufffd\ufffd\u0019\ufffdX\ufffd]B'\ufffd\ufffd\ufffd~\ufffd'\ufffd\ufffd&\u0742qm\ufffd\ufffd\ufffd\u009eswo\ufffd\u0662.\ufffd\ufffd\ufffd\ufffdan\ufffd\u007f\ufffd\ufffdh*g\ufffd\f\ufffdL,\ufffd8\ufffdh\ufffd\ufffd\ufffd\ufffd\ufffd\\\ufffdZ;~{n\u0564\ufffdK\u0018\u0000\ufffd\"\u001e\u0001\ufffd\u001a\ufffdUcvl \u0555C/\ufffd\ufffdI\ufffd\ufffd\u007f\ufffd\ufffdV\ufffd\ufffd\ufffd\ufffdi\ufffd\u0006\u0006\u0163\ufffd`\ufffd\u0013\ufffd\ufffd\ufffd~\u0013e\u0011L\ufffd\u001dW\ufffd02\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdr[\ufffd\ufffdR\u001e\ufffd<5\ufffd\u0015\ufffdu\ufffd\u0000lM\ufffd~\ufffdf%\ufffd\ufffd\ufffd\bB\ufffd\u00024\u3ece\ufffd\u0006\u001e\u00038\ufffdUi'\u062b\u000b\ufffdjC\b\ufffdb\ufffd\ufffd\u001ae;\ufffd\ufffd\ufffde\ufffd\ufffd\u001d\ufffd\ufffd\ufffd\u0017\ufffd\ufffd\ufffdw\ufffd\ufffd2\ufffd\u001c\ufffd\n\ufffd\u0003\ufffd(\ufffd1WK\\\f2\u0018v\ufffd\u048aNB<6\ufffd\ufffd\ufffda\ufffd\ufffd\ufffd$\u0019c\u001f\ufffd\u0006\ufffd\ufffd\u0005\ufffd+u@%q\ufffdK*\u0002\u0006\ufffd\ufffd\u0017\ufffd\ufffd)Z\ufffdB\ufffd\ufffde\ufffd\ufffda!==\r\u0000r\ufffdH\ufffd\ufffdR\ufffdR\ufffd\ufffd\ufffd\u0015\ufffdEZ?\u0012\ufffd(\ufffd\ufffd%\ufffdPi|)e\ufffd\u0003\b\ufffdM\t\u007f\ufffd\ufffd\ufffd\ufffd\ufffd[\ufffd'\ufffdC\ufffd\ufffd\\N\ufffd\ufffdw]\ufffd\ufffd\ufffdO0Q\ufffd\"\ufffd0\u00045'Ub\ufffd\ufffdO\ufffd\u0001\ufffd\ufffd\ufffd\u0013\u0004\u0000\u0001\u001c\ufffd\ufffd\ud9ae\udfb2\ufffd$\ufffdc\ufffdv\ufffd<\ufffd\ufffd\b\ufffd\ufffd\t\ufffdw\u001f\ufffd\ufffdV\u00078\u001e\ufffd\ufffd83+d-\ufffdk\ufffd\ufffd\u001c\u0017~\u001eh\ufffd\ufffd%C\u0014\u0006.\ufffd\rp\ufffd\u0087\ufffd\u0546\u0015\ufffd\ufffd\ufffd\u0006\ufffd{T\ufffd;\ufffd\u0000=\ufffd\bQ\\\ufffdA\ufffd\ufffd\u000ek\u0013\ufffd\u000f1\fZQ\u0018\ufffd2\u0007\ufffd9w_\ufffd^\u041e\ufffd\ufffdn\ufffd\ufffd\ufffdw\u0007\ufffd\u001a\u0234\ufffd2\ufffd\ufffd\ufffd\ufffd!$G\ufffd\ufffd5y%&\\\u0410\u02df\ufffd&\ufffdK*\ufffd\u0001~\ufffdX\ufffd\ufffd\ufffdM\ufffd\b\ufffd\ufffd \u066e`\ufffd\ufffd/L\\\n\ufffd1\ufffdF\u001f\ufffd\u0379\ufffd^\ufffd\ufffd\u000b\u07d6\ufffdj\ufffd\u0001V!\ufffd\r3]\ufffd0\f\ufffd\u03f4H\ufffd\u0015\u000f\u00f0?\u0002\n\ufffdH'.\ufffd\ufffd\ufffd\ufffdx\ufffdn\ufffdrZ\u0017\ufffd\ufffd\ufffd P\u0004\ufffdb3'\ufffd\u0002\u0019\u0006\ufffd{\\4,\u001cH@!\n&_\ufffdi\ufffd\ufffdW\ufffdZ\ufffd\"\ufffd\ufffd\ufffd\u181d\ufffd\ufffd\ufffd\u0018f~G1\ufffdU\\z\ufffd\ufffd\ufffdU\u001d\ufffd\u0005\ufffd\ufffdQz\ufffd\ufffd\u0001\ufffd\ufffd\ufffd\ufffd3\ufffdAC\ufffd(\ufffd7z\u035bl\ufffd\ufffd\ufffd\ufffd\"\ufffd\ufffd\u0012l\tF\ufffdF\ufffd5{\ufffdR\ufffd\ufffdo\u0000\ufffd\u0002\u047c\ufffd\"%\ufffd\bH\ufffd\u001a=\u000b\u001f\ufffd\ufffd/;j\ufffd\ufffd\u0007Q\u0392\ufffdd\ufffd\u001b\ufffd\u0000\ufffd\ufffd\u01f0\ufffd\ufffdE\u0018q#\ufffd.\ufffd\u00189\ufffd\u001dV\ufffd-!\ufffd\ufffd\ufffd&\ufffd\u001d\ufffd2\ufffd!T>\ufffd\u0000\ufffd\ufffd=,\ufffd\u0011\ufffd)\ufffd\bFA\ufffd\ufffd\ufffd\u0010I\u001c\ufffd%\ufffd\u07bb\u0767\ufffd\u0006\ufffdq\\\u043ev\ufffd`\ufffd\ufffd\ufffdY\ufffd\ufffdz\u0005[\ufffd\ufffd\ufffds\ufffd^6\u0012 \ufffdE\u001dM\u0015n\ufffd\ufffd\u0006\ufffd@\ufffd\ufffdLt\u0002\u0017Q\ufffd\ufffd\ufffd\ufffd\ufffd6\ufffd\u001a\ufffd\u0016e\ufffdO=\ufffd\ufffdQT&7\ufffd)\ufffd\ufffd\ufffd\ufffd|4!\\w\u0011\ufffd\ufffd\ufffd\ufffdOqr:}\ufffdu\u0017\ufffd\ufffd\ufffd\ufffd\u0254\ufffd\ufffd\ufffd\ufffd\u0002\u0018m\ufffd\ufffdv\ufffd\u0535\ufffd\u0313\ufffd\u0018/$\ufffd+\u0017\ufffd\ufffd\ufffd\ufffdI\u0019\ufffd`E\ufffdg\u01d8\u0004\ufffd\ufffd\ufffd\ufffd\ufffdo\u0016\ufffde]r6\ufffdhuG\ufffd\ufffd\\%*TTV(\u000e\ufffdB\ufffd\u0006\u0000\u000eySV\ufffd\ufffd\ufffdw\ufffd!A\ufffd\ufffd+\ufffdG\u001e>x\ufffd\u001c\ufffd\ufffd\ufffd\ufffd\\u\ufffdoy\u028a\ufffd\"\ufffdQ\ufffd\b\ufffdw\ufffdBo\\\ufffd\ufffdD\bL8\ufffdr\ufffd\u000b\u0091|S\ufffdk\ufffdG\ufffd\ufffd!)\u0585\ufffd\ufffdk\ufffd2'g\ufffd\ufffdK\ufffd\ufffdY\ufffd\ufffd7~\u0010\ufffdy<\ufffd\ufffd\ufffd\ufffd\ufffdMG\ufffd\ufffd\ufffd\ufffd|\ufffd\ufffd\u06ef\ufffd\ufffd\ufffd7_8\ufffdV\ufffd\ufffd\ufffd\ufffd\u0419\ufffd\ufffd%9\ufffd\njwW?\ufffd\ufffd\ufffd\ufffd\u01f7\ufffd\ufffd\u0017\ufffd\ufffd\ufffd2\ufffd\"\ufffd\ufffd8\ufffdIY\ufffd+\ufffd\u0005_\ufffdh\u043b\u0539\ufffdb7\ufffd\ufffdp\u001f\ufffdF\u0016\ufffd\ufffdK\ufffd\u0001\ufffd]\ufffdg\ufffdD\u001b\ufffd\ufffd\ufffd\u0379\ufffd\ufffdQ\ufffd\ufffdG\ufffd\ufffd=\u000f\ufffd\ufffd\u0001nl( G]\ufffdbk\ufffd\u0004\u0013\ufffd\u001c\ufffd7k\ufffd\t\n\ufffd\f\ufffd\ufffd\u0018\ufffd\u001d\ufffd\u0018l+1'_\ufffd\ufffd\u0002\ufffd\u0012\ufffdZ\ufffd\u0016\ufffd\ufffdp=\ufffd\ufffd\ufffd\ufffdmw\u001b(NLyG\u001ag\u7b58\ufffd\ufffdY\ufffd\ufffd\ufffd\ufffd\r\ufffd\u0297\u0006\u0012\ufffd=RJ\ufffd]\ufffdo\t,2#\ufffd'\u0016pL\ufffd\bX8\ufffd\ufffd7\ufffde\ufffdK\ufffd\ufffd\ufffdi[\ufffd\u0017\ufffd\ufffdn\ufffd\ufffd4\ufffdaee\ufffd\u0014Q\ufffdIE\ufffd\ufffd6\u001c,\ufffdC\ufffd?i\ufffd\ufffd\ufffd\ufffdH@\ufffd\u00015\u001a\ufffd\ufffd\u001cJ\u0014\ufffd\u000f\ufffd\u001aYl\ufffd\ufffd\ufffd\u7e8d4\u000b\ufffdNn\ufffd\u007f\u001cY\u0000\u0016\ufffd\u072cX\ufffd\ufffdn\u000f&/\\\ufffd\u0002\ufffdi\u07d9N]jw\\\ufffd\ufffd\ufffdh\ufffd*\ufffd\ufffd\ufffdu\u0011\ufffd=w\ufffd5\ufffd\ufffde\ufffd>\ufffdD\u0007I\ufffdi\u0ac42\ufffd\ufffd\u0003\r4\ufffd\ufffd\u001f\ufffd#J\u0011\ufffdZ\n\ufffd\u0013\ufffd\ufffdf\"\ufffd]\u000b&N[\ufffdx\ufffd>@\ufffdm\ufffd\ufffdY\\\ufffd\ufffd\n\ufffdH\u0005\ufffd\ufffd\ufffd\ufffd\u0007\r\ufffd\ufffd?\ufffd\u007f\ufffdYH\u00023\ufffd\ufffd13[YF\ufffd\u0000$\u000b\ufffd&\ufffd\ufffd\ufffd_m\ufffd\u0001\ufffd`\ufffd&\ufffdG\ufffd\u001c'\u001b\ufffdC6\u05365\ufffdc\ufffdx\ufffd\ufffd1\u000e.\t\u0011\u001a\ufffd\u0015\r\ufffd!Q\ufffd%l\ufffd9\ufffd\ufffd\ufffd\ufffd/\ufffd/\u001b\ufffdK\ufffd\ufffd\ufffd\ufffd.\ufffd\u0671\ufffdA\u0019\ufffdB(\ufffd\u0019\ufffd\ufffd\ufffd\ufffdS\u0010 \ufffd*G\u059d!\u0017PR\ufffd\u0704aF\u001a}U\u0005\ufffdm\ufffd\ufffdc\u01b8\ufffdt\ufffd\ufffd\ufffdS\ufffdrQ\u0159\ufffdy\ufffd\u001d\u0013|\ufffd\u000b\ufffd\"K.U\u070d\u0582\u02d7\ufffdd`kXK\ufffd1\ufffdS;6\ufffd\ufffdB\ufffd\u000f\ufffdM\ufffd\ufffd\ufffd\u0000\u0004\u000f\ufffd\u0017_\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdI\ufffd\u0019z\ufffd\ufffd\ufffd\ufffdA\ufffd\ufffdv\ufffd\ufffd\u001eu&\ufffd\u012374~\ufffd\u001a\ufffd\u000fUEg\u0001\ufffd\ufffd\ufffdN\ufffdQ\uc558\ufffd\ufffd\ufffdn\ufffdS\ufffdn\ufffdl\ufffd\u00e0dvm6d\ufffd\u0002L\ufffd\u0014\ufffd\t\ufffd\ufffd7[\u0624\u0003 \ufffdY\ufffdo\ufffdx\ufffd\u0103\ufffd\ufffd\ufffd\ufffd\u000eP\ufffdtr\ufffd\ufffde\ufffd'n\ufffdZ\ufffd\ufffd\ufffd\ufffd>`\ufffd\u0012o\n\\\u001dU\u0005<\ufffd\ufffd\ufffd\u0005\ufffd\u0016\n\ufffd\ufffd\ufffd\ufffd0a\u001c\ufffd\ufffd\ufffd\ufffd\u001eo\ufffd\u0000\ufffd\u001b\ufffd\ufffd\ufffd\ufffd\ufffd\u000b\ufffdl\ufffd\u0001U\u0433{b$\u0019\ufffd\u001d\ufffd\ufffd\ufffd\ufffd\\\u001f\fS\ufffd~\u0007S$\ufffdY\b\ufffd\ufffd\u0019\ufffd.\ufffdRfa\ufffdf!\ufffd&\u000f\u007f\r\ufffdh\ufffd\ufffd(\ufffdqxoZ\u001e\u076bX\ufffd\u0001\ufffd\ufffd\ufffd\ufffd\ufffd+\u5c59\ufffd\ufffdNy~\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\t\ufffd\ufffd\ufffd}\ufffd\ufffdok\ufffd4\ufffd>\u0002I\ufffdSLP\ufffd\u0013\ufffd\ufffd:Ui\ufffdR\u001fC\u2cbe\ufffd\ufffdde\ufffd&\ufffdv\ufffdx\u0017\ufffdT\\9Z\ufffd<\ufffdD\ufffd\u0006\u0019\ufffd$\b\u0015\ufffd\ufffdw\ufffd\ufffd\ufffdyIhx\ufffd\u001e\ufffd\ufffd_\ufffd@Z\ufffdb\ufffd5\ufffd7\ufffd\ufffdL\ufffdq\ufffd\ufffd\ufffd&\u0004\ufffd\ufffd(;\ufffdk\ufffd\ufffd*\u0011\ufffdv{\ufffd\u024e\ufffd\ufffdyGig\ufffd\ufffd\u0005\ufffd\ufffd\ufffd\ufffd\u0005ok\u001c9\ufffd\ufffd\ufffd\ufffdP\ufffd\t\u012f\ufffdv\u0017\ufffd9\ufffdO\ufffd2\ufffd\ufffd\ufffd\u001b\ufffd\ufffd\\\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd#E\ufffd\ufffd\u001c\ufffd+d\ufffd\u0016 \ufffd<L\ufffdQ\ufffdl\ufffd\ufffd\u001fa\ufffd\ufffd\u0015\u000e\ufffd\ufffd\ufffd\ufffd\ufffdZ\ufffd\ufffd\ufffd3vEg$\u001a0r\ufffdo\u0012/6vBy\ufffd\ufffdt=`\r)\ufffd\ufffd\rq71\ufffdl\ufffd1*\ufffd\ufffdi\u0014^}\u001dym\ufffd\ufffdr\"\ufffd+h\u0007H@\r\ufffdp\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05f3\ufffdu\ufffdT9\ufffdR[>\ufffd\ufffdn\ufffdk\ufffd\ufffd\u0017z\u0004\ufffd\u13f8M?j\ufffd\ufffdK\ufffd\ufffd\ufffd\u0014:\ufffd\u007f\ufffd\ufffd\u001b\nZ\ufffdI\ufffdE\u07b1\ufffd\ufffd\ufffd\ufffd\ufffd\u001dU\ufffdjN\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdo\u0015\ufffdC5Y\ufffd\ufffd*\ufffd\ufffd\ufffdc\\\ufffd\u0018\ufffd\ufffd^\ufffdO\ufffd\ufffdl\u0240\u07e3\ufffd\ufffd+\ufffdg\ufffd\ufffd\ufffd\ufffd=Tn\u0018\ufffd\ufffd\ufffd2\ufffd\ufffdM\u0159\ufffd\b\ufffd'\neb\ufffd\ufffd\ufffd\u000b\ufffdZ;&\ufffd\ufffd!q\ufffd\ufffd\ufffdh\ufffd\u001f\ufffdLl\ufffd\ufffd\u001cL\ufffd#\u0007\ufffd9\ufffd\ufffd\n\ufffd\u0240\ufffd\ufffd\u001c5\ufffd\ufffd_S].K4J\ufffda\ufffd\u0016\ufffdq\ufffd:s\ufffdhw\ufffd{\re\ufffdF\ufffd \ufffdf\u001e^y\u00058\ufffd\ufffd\u01e0\ufffd\ufffd'\u0001KY\ufffd\ufffd\u0004V\ufffd\ufffd\ufffd\u035e\ufffdw\t\ufffdDT\ufffd\ufffd\ufffd\ufffd\ufffd H\ufffd}\ufffd8#\ufffdJ'*\ufffd\uccffO.\ufffd\ufffd-\ufffd\ufffd\"\u007fC\ufffd.u\ufffdN\ufffd\ufffd|*36\ufffd\ufffd\ufffda\ufffd\ufffd\ufffd\ufffd\ufffdz[\ufffd\ufffd-\ufffdkWM\r\ufffdi\ufffd\b\ufffd\ufffd\ufffd\ufffd$\u000e<O\ufffd\ufffd\ufffd|\ufffd\u0157\u0019-\u02d6\ufffd\ufffd\u001a\u0011e\ufffd\ufffd\ufffd\u0015\u001c!'\ufffd@\ufffd\u001d(\ufffd\ufffd\ufffd?A\ufffd\ufffd\ufffd\u0014\ufffd\ufffdy\ufffd\ufffdr=\ufffd\ufffd4\ufffdy\ufffd\ufffdU/\ufffd\ufffd.h\ufffd\ufffd\ufffd\ufffd,\ufffd}\ufffd\ufffd\ufffdjK\uec27\ufffdb\ufffd\ufffd[\ufffd\u0760T`O\ufffdN\ufffd\ufffd\ufffdm\u0007\ufffdyL\u0018\ufffd\ufffd\n\ufffd\ufffd;\ufffd!6\u0006'e\u0010D{\ufffdkUx>\\ou\u0014\ufffd\u0326\u0671!jSz7\ufffd&\ufffd8\ufffd\ufffd\ufffdH\u001f\ufffd\t\ufffdp+\u0005\ufffd}R\ufffd\ufffdH\ufffd7\u0012\ufffd\ufffdn\ufffd5f9\u03fc\u001d\ufffd\\\u3ca7\ufffdIZ\ufffd\u0010\ufffd\ufffd\ufffdUT\ufffd\u0013w\t9\ufffdU\ufffdF\ufffdr\ufffd\ufffd\"\ufffdgu\ufffd\ufffdo\ufffd-oYu\ufffdB\ufffd t\ufffdg\ufffd\u007f-\ufffd\ufffdve~\ufffd\ufffd\ufffd]\ufffd\ufffd^\ufffd\ufffdhKW\ufffd\ufffd1\u001b\ufffd9\ufffd\ufffd\ufffd*R\ufffd9\ufffd\ufffd\ufffd\u0199\ufffd-\u000bV\ufffd\u0011P\ufffdN)\ufffd\ufffd\u0013\\\ufffd\ufffd\u0019e\u0011?\ufffd\u0003\u0005n\ufffd\u001e\u0003iI4\ufffdP\u001c\ufffd|\ufffd%\ufffd\u000f\ufffdm\ufffd:\fov\ufffdHx\ufffdqV\ufffd\ufffd\ufffd\u00051\u052d\ufffd\t|?\\f\u001ex\u03d1\ufffdz\ufffd\ufffdu\ufffd\ufffd\ufffd\ufffd\ufffdR8q\ufffd\ufffd\u0011\u001a\u00b6\u0012\u001c\ufffd\ufffd\ufffdGf~\ufffd\u018f\u001eL\ufffd19Lm\ufffdk\u0014\ufffd\ufffd\ufffduD\ufffd\ufffd\u0007@\ufffd\ufffdc\ufffd\ufffd\ufffd\ufffdUDD\ufffd\ufffd\ufffd\u0004i\u0013\u000e~\u001e\n\ufffd\u0003\ufffd\ufffdY\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdq\ufffd]\u063c\ufffd\ufffd@J\ufffd\ufffd\u0001F\ufffd\u0693\ufffd\ufffd\ufffd\u001fz\ufffd\u0001\ufffd\ufffdF\ufffd\u0000\ufffd^\b2\u0011)\u007f}\ufffd\u01de.\ufffd\u0012\ufffd\ufffd\u0011\ufffdn0\t\ufffd\ufffd,87\u007f\"\ufffd\ufffd\ufffd\u0006D\ufffd@\u0000\f\ufffd\ufffd\ufffd\u0012|\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd(\ufffd\ufffd\u0005o\ufffdt\ufffd\ufffdXrFt\ufffdj\ufffdt\ufffd\ufffd\u0012SI\u007fL\ufffda\ufffd\u001f\ufffd\u001eU\ufffd\ufffd7]Y\ufffd\ufffd\ufffdh\u000e\ufffd\ufffd*$A\u0011oK_E&\u0006SlB;#\ufffd\ufffdSQ18\ufffd\ufffdCYS\ufffd\ufffdl\u0017_\ufffd\ufffd[z\ufffdg,\ufffd3dL\ufffd\ufffdYD\t \ufffd9\u0000G\ufffd\ufffd,@a?{\ufffd\ufffd\ufffd\ufffd\ufffd#\u0004\ufffd\u0016z\ufffdn\u001bl\r\ufffd\u00141\ufffd\ufffd\\s\u001bY\ufffd\u0019\ufffdm\b\u0002\ucdfd\\\u0003\ufffd\u0010\ufffd\u0004\ufffd\u0016\ufffd\ufffd]a\ufffd\ufffd*\u0019\b\ufffd\u0014+\ufffd9\ufffd\ufffdiY%I\ufffd\ufffdQ:]g\ufffdU&y\ufffd:?j>1\u001fl\ufffd=\u04f5\u0012\ufffdM\t'\ufffd\ufffd\u0019)\ufffd\u0003\ufffdSTxO\ufffdZ&\ufffdQ#\ufffd\ufffd\u00137\\\ufffd\ufffd\ufffd%\r\ufffd?\u000e\r\ufffd\u0013MA\u0001S+\u0019Z\u0018\ufffd\ufffd\ufffd\u0019k\u001f\ufffd\ufffd\ufffdWk$\u0016p\ufffdQY;Z\ufffd<\ufffd3$\ufffd \ufffd\ufffd|h'3]m\ufffd\ufffd\ufffd\u0005.\ufffd\ufffdqs\ufffd\ufffd\\\ufffd=\ufffd\u0117\ufffd \u0011{L\ufffdb\u0014-\u0000K\r\ufffdw\u0004AQ5\ufffd\ufffd2\ufffdzK\u0017dNH\ufffd\u053e3\ufffd\u0018\ufffd\ufffd5fKD\ufffdW\ufffd\ufffdd\ufffd\ufffdy\ufffd\ufffdCjF\ufffd5-r,\ufffdG-\ufffdoC\u0018C\ufffd\u0003\ufffdL\ufffd\u0298\ufffdy\u075f\u0010|)\ufffd0\ufffd\ufffd\u880f\ufffd\ufffd\ufffdW\ufffd\ufffd\u001d\ufffd\ufffd\ufffd^F\t\u0000\u0003dj\"ZZx\ufffdS\ufffd\u001f\u000eGZ=K\ufffd\ufffd?\ufffdiR\ufffd\u0019\ufffd\u001b\ufffd\u0012X\f\ufffd\ufffd\ufffd:\ufffd\ufffd:\u001f;\ufffdeT\u0003k\u0000\u0001~G*\ufffd\u0000\u0015\ufffdF\ufffd\ufffd\u0000*\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0000\u0000\u0003\u0001\ufffd\u0000\u0000\b\ufffdA\ufffd$lC\u007f\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000\u0018{h \u0003\ufffdhC0\ufffd\ufffdC\u0016\ufffd\ufffd\ufffd\u0016\ufffd\u000f\ufffdea\ufffd(V\ufffd^w\ufffd!\u0017I\ufffd\ufffd\u0718\ufffd\u001f|\ufffd\ufffd\ufffd\ufffdd\ufffd\ufffdQ/\ufffd\u0019Z>\u0001\ufffd\ufffd7x\ufffd\ufffdP\u71ad\ufffdn\ufffd\ufffd\u0007\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdq\ufffdw\u044e\ufffdS\u001d\u058a\ufffd\ufffd\ufffd5\ufffd\ufffd|\ufffd\ufffd[4\ufffd\ufffdTN\u0017\b\ufffd\ufffd.\ufffd{\ufffd\ufffd+8\ufffdK\u000f\ufffd\ufffd\ufffd\ufffd\ufffd\u001dR\ufffd1W8\ufffd\u000b?\ufffd\ufffd\n\ufffd\ufffd\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffd\u0007\ufffdB\ufffd\ufffd\u001b\u0637k\u0015-\ufffdc\u001d\ufffdQ\u001f\ufffd\\\ufffdjI=\ufffd\ufffdm\ufffd\u0638\ufffd\ufffd\ufffd\\\ufffd\ufffd\u001c\ufffdl\ufffd\ufffd\u0007|\b2`\ufffd. j\u007f\ufffd|\ufffd\ufffd\ufffd\u0653j*%\ufffd\u022a\ufffdP\u001dF\ufffd(}m\b\ufffd\ufffd\u001b\ufffd&>\ufffd \u049fo\u03ee(mes\ufffd\u0004\u001b4Def\ufffd\ufffd;\ufffd\u0016\ufffd\u0016\u0306s\ufffd\ufffd\ufffdu\\\u00155\ufffd\r1\"\ufffdFb\ufffd\ufffdp\ufffd\ufffd\ufffd\u0005\ufffd\ufffd[\ufffd/\ufffd\u0193i\ufffd \ufffd-\ufffd4\u0003E\ufffd\ufffdX\b\ufffdG~,\ufffdqX\ufffd\ufffd\ufffdT6-\ufffd/\u001e\ufffd\rN\ufffd\ufffd\b\u0013\ufffdk\ufffd\u0610w\ufffd\ufffd\ufffdm\ufffdX,\ufffdH\ufffd\ufffdY\ufffd\ufffd74\ufffd6\ufffd\ufffd\ufffd?<t\ufffdI\u1b65\ufffd!\ufffd\ufffd[{>\ufffd\u06a7\ufffd2x\u05b3\ufffd3\ufffds\ufffd\ufffdL\ufffdN\u001bd\ufffd~\ufffd\ufffd\ufffd\ufffdR\u0015b4\b\ufffd\u001c\ufffd\u0489Y\ufffd\ufffd\ufffd\ufffd\f\ufffdA\ufffdQ\u0013U\ufffd\ufffd\u4484\ufffdk\u0502\u001d\u0003'\ufffd\u03b4/\ufffd\ufffd\u001b=K\ufffdQ\u001c.)A\ufffd\u001e\r\ufffd{AQ\ufffd\ufffd\ufffd\ufffdg\ufffd\ufffd`\ufffd\n\ufffd[\"\ufffdxT\u000b\ufffd1$\ufffd\u0003A\u001d\tJ\ufffdix^T\ufffd\u0014\ufffd\u0653\ufffd\u0703\ufffd$\ufffd\ufffd\ufffdd\ufffd\ufffd\ufffds\ufffd\ufffd\ufffd1\u000b`\u007f!\u000fc\ufffd\ufffdN\ufffd,\ufffdB\ufffdF\ufffd\ufffduA[/x\ufffd'\u001a:>\u0013\ufffd\ufffd\ufffd\ufffd\u007f\u0017W\ufffd\ufffdL\ufffdd\ufffd\u0011\u0011/\ufffd\ufffd!\ufffd>\ufffd\ufffd\ufffdj\ufffd^\u0017C\ufffd\ufffdu\ufffd\ufffd\ufffd\ufffdw%\fC)\ufffd\ufffd3\ufffd\uf702b#vZ\u00f5p6\u000f`.y%\ufffd\ufffd#h\ufffd\u0004c\ufffd\ufffd\rOi\ufffd\ufffdZ\ufffdWD\ufffd\u04aa@\u001f;\ufffdA\ufffd\u0005\ufffd\u0011}\ufffd0\ufffdB\u001b\ufffd\u0015q\ufffd\nr-\ufffd0\u0003\u0576\ufffdm:\ufffd)t\ufffd.\ufffd\ufffd\ufffd\ufffd\ufffdj\u000b\ufffd~\ufffd\ufffd\ufffdf\ufffdE\ufffd?9\ufffd\ufffd\u0001\ufffdC\u0017\ufffd\ufffd\ufffd9q\ufffd\u001b\ufffd\u0017\ufffd\u0011\ufffd.[4@\ufffd\u0006\ufffd6u\u001b\ufffd\ufffdL\u0019\ufffdwD\ufffd\ufffd\ufffd?\ufffdj\ufffdW\ufffd|f\ufffds\ufffdg\ufffd\ufffdg\u03b7\u001d)\ufffd\u0012\ufffd\ufffd\ufffd\u0001\ufffd\u0016X\ufffdT\ufffd\ufffdJD\ufffd\ufffd\ufffd\ufffd\u0004\u0014m:\ufffd\ufffdk\ufffd\ufffd\ufffdGcF\ufffd0\ufffd\ufffd:\ufffdS(\ufffd\ufffd\ufffd\u072f1\ufffdU\u0019>\u07f60\ufffd\ufffd\u270e\ufffd\u0012\u0576\ufffd\u0001\ufffd\u000b\ufffd\ufffd1\ufffdJ\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0004gU\u0003\ufffdO+\ufffd\ufffdz\r\ufffd\ufffd,\ufffdw\ufffdx\ufffdU`\u0006\ufffd\ufffd\ufffdY\ufffd7\ufffd\ufffd\u0016\ufffd\ufffd\ufffdw\ufffd\u007f\ufffdK\ufffd\ufffd\ufffd\u0013\ufffd\u0019.$w 3E\ufffd\u0014\ufffd\u0013Bt1\ufffd\ufffd\u001c\u001c\ufffd\ufffd\"pE\ufffdg\ufffdPQ)\ufffdv,!y\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdI\ufffdD\ufffd\ufffdmw\ufffd\u03e6\u000f\ufffdA8y\u010ce\ufffd\ufffd\u0220\u0014y\ufffd\ufffd\ufffde\ufffdO\ufffd5\ufffdn\u0004\"\u0015Oj|\u001b\ufffdb\u0016\ufffd\ufffdm ,bj\r\ufffdY\ufffd]2\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd.<\u07e7\ufffd\ufffd\u01f6\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdg\u0003\ufffd\ufffd\ufffd\ufffd\u0016\ufffd\u0006\u0014\u001e\ufffdC\u0002\ufffd\u001a\ufffd\ufffdF\ufffd;4j0=f\u0015(\u001c\u0103p^\ufffd\ufffd;\u0000\ufffd\ufffd\u001f\ufffdh,\ufffdST\ufffd`\ufffd\u0012@h\u0014\ufffd\ufffd\ufffd\ufffdG\ufffd\ufffd\ufffd\ufffd\u0003oe\ufffd?\u001a\u05f8\ufffd\u0012\u0005\ufffd\ufffdFj\ufffd9\b\ufffd\ufffd\u0771\u0018K\ufffd\ufffd{\ufffd{\ufffd6\ufffd\ufffd{~\ufffd\ufffd\u007fh^\ufffdcs\ufffd\ufffd\u0002u\ufffd\ufffd\ufffd\ufffd\u0014\u02c4\ufffd\u001a\u0017\ufffd\ufffdqta\rD\ufffd\ufffdds.\ufffd\u0004\u001f\ufffd\u001c\ufffd\tPX\ufffd\ufffd\u000b\u0013\bi-Sx\ufffd\ufffd8\ufffd\ufffd2\ufffd\u0010@pU\u001f\ufffdL\t7\ufffdTa^\ufffd\r\ufffd\ufffd\u01cf\ufffd\ufffd\ufffd\u0006rw\ufffd\ufffd4K\ufffdl\ufffd'\ufffd\ufffd\ufffd1\ufffd\ufffd.\u0577qq-\ufffd\u0010{\ufffd\u001f\u000b=T\u0014\ufffd\ufffdj\ufffd\ufffd\ufffd\u0013x\u0004\u0005\u076c/\ufffdro&7\ufffd\ufffdqf\u02d6.o\ufffd\ufffd\ufffdw\ufffd\u0002\ufffd\ufffd\ufffdBK\u060cE;\ufffd~\ufffd\ufffdi{w\ufffduT\ufffd1\ufffd^7H\ufffd(\ufffde\ufffdT\ufffd\ufffd*\ufffd\u007f\ufffd4\u0013\ufffd\ufffd\u07ef\ufffd\ufffdC\ufffdY\ufffd\ufffdkm\u0406\ufffd!\ufffd#\ufffd\ufffdn\ufffdi\ufffd\u01fej\u000eQ\ufffd\ufffd\u0010-\ufffd\ufffd\n3\ufffdy\ufffd\ufffd\ufffd\ufffd\u000e\ufffd\ufffd}\ufffd\"E\ufffd@\ufffd\ufffd\u0010\ufffd\ufffde%\ufffd\ufffd-_j\u0019\ufffd\ufffd\ufffd4t\ufffd\u001d1]\ufffd\ufffd\txd\ufffd\u06d0x\ufffd=\ufffd]>~\ufffd\ufffd\ufffd\ufffd\ufffd?\ufffd\ufffd\ufffd/08|\uc3b9\ufffd\ufffd]'\ufffd\ufffd\f\ufffd^\ufffd\ufffd\u001a\ufffd\ufffd\\P\u0010,\ufffd5\ufffd\ufffd{`\ufffd\ufffd\ufffd\u06b4}q\ufffd\ufffd`\ufffd3b\u001d8\ufffd*\u0001\u0004\ufffdJY\ufffdh\u001dW7\ufffd\ufffdPi\ufffde\ufffdw\ufffdYb\u0018\u0006\ufffd\ufffd\n\n\u001b\ufffdw\ufffd\u0401xiS\ufffd@j\u0005\ufffd\ufffdl`|\ufffd\u0016\ufffd\ufffd<;\ufffd\ufffd\ufffdJ\ufffd\ufffd\ufffdd\ufffd\ufffdt\ufffdySg\u001f?\u0513\u0015\ufffdU\ufffdou\ufffdx\ufffd\"dE\ufffd7b\ufffd%\u0004f\ufffd%0\ufffd\ufffdw\ufffd\r\ufffd\ufffd\ufffd\ufffd2\ufffd\ufffd\ufffdP\u009d??v\ufffd\ufffd\ufffdW\f,\ufffdx3\ufffd-\ufffd-\ufffdw\ufffd\ufffdR#`ER<TK\ufffd\ufffd\ufffd9\ufffd\ufffd\"r\ufffd\ufffd\ufffd\u06cb\ufffd\ufffdj\ufffd\u001a\ufffd\u0019l\ufffd0<\u001a\u0004\ufffd\bhZ]5\ufffd\ufffdS\ufffd\u0018\b\ufffdfp\ufffd\r\ufffd23P\u001f\b%\u0018\ufffd8\ufffd\ufffd\ufffd\ufffd\ufffdD\\w\ufffd\ufffd\ufffd<\ufffdX$\ufffd\ufffd\ufffd\nf\ufffd\ufffd\ufffdhg\ufffdg?\ufffd\ufffd\ufffd\u001fD\u0016`Sp]\ufffd\f|gy\u0018;\u0315\u060d\ufffd\r\ufffd#\ufffdk)h\ufffd\ufffd\ufffdX\ufffdQ97ye{pU\ufffd\ufffd\ufffd?\ufffd\u0208\ufffd\u0013\tdv\u007f\ufffd\ufffd\ufffd\u001a\u000fF\ufffdm\ufffd\u0019\ufffdQ^\ufffdM\ufffd':\u029e\ufffdTh\u0390.`\\\u0000\ufffd)\ufffd7:\ufffd\ufffd\u0004\ufffdvg\ufffd\ufffd\ufffd\ufffd\u0019\ufffd\u0004\u0007I\u001a\u0013=&/U\ufffd\ufffd\ufffd\ufffdJ\ufffdN\ufffd2\u0000\u0002\ufffd\ufffd\ufffd\ufffdX\u000e\ufffd\ufffdM\u0000\ufffdte\ufffdQ\ufffd\ufffd\ufffd/\u0515\ufffd\ufffdy\u001bG\ufffdM\u054d:\"~Q\u078c\ufffd\u0018\ufffd\u02bdxZ\ufffdG*\ufffd,\ufffdW\ufffd[\u0013\ufffd\u001f\ufffd#\ufffd)\ufffd\ufffd\ufffd\ufffdZD\ufffdH\ufffd\u0012y\ufffd/:,S\u001d\ufffd\ufffd\ufffd\t\ufffd\ufffd\ufffd\ufffd\u001e7/\ufffd\u0010\ufffd2M\ufffdmQ42\fM}\ufffd\ufffdO\ufffd\ufffd\u04de\ufffd\ufffd\ufffd\u0005w\ufffd\ufffd\u0656&A\u01e4]\u001d\ufffd\u0014\u000eM\ufffdV\ufffd1L[\ufffdL\ufffdwzY\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdr\ufffdE @\ufffd\u0013\u0003\ufffd\\\u0017\u000f]\u0005T\ufffd\ufffd\ufffdD\u0011lGB\ufffd\ufffd\u007f\u001e\ufffd\ufffd\u04eax\ufffdl\ufffd\\\u0018Ll\ufffdX3\n\u07b5\ufffd\ufffdU\ufffd\ufffd\u054f%z\ufffd(\ufffd8+\ufffdBx\ufffd`zV \u0006!\ufffd\u000e\ufffd\u001b \ufffd\u000b\ufffd\ufffd\u00001\ufffd~+\ufffd\u0006\ufffd\ufffd!y\ufffdnZ\ufffd\ufffdz w\u001b\u001f\ufffd\ufffd9z\ufffdh\ufffd\ufffd\"R\ufffdZ\ufffdHLgK\u0636\ufffd,\ufffd\ufffdP{\ufffd\ufffdR\ufffd\ufffd\ufffda\ufffd?v\ufffdR\ufffdy\ufffdP\ufffd\u0015BG\ufffd\ufffd\ufffd\u000ew\u000e\ufffdu\ufffd\ufffd\u0012F\ufffdt\ufffd\u0478\u001e\ufffd\b&\u0014z\ufffd)\ufffd\b\ufffd\ufffd\ufffd\ufffd\ube15\ufffd\u0019Z\ufffd\u000b\ufffd\ufffd*\ufffd\u0552\ufffd\ufffd2R$\ufffd\u0003\ufffd\u007fZs?\ufffd\ufffd\ufffd>\ufffd\u0519\r\ufffdD\ufffd\ufffd\"\u001d\ufffd\ufffd\ufffd\u001d\ufffd\ufffdpkL@K\ufffd0@&\ufffd\ufffd\u822eX\u0004++e\ufffdN$\ufffd\u0004\ufffd\u0007\u007f\ufffdI\\\ufffd\ufffd\ufffdy\ufffd\ufffd)\ufffd\ufffdok'\ufffd\ufffd\ufffd\u0198m:\ufffd\rv\ufffdiA\ufffd\ufffdhc\ufffd\ufffd\u0006G\ufffdap2\ufffdUH\ufffd\ufffd@r\ufffd\u001e\ufffd\ufffd);\b\u02a9\ufffd:}\ufffd\u0000\ufffd\ufffd\ufffd\";N\ufffd\ufffda\u0003\ufffd\ufffd\u07af\ufffd\ufffdBw\ufffdobV\ufffd\ufffd!\ufffd\u0000\u0000\u0002\ufffdA\ufffdBx\ufffd\ufffd\u0000\u0000\u0003\u0000\u000e\ufffd*\u0755]\ufffd:\ufffd\ufffdM\ufffd\u0000.\ufffd \u007fX/\ufffd\u0016\u0446\ufffd\ufffd2cL,\ufffd*\u001c\ufffdB\u0397\ufffd\u0010\ufffd\ufffd-\ufffd\ufffd\ufffd]\ufffd\ufffd\ufffd\ufffdv\ufffd,\ufffd.\u000e\ufffd&\ufffd\"\r\ufffd\ufffd\ufffd#\ufffdTz]nm\ufffdz\ufffd\u000b\u0013\ufffdK\u0001\ufffd\u0011\ufffdF\u007f5J\u001e}\be~\f\ufffdX\ufffd\ufffd6\ufffd\"\ufffdy\u001a\ufffdP\u008a\ufffd\ufffd\ufffd\ufffd\ufffd^\ufffd\u001b\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdx\ufffdA\ufffd\ufffdJK\ufffd5*X\ufffd\ufffd\u0015\ufffd\u0015-\ufffd\ufffd\u000e\ufffd\u001d\ufffd\u0006\t6\ufffdf}\u000b\ufffd<\ufffd`S\ufffd7\ufffd\ufffd\ufffd\ufffd1\u0004R\ufffd\ufffd\ufffd\ufffdl\u07e2#\ufffd\u0006\ufffd\\\ufffd\u07a2\ufffd1\ufffd\ufffd\u0003~\ufffdKF\ufffd[\ufffd\ufffd\u000fi?%M\ufffd8b\ufffdq\ufffd[\ufffd\ufffd\ufffd\ufffd,<\ufffd2?nPe\ufffd\ufffd\ufffd\ufffd\u0682\ufffdIU\u07df\u000e\u00064\ufffd\u0001\u000b\u05f0\u0004\ufffd\ufffd\ufffdW6\ufffd\ufffdn\ufffd[\u0007B\u0005MO?\ufffd\ufffd\u0014\ufffdL\ufffd\ufffds\f)\ufffd\ufffd\u001f\ufffdQ\ufffd\ufffdb\ufffd\u0749\ufffd#\ufffdwo\ufffd\ufffdO\r\u001d\u0013XfG\ufffdT0#\u0013\u001d\ufffd\ufffd\u001bw\u059d\u000e\ufffd\u001e`\ufffd(\ufffd\ufffdg\u07db\ufffd\ufffd6(\ufffd\u0013CD9\ufffd\ufffd\rh\ufffd#\ufffd\u0016b#[\ufffd4'K\u038c\ufffd\u008ai\ufffd}\ufffdu\ufffd\u04b4\ufffd\ufffd\u001b\ufffd\fB\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd\\\ufffd<*\ufffdw@|\ufffdk\ufffd\u00151\ufffd:?IF8{qL\ufffd^\u0504`P5\ufffd\ufffd\ufffd\ufffdj\ufffd\ufffdH\ufffd\u0011\ufffd\ufffd\ufffd\u0005o\ufffd)\"&\ufffd\ufffd\ufffd\"D\ufffd\ufffd\u0000\u0001Z\u0004\ufffd\t\ufffd\ufffd\ufffd\ufffd\u0000X\fuj&eQ\ufffd\ufffdf\ufffd\ufffd\u0004/R\ufffd9\u0705\ufffd\u0318\ufffd;\ufffd\u0003$\ufffd\u001b8\ufffd\ufffd}\ufffd\ufffd>}A\u0014\ufffd\ufffd\ufffd\ufffd\u000b\u0766\ufffd\ufffdK\ufffd\ufffd\ufffd\ufffdor\ufffd`\ufffdc\ufffd\ufffdi\ufffd\ufffd(!\b]92W\ufffd\ufffd\u0416a\ufffd\ufffd@\ufffd\u3366/Y\ufffd\u0011\ufffd\n\u001c\u0018\"\ufffd\u0479\ufffd\u02c9\ufffd\u001f\ufffd\ufffd\ufffd\ufffd\ufffd '\ufffd\ufffd\u0010\f\ufffdIZ\ufffdi4<\u074bm\ufffd\ufffdCrS\ufffd\ufffd\u0670g\ueb71o\u001e\f\u0011\ufffdtC\u0004j\fj\ufffd\ufffdQ\ufffdQ\ufffd*\ufffd\ufffd\ufffd]\ufffd@\ufffd\u0003\ufffdZ\ufffdh$Q\ufffd\u001a\ufffd5\u00109\u0006\u745d\ufffd\ufffd\ufffd\ufffd\ufffdy~\ufffdS\ufffd\ufffd\ufffd\ufffdYr\ufffd?F\ufffd{-\ufffd\ufffd_\ufffd\ufffd\ufffdL/\ufffd+\u0016\u0007y\ufffd\ufffd\ufffdD\ufffd\n\ufffd\u0016\ufffd\ufffd\ufffdR\ufffdL\ufffd\ufffd\ufffd(]~M\ufffd\u0000\u0000!\ufffd\u0000\u0000\u0001\ufffd\u0001\ufffdatB\ufffd\u0000\u0000\u0003\u0000\u0002}\ufffd\ufffdy#oO\u0006T\ufffd\ufffdow\ufffd\u0005\ufffd\ufffdi\u0001^\ufffd\u0000\ufffdu\ufffd\u0002\ufffd\u06f6\ufffd\u001a\ufffd\ufffd\ufffd/\ufffdb!\ufffd\u0011\u0014\ufffd\ufffd\ufffd\u0004\ufffdH\ufffd\ufffd\ufffd\ufffd\ufffdS\u0006e\ufffd\ufffd\ufffd\ufffd#\ufffd0\ufffd\b\ufffdz\ufffdS\ufffd0\ufffdm\ufffd\ufffd)7c\ufffd\u6dc24\ufffd\ufffd5\ufffdO \b1_7\ufffd\ufffd+1\u0170\ufffdx\ufffd\ufffdd\ufffd\ufffd\u0221A\ufffd\ufffd\ufffd%\ufffd2\ufffd\ufffd\u0010\ufffd~\ufffdScT\ufffd)\ufffd\u001ah\ufffdz\ufffd\ufffd\ufffd\u0147\u001eS\ufffd\u001eB\ufffd\ufffdo\ufffdP\ufffd\ufffd\ufffd<j\ufffd\ufffd\u0007\ufffdG\ufffd9\u0015\ufffd\ufffdH\ufffdu\u0019\ufffd\ufffd!\u001c_\ufffda\ufffd\\\ufffd\u7653\u0521\ufffd\f\ufffd\ufffd3U\ufffd\u001f\ufffd:\ufffdj\ufffd\ufffd\ufffd\ufffdc\ufffd\u0005\ufffd!\ufffd\ufffdI\ufffd3k\ufffd\u0014Bo?_0\ufffd\ufffdyV\ufffd\ufffdU\ufffd\u001c^36\u0010\u001e\f\r\ufffd\ufffd\u0010\ufffdU\ufffd\ufffd\u0012q\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffduo\ufffd\u0786\ufffd\ufffd7\u001b`\ufffd\ufffd?\u0214\ufffd\ufffd}\u0019\u001a\ufffd\ufffdAp\ufffd\ufffdY\ufffd\ufffd\u001c\ufffd\ufffd+\ufffd\ufffdMv\"\u7731(\ufffd\u000f\ufffd2\ufffd\ufffdW\ufffd\ufffdk\ufffd\u001coz%WTZ\ufffd\ufffd\u07ee\u0016\ufffd'\ufffd\u0001\ufffd\u0000\u001cG\u001f\ufffd\ufffd\u0017Q\u0006v^f\ufffd\ufffd\ufffdF\u001a\u0010\u001a\ufffd\ufffd\f\ufffd\rH\ufffd\ufffdb\"=%U\ufffd\ufffdF\ufffd{@\ufffd\ufffd\u007fJl\ufffd{\u0003\bd|KM\ufffd^'r\ufffd\ufffd\ufffdz\ufffd\u001d\u0000E\u0004\ufffd\ufffd\ufffd\u001ev\ufffd\ufffdG\ufffd\u015d\u000elyGoWN`E=\ufffd\ufffd\u000f\ufffd\ufffd\ufffdF\ufffdD\u0018\ufffd\ufffdEB(\ufffd\ufffd\ufffd\ufffd\ufffdK\f\u0514|\ufffd=]\ufffd\u012c\ufffd\u0000\ufffd\ufffdy0bh\ufffdA,\ufffd\u0003\u0004\ufffd\u001c\ufffddE6\ufffd\u000bj\ufffd\ufffd\ufffd\ufffd\ufffdW\ufffd\ufffd\u001d\ufffd\ufffd\ufffd\ufffdB\ufffd\ufffdP\u0000\u0001w\u0000\u0000\u0002R\u0001\ufffdcjB\ufffd\u0000\u0000\u0003\u0000\u0013\ufffd\ufffd.\ufffd\ufffd\u0385\ufffdL#\ufffdE\u071a\u001cTWr\ufffd\ufffd\u0005=E\ufffd\ufffdI\ufffd69\ufffd\ufffdRd\ufffd\u0011%Q\ufffdt\ufffd\ufffd\ufffd\u0004v\u0010\u00018\\\ufffd;\u6da1!u\ufffdK\ufffd\u0000y\ufffd\u001c\u0017\ufffd\u001f\ufffd=\ufffd\u0012\ufffd\ufffd;q\ufffd \ufffd\ufffd\ufffd)\u000eg~\ufffd\ufffd\ufffd\ufffdA\ufffdx^\ufffd\u0000\u0002\ufffd\ufffd\ufffd\ufffdw\u001e#]\u0002\ufffd\u0004\ufffd\"w\ufffd\ufffd\ufffd!\ufffdfQ3(rh\u001eN!vc\ufffdk\ufffd\ufffd8\ufffd+*\ufffd|r\ufffdn\ufffd\u0003\\\u001d\ufffd|'\ufffd\ufffd\ufffd#\ufffd\u000f\ufffd\ud341\u001fXt\u0016M\ufffd^L\ufffdV\ufffd\u02a6\f\ufffd}\ufffd\ufffdu\u001d\u041b\ufffd\f\u0757\u000f\ufffdQ\ufffd!\ufffd\ufffd[\ufffd\ufffd\u001f\ufffd\u001a\ufffdrf\ufffd\u0012\ufffd\ufffdA\ufffde\u0291g\ufffd\ufffd\ufffdOZ\ufffd\ufffdd\u00176eJi\ufffd/\u0011\ufffd\u01b1\u0015]%\ufffdj\ufffd.\u000b\ufffd\ufffdG\ufffd0\u001a\ufffdx4\ufffd:\u02c9\ufffd\u001d\ufffd\ufffd\ufffd\u0015f\ufffds\ufffd1\ufffdN\u0016\ufffd\ufffd\ufffdU\ufffd\ufffd\ufffd\ufffd\ufffdP\ufffd\ufffdpm;\u001a\ufffd\ufffd\u0000\ufffd\u0012\ufffd3\ufffd\ufffd8q\u0010\u0269\u03f0T\ufffdnb\ufffd\ufffd\ufffd\ufffdx}\ufffd\ufffd\u07a5\ufffd>5k\ufffd\b\ufffd\u03ffb/\ufffd\u000f\u0005\ufffd\ufffd\ufffd\u007f<B\ufffd\ufffd\ufffdP\u0014\ufffd\u0772)y<\u001f\ufffd\u001e~\ufffd#U\ufffd\ufffd\u000e\\/\ufffd)\ufffd\ufffd8\ufffdt&\ufffd\ufffd\u007f\ufffd\u0003\ufffd\ufffd\u0011\ufffd \ufffd\ufffd\u0015\ufffd5\u000b\ufffd\ufffd#Y*\ufffd?\ufffd\u02b5<\ufffd\u01a0\ufffd\ufffd\u0012po\ufffd\u0014x\ufffdg\ufffd\ufffdi\ufffd\ufffd\ufffd\ufffd\u0001\ufffdXP\ufffdR\u0002\u0004\ufffdyN\ufffd\ufffdV\ufffd~hR\ufffd\b9J\u0005PH\ufffd\r\u001b~<k\ufffd\u0000\ufffd\ufffd\ufffd4&o?i\ufffdR\ufffd\ufffd*`\ufffd\ufffd\u0011\ufffd\ufffd\u0002Ug8\ufffd\ufffd[\ufffdG\n\ufffd\ufffd\ufffdWM\u0001\ufffd\ufffdi\ufffdoS\u0223Q\ufffd\ufffdD\ufffd\t\ufffd\ufffd`!\ufffd\ufffdF\ufffd\u0002\u001b\ufffd\ufffd\ufffd\u001ang\ufffd\u0006\u00e9\ufffdc\u0018\ufffd\u05cfbv\u0017t\u001f0\ufffd\u0006\u000b\ufffd\ufffd\ufffd/\ufffd\ufffd8P\f\\w-\ufffdsX\ufffd\ufffdt\ufffd\ufffd$\ufffdg\ufffd\ufffdO\u0000\ufffd\ufffd\ufffd+Q\ufffd\u0019\ufffd\ufffdg,\u0321Y\ufffd\n\u0014\ufffd\ufffd\ufffd(\u0000\u0004\ufffd\u0000\u0000\u0006\u0017A\ufffdfI\ufffdAh\ufffdL\u0014\ufffd\ufffd\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000I\ufffd{\ufffd\ufffd\ufffd\ufffd,\ufffd\u01bat\ufffd\u001e\ufffd\ufffd\ufffd!\ufffd\u0002)\ufffd\u0006m]\u037c\ufffddd\ufffd\ufffd;\u0016\ufffd\ufffdf5\ufffd\u0014+\ufffd\u001e\ufffd\u0016\ufffd\ufffd%\u0014\ufffd\t\ufffdg*\ufffd\ufffd\ufffdu\ufffd\ufffd\b\ufffd'V,\ufffd\ufffd\\lY\ufffdQ\ufffd\ufffdR}v\ufffd\u0014j\u0016\ufffd#\ufffd\ufffd\ufffd\u0017\ufffd\u0112\ufffd\u0002\ufffd\ufffd\\\ufffd\u000e\ufffd\u0012\b\ufffd\ufffd/\ufffd\ufffd7\ufffd\ufffd.Gx=G}\ufffdW\ufffdyl/\ufffd\ufffdO\ufffdu\ufffd\ufffd>n\ufffd\u045e\u0502j-\ufffd2\ufffd\u0007\ufffd\ufffd\u001b\\$D\ufffd\ufffd\ufffd\ufffd[\ufffd\ufffd`\ufffdMc\ufffd\ufffd\\\ufffd\ufffd\ufffd\ufffd|\u0012\ufffd\ufffdj\ufffd\ufffd(\u000b\u000es\ufffdM\ufffd\ufffdeP\ufffd\u001b#\ufffd\u000f\ufffd\u0183i\u001c\ufffd#\ufffd\u0019;\u0017\ufffd\ufffd<\b\u001eK\u0015\u0007\ufffd\u0016\ufffd\ufffd\ufffd\ufffd\u07e7@\ufffd \ufffd\ufffd7\u0001\u000f-:p\ufffd.\ufffdZP-\ufffd\ufffd\n\ufffd\u001e#\ufffd\ufffdJ\ufffd\ufffdA\u0190\ufffd;.\tu\ufffd\ufffd\ufffd`\ufffd\ufffd:\ufffd\u0012\ufffd\ufffd\u000e^\ufffdOPi\ufffd\ufffd\ufffd>)u\ufffd\ufffdj\ufffd\ufffd\ufffd\ufffd\t\ufffd\u0018\ufffdx\u001a\ufffd\b\b\ufffdY\ufffdPYQZ\ufffd:\ufffd\ufffdX9\ufffd\ufffdw\ufffdQI\ufffd\ufffd\ufffdt\ufffd\u001d=\ufffd\ufffd\ufffd\ufffd^3\ufffd-\ufffd\ufffd6\ufffd\ufffdf\ufffd5\ufffd]\ufffdE\ufffd\ufffd\ufffd@\u0018\ufffd\ufffd\u062ex1pa8\ufffd:x\ufffd\ufffd\ufffd\u000e\ufffd\u06eck\ufffdR\ufffdWkW\u0017\ufffd\u0011:\ufffd\ufffdU\ufffd\ufffd\u0016d\u0015\f\ufffd\ufffd\ufffd\ufffd\ufffdd\u0016-\ufffd\ufffd\u055bMz5\ufffd,\ufffd1t\ufffd\ufffdF\ufffd\ufffd\ufffdgi\ufffdp,\rY\u03b2 \u0005_K\ufffd\ufffd\u0001\ufffdf\u007f\ufffdw\u001d\t\ufffd\ufffd*\ufffd\u0430\ufffdO\ufffd\ufffdS$\u0019\ufffd\b_~\ufffd\ufffd2\ufffdW\ufffd\ufffd\ufffd_\u0019}\ufffdNP\ufffd-\u0018\u008c\rh\ufffd\ufffd\ufffdN-\u0439\ufffd\ufffd8_\ufffd\u000b,y{z\u0366\u001aU\ufffd\ufffdM\ufffd\u0570#%\ufffdr\";\u0019@\ufffd6\ufffd\ufffdT\u0007G2w\ufffd\t\ufffd\ufffd\ufffd\ufffd!\ufffd${\ufffd\u0769\ufffd1\r\ufffd\ufffd\ufffd\ufffd\ufffd$\ufffdJJ\ufffd\ufffdy\ufffdb\ufffdN\ufffd\ufffd>\ufffd\u001b)\ufffd\ufffd\ufffdN\ufffd^<\u0004\u001e\ufffd\ufffd\ufffd#\ufffd0\ufffd\u0003\u001d\ufffd/\u0000\ufffdU\ufffd\u001e\ufffd\ufffd\ufffdm\ufffd\ufffd\u0016\ufffdz\ufffd\ufffdGV8\ufffd\ufffdu\ufffd\ufffd\ufffd3\u000b\ufffd\ufffd_\u0007R\ufffd\u0290\ufffd\ufffdeO4J\ufffd\u0674?P\ufffd[\ufffd\ufffdkq\"=\ufffd\b\ufffd \ufffd\ufffdE\ufffdcTF\u000ev\u0004;\ufffd\ufffd\u000f\ufffd\ufffd\u0253\ufffdM\u0468O*\ufffd\ufffd\u0011\ufffd\u001f5\ufffd\ufffd\u001e\u06616\u02c5=\ufffdg\f\ufffd\u0003\ufffdbg\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\u000e/|\u007f\ufffd\"\ufffdE\ufffd\ufffd\ufffd\ufffd)>\ufffdyl\u0745\ufffd]\u001b\n)\ufffd\ufffd\ufffd\ufffd\ufffd1\u0003\ufffd\u0007\ufffd\ufffd%HR\ufffdc\ufffd\u0002k\ufffd\rdG:\ufffd\rG\ub1f1\ufffdOJ\u076e\ufffd\ufffd\ufffdL\u001e\ufffd\u0004\ufffd\ufffd\ufffdz\ufffdhIRe\u0013f:\ufffd\ufffdo \b\u00071\ufffdj[}U\ufffd\u000f(\ufffd\ufffdK\ufffdD\ufffd\ufffd\u068a|\u0017\u0016\ufffd\ufffd_\ufffdc\ufffd\ufffd\ufffd\ufffdF\ufffd2\ufffd_\u0013\ufffd\ufffd?\ufffd\u001b\ufffdoe2\ufffd\ufffd\u0019\u0136~\ufffd4\ufffd\ufffd3\u0012\ufffd\"\ufffdY\u0007\u001c,|\ufffd\ufffd\u07c7\u0199Pt\ufffd\ufffd\r\ufffd\ufffd\ufffdFO\ufffdg\u000f\ufffd\t\u0017\u0011\ufffd\ufffdU\ufffdN\ufffd\ufffdd\u0002\ufffd5\ufffd\u0000\ufffd\n\ufffd|pT\ufffd\ufffd6\\\u0018\ufffdx\u0016\ufffd\ufffd\u0016U\ufffd\ufffdz\ufffd\ufffd=\ufffd\ufffd\u0007\ufffd\ufffd\u0000\ufffd:f'\ufffdcp:\ufffd\u007f4\ufffdj\u000b\ufffdfG<\ufffd\ufffd\ufffdx\ufffdnE\ufffd\ufffdX\ufffd\tp\ufffdK=\ufffd\u000e\ufffd\ufffd_\u077e\b\ufffd\ufffd\ufffd;\ufffd\ufffd4\ufffd~\ufffd\ufffd\\\ufffdv\ufffd\ufffd\u001a\ufffd\u0011\ufffd\ufffd'\u0336:\u0017 \ufffd\ufffd\ufffdF\r\ufffdMi\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd\u0656&\ufffdF$\u000f\u0424\t\u0013\ufffd\n\ufffd`\ufffdO\ufffdk*%\t\ufffd\u038f\f\u0004\u001c\ufffd\ufffd\ufffd}\ufffd\u001e\ufffd\u0126u-\ufffd\r\ufffd+\ufffd\u033f\u0017c\ufffd\u0016\ufffd75\ufffd\ufffd\ufffd/8wx\u049bF\ufffd}j\ufffd8\ufffd\u001c`}\ufffd\ufffd\ufffd5\u0016|\ufffd\ufffd@\ufffd5Fu\ufffd\ufffd%X\ufffd_7D\ufffd\ufffd\ufffd\u007f\ufffd\u00024W\ufffdD\ufffd\ufffdI\ufffdJ\n\ufffd\u001f\ufffdH\f\u001b}\ufffd\u0223\ufffdP\ufffd\\:a\u0018u\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\f\ufffd\ufffdg\u02c9p\ufffdyf\ufffdxI\ufffd\u0018<\ufffd\ufffdRBF\u0002Y~\ufffd\t\u0004\ufffdm0\ufffd\u0005\ufffd\ufffdX\u02e5b \ufffd\ufffd6e\ufffdMy4\u05f8M `\ufffd\ufffd8a\ufffd\ufffd2\u000f\ufffd\ufffd,J\ufffdyS}\ufffd\ufffd\ufffd\ufffd\ufffd2\ufffd\ufffd\ufffd\u000f7\ufffd\ufffd\ufffd\ufffd\ufffd\f\ufffdM+\u000b\ufffdm\u00a6m.\ufffd\u001fL\u0011\ufffd`\ufffd\ufffdp\ufffd\ufffd\ufffd\ufffdk\ufffdhq\ufffd\u0015\ufffd\ufffd\ufffd\ufffd\ufffd*\ufffd\ufffde\\\ufffdl\u00107\ufffd\ufffd\"\ufffd\ufffd\u0006\u001f^\u001a\ufffd\u0007%$\ufffd\u0416\ufffd\ufffd\u0002\ufffd\u0003]\ufffd\t\ufffd\ufffd\ufffd*\ufffd\u0018\ufffdc\ufffd\ufffd\u0727b\u0019\ufffdx\ufffd]B@\ufffd\u0010E\u0017Y\ufffd;#;\ufffd\ufffd\ufffdf\u01b93}\ufffd\ufffd\ufffd\ufffd\ufffd|-\r\ufffd\ufffd\u001b\ufffd\ufffdL\ufffdj\ufffd\ufffd/\ufffd\u03e5<l\u0004L\ufffd\ufffd\ufffd~_\u02fd\ufffd\ufffdX\ufffd\ufffd\u001bM\ufffd\ufffd;azc-\ufffd\ufffd\ufffdZ\ufffd}\ufffd\ufffd\ufffd.\u0010\"\ufffd\ufffd,\ufffdC\ufffd\u0010\u0016\ufffd\u01bbz\ufffd\ufffd\ufffdHu\ufffd\"\ufffd\u0003\ufffdP\ufffd\ufffdn\ufffd\ufffd\ufffdk N\u001f\u0005FD\ufffd\u0000\ufffd\ufffd@\ufffd\ufffd \ufffd8_\ufffd\ufffd7\u000f\ufffdE\ufffd$&\u001a\ufffd\ufffd\u0003\ufffd;\u007f\ufffd\ufffd1\u001b\ufffd\ufffdr\u80f0\ufffdr\ufffd\ufffd\ufffd\ufffdfC)\ufffd\u0403\ufffd\ufffd\ufffdC\ufffd\ufffdf\ufffd\u001b\ufffd6\u0001\u001cX\ufffd\ufffd\u001ak\ufffd\ufffd7\ufffd|93\u0000f\ufffd-\ufffdz\u0019\ufffd\\\ufffd\u000bC\ufffd\ufffd~=\ufffd5\u000f\ufffd\ufffdUw\u0006\ufffd\u0016\ufffd\ufffd%1\ufffd\ufffdi\ufffd&> H\ufffd\ufffd\u0000\u0000\u0001\ufffd\u0001\ufffd\ufffdjB\ufffd\u0000\u0000\u0003\u0000;l\ufffd3\ufffd\ufffdK\u001d\ufffd\ufffdv\ufffd\ufffd]\ufffd\ufffdr\u0019\ufffd\ufffd\ufffd\ufffdu\u0019u\u0000\u0001\ufffd\ufffd)\u000f}N\ufffd6\ufffd\u0011\ufffd\ufffd\ufffd\u0019\u000b\u0152)\ufffd\ufffd\ufffdr\u06a1\u0002\ufffd=c\ufffd;\ufffd\ufffd6\rW\ufffd\ufffd\n\"3\u05657d\ufffd\ufffdl\ufffdUf\b\u0001Z![s_\ufffdV\ufffd\ufffd\ufffdZ\ufffd|\ufffd\r\ufffd=\ufffdc\f\ufffd\ufffd\u0018f\u0001\ufffd#\ufffdV\ufffd\ufffd,QDTH{\u0610\ufffd\ufffd\ufffdp\ufffd\ufffdp\u0007\u0007o%(\ufffdM\ufffdw+}\ufffd\ufffde\ufffd\ufffd\ufffd\\\u001f;\ufffd\ufffd\ufffd\ufffd\ufffd\u06b3\ufffd\ufffdN\u03e7g:\ufffd\ufffd\ufffd,\ufffdv\ufffd\ufffd\u0014&iCx\u05d5\ufffdfD\ufffd&\uf368\ufffd\ufffd/\ufffd\ufffd\u0006\u000e\ufffd\u007f\u0001\ufffdN\u0019uh\u0002\u030f0\ufffd\u0010\ufffd\ufffdv\u01f5\ufffd\ufffd\ufffd\u000f\ufffd\ufffd\u0001o\ufffd\ufffd\ufffd\f\ufffd'\ufffd<\u0012\ufffd\u0002\ufffd\ufffdX\ufffd\ufffd\u01ec\ufffd\ufffd4'\ufffd:z\ufffd\ufffd@\ufffd\u0002}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdz\u000f\u0011\ufffd\u015f,\ufffd\ufffdk\ufffd\u001d\ufffd_\ufffd\ufffd\u0015\u0000\u0000J\ufffdF\ufffd?\u0581\ufffd\ufffdGY\ufffd\r/\ufffdz\u0007\ufffdE\ufffd\ufffd\ufffd\u00051\u0013Z\ufffd2\n\u0017]h\ufffd\ufffdY>\ufffdNL\ufffd\u0000\ufffd\ufffd\ufffd\u001b\u0012\ufffdl\"\tqY{|\ufffdB\ufffd\ufffdly\u0002wZ`\u0733%m\ufffd}\ufffdr\u0001\ufffd\ufffdr\ufffdt\u0016\u0012dzm\b\u0013\ufffd\u0005(\\T\ufffd\u0012\ufffd\ufffdh<\ufffd\u000e\ufffd>\u0007^s_W\u000b\ufffd8l\u0010\u0623\ufffd\u5ab5s\ufffd\ufffd7\ufffd\ufffd\u06e3\ufffd\ufffde\ufffd}\ufffdA\u0001\ufffd\u0010g\ufffd\ufffdz\ufffd\ufffd+\ufffd\ufffdO\\\ufffdW\ufffd\ufffd\ufffd\ufffd\ufffdn\u0018{\ufffd\u4a78\ufffd\ufffd\ufffd\u001a%(\u0197r\ufffdP\ufffd\ufffd\ufffd\u001d.\ufffd#\nc\u007fl\u0015\ufffdAK>=\ufffdj\ufffd\u001a\ufffd>U>*\ufffd\u0538\ufffd\ufffd\u0000\u0000\u000b\ufffd\u0000\u0000\u0005\ufffdA\ufffd\ufffdI\ufffd\nRe0R\ufffd\u007f\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000Id\u068b\\\\\ufffd\u0012\u0004\u0000\u001ch\ufffd0\u0010\u0010 \ufffd\u0004&|6\ufffdS\ufffd\ufffd9\u001a\u0014}\ufffdBa\ufffd\ufffd\ufffd!@\ufffd\ufffd\ufffd5\ufffd$o\ufffd]A\u001a`\ufffdg`F\ufffdP\ufffd(\ufffd\u001e4\ufffdB:\u001a\u0002\f\ufffd3\u0004\ufffd_\ufffd\ufffd7HVK\u04e1N\u0005\"^\ufffdQ\ufffd\u0001\ufffdi\ufffdV\ud9cd\udf75\ufffd}XW;\ufffd\ufffd\ufffd\ufffd\ufffdb#\ufffd\ufffd\ufffdO\ufffd\ufffdH\b]*\ufffd_\ufffd\u05a6.\ufffd\ufffd\u001eN? %\ufffd\ft\ufffd\ufffd}$\ufffd|P4\ufffd\u0019h-\ufffd:?\ufffd\ufffd\ufffdU\ufffd\ufffdU\ufffd\ufffd\ufffd;\u0013\u06e5\ufffd\ufffdg\ufffd\ufffd\u000f\ufffdql@\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdK\ufffd\ufffd\u0000{\ufffd\u000b\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd_=\ufffdJx\ufffd\ufffd(\ufffd\ufffd\u0007q\ufffd\u0014_5\ufffdK\u4905!\\0\ufffd>\ufffd\ufffd1N\ufffdt\u0013\ufffd\ufffdi{\ufffdv2^mbw\u001bB\ufffd=\ufffd)\t\u0019\ufffd!~\ufffd6>\ufffd\uf61f`\ufffd\u02cd\ufffd\u0449\ufffdd\u000f\u000e\r\u0017\ufffdY\ufffd\ufffdT\ufffd,\ufffd\u0007\ufffd\ufffd[K\ufffdM\ufffd\ufffd\u001e\ufffd>\ufffds{a\u0012\u0005w\ufffd\n\ufffd\u001a\ufffd#\uc80aW\ufffd\ufffdE\ufffd,n\ufffd\nJ\u0006\u0003\ufffd\ufffdN,\rL\ufffd\ufffdj\u001c\u0005H\ufffdh-\ufffd~r\ufffd\ufffd\ufffd\ufffdB\ufffd3f\ufffd\ufffd\u0002n,\ufffd\ufffd\ufffd\u0010Z\ufffd\ufffd\ufffd$Ji\u0018\ufffd\ufffd\ufffdG\ufffd\ufffd#}r&qpJ\ufffd{X\ufffd5D\ufffd\ufffd\ufffd\ufffdE\ufffde\ufffd\u0007\ufffdT\ufffdO\ufffd\ufffdF\ufffd\r\ufffd\ufffdZw\ufffd\ufffd\u000f[\ufffd\ufffdj\ufffd\u001a\ufffdJ\ufffd\ufffd\ufffd70/\ufffd\ufffd\u001fH\ufffd5\ufffd@ \u0005\ufffdtu\u0012s[-\ufffd\ufffd\u0005\u0002\ufffd\ufffd\ufffd}\ufffd\u026d\b\u0011\u06ef\ufffd\ufffd\ufffd\ufffd\ufffdp\ufffd\u000f]M6\ufffd\u063f\n\ufffd\ufffd\ufffd\ufffd?9dN\ufffd#\u001d\ufffd\u0007!n\ufffdV\ufffd!\ufffdU\ufffd]4\ufffd\ufffd\u001dSMF\u001c\u0698\ufffdW7X\ufffd\ufffd\u0005\ufffd\u0004\ufffde3\ufffd\ufffd\ufffd?\ufffd\ufffdD\ufffde\u00cbEx\ufffdx\u0017\nC\u0406X\ufffd\ufffd\ufffd\ufffdC\u000b9\ufffd\ufffd2\ufffdb\u0011\ufffd\ufffdEj1\ufffdP+\ufffd\u0004\ufffd\u0000\ufffd\ufffd\ufffd\u0005\ufffd\u000b\ufffd\ufffdhV\"\ufffdl\u02a2\u0014\ufffd1NWq\ufffdk~\ufffd>\ufffdX/\ufffd\ufffd.\ufffd,p\ufffd\ufffd\u00b7\ufffd\u0005\ufffd\ufffd\ufffd\ufffd4\ufffd&\ufffdOE\ued14\u0695\ufffdn\ufffd\ufffd\ufffd\ufffd\ufffd\u001b\ufffd\ufffd'1e,fN7\u639d\u001d\ufffd\u656c,\ufffd\u05aeo\u001d0\ufffd\u001f\ufffdi\ufffd{U\ufffd\u0700\ufffd\ufffd\nze\ufffd\ufffd\u001cd/\u0014\ufffd\ufffd\u000ev\ufffd\ufffd\ufffdP\ufffd\ufffdc\ufffdj\u001bf\ufffd(/@\ufffdg\u000eh\ufffd-\ufffdV\ufffd\u0013\ufffd@\ufffd\u0012\"5s\ufffd\ufffd\ufffd'5\ufffd\ufffd\ufffd\u001d\ufffd\ufffd2t45\ufffd\ufffd\u0004.\ufffd7\u001a\ufffd&i\u00bbe\ufffd\ufffd/qP\ufffd&\ufffd\r8\ufffd4\ufffd]\ufffd\ufffd\u0002\ufffd\ufffdV\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdA\u0018\ufffd\t\ufffd\ufffdl\n_\ufffd\ufffd\f\ufffdm\u0014\ufffd\ufffd^$u$`H`<el(ly\ufffd\ufffd\ufffd6\u02c4\u0476\ufffd)\ufffd\u0535\u001a\u0002\ufffd\ufffd\ufffd\ufffd\ufffd>\ufffd\ufffdv\ufffd\ufffd\ufffd\\@\ufffd\ufffd\ufffd,\ufffd2\ufffd\ufffd$His\u0007};\u0012\b\ufffdy\ufffdX\u0015|\ufffd|p\ufffd\u65af\u0012\u000fc\ufffd?\ufffd?%V.Qe\ufffdG\ufffd\ufffd5Q\ufffd)\ufffd\ufffd\ufffd\ufffd'\ufffdaIHo\u00eb\ufffd\ufffd@\ufffd\u06a07\ufffdD\ufffdX\u0002a\u0007r\ufffd\ufffd\u00115\ufffdJ'Qq\ufffdY\ufffd\ufffd\ufffdLI\ufffd_\u04f8\ufffd\u0011\ufffd\ufffd\ufffd\u001a\u001a\ufffd\ufffdg!\ufffd\ufffdK\ufffd:\ufffdP\ufffd\ufffdhV\ufffd|\ufffd_ge6U\u0011\u001aJ\ufffd\ufffd\ufffde\ufffd]z\ufffdZ\ufffd\rb\ufffd,\u07e8xB\ufffd\ufffd\n\ufffd\ufffdx\ufffd%y\u000f\ufffd\u07aa$Z\ufffd\ufffd\ufffd\ufffdN\ufffd\u0018p8\ufffd\ufffd\ufffdj\ufffdS\u001fMj\ufffd0\ufffd.\ufffdE0\ufffd+\ufffd]\ufffd\ufffd\u0013\ufffd]\ufffd\u56f3fR\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u05cb\ufffd@r\ufffd\ufffdly\ufffd\u0012\u0007J\ufffd\ufffdw\ufffd\ufffd\ufffd\u001de\u001f\ufffdA\ufffd\ufffd\"\ufffd\ufffdl\ufffd\u0014_\ufffd\u0018\ufffd\u0004\ufffd\u0013C\ufffd\u00186\ufffd\u0468W\ufffdyx\ufffdRj]-C\ufffd\u0017\ufffd ZH\u0010\ufffdx\ufffd\u001b\u0010\ufffd!I\u0018P\ufffd\u07df\ufffdx\u0015\ufffd3\u0017#\ufffd7a\ufffdZj\u000fpe\ufffd\u05af\u000f\ufffd\ufffdho\ufffd\ufffd\ufffd>\ufffdW\ufffd\ufffd\\*\ufffdD=@\ufffd\ufffdQ(i`Dam\ufffdV\ufffd\bo\ufffd\ufffd\u000e\ufffdH\f\r\ufffdP\u0012r7\ufffd\ufffdx,\ufffd\ufffd\ufffd\ufffd\u0010h:1\ufffd3d\\\ufffd\ufffd\ufffdi_\u0017>\ufffd\u001a\ufffd\\Uj\ufffdmt\ufffd\ufffd\ufffd\u0007\ufffd1\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd{\ufffdg\ufffdwm\u0018[\ufffd\u0000\ufffd\ufffdw\u0003'A\u007f?v\ufffd\u029bP\u0710\u0011^\u0011\ufffd\ufffd\ufffd@UN\ufffd(\ufffd&\r\ufffd\ufffd/\ufffd\ufffd\ufffdj\ufffdBu\ufffd\ufffd\t\ufffd\ufffd\ufffd\ufffdeE\u000b\ufffd\ufffd&F\ufffd\u007f\ufffdd\ufffd{\ufffd\ufffd<R$aD-\u0000|\ufffd,F\ufffdh\u01d0@Q\ufffd\u0014\ufffd\ufffdS\ufffd\u0003\ufffd^\ufffd<\ufffd+C\u001d&\u001b\ufffd\u001a\ufffd\u001co2\ufffd\u0003\u014e\b\ufffd \ufffd\u0014\ufffd\u0017\ufffd\ufffdB\ufffdzwOP<\ufffd\u0016\u00bd\ufffd\ufffd\b\ufffdG\ufffd\ufffd\ufffd\n;\ufffd8\u0016\ufffd\ufffd\u0018 '\u0411vto\ufffd\ufffd\u0019Q\ufffd\ufffd\ufffd\ufffd\u0010/\u001aK\u001f\ufffd\ufffd[4w+\ufffdQ>,\ufffd\ufffd{\ufffd\ufffd\u0002<f\t\u0171K\u0018\ufffd\ufffd\ufffdA\ufffd8Q\u02c3\ufffd\u0011\u001b\ufffd\"\u0011g\ufffd\ufffd_\u0007\ufffd\u00024\ufffd\ufffd,\ufffd\ufffd\ufffd\u0000\u0000\u001cq\u0000\u0000\u0001\ufffd\u0001\ufffd\ufffdjB\ufffd\u0000\u0000\u0003\u0000;Fv\u000e\ufffd\ufffd\ufffd\u0685 \ufffdY\ufffd\ufffd\ufffd\u0004\ufffd(\u0001R\ufffdK\ufffdd\ufffd4\u0017\ufffdA1\ufffdPA\ufffd\u02d2\ufffdR\ufffd6\ufffd\ufffd\ufffd\ufffd\ufffd.)['?2x{\ufffdGG\ufffd\ufffdjuIU\u0000\ufffd\u001b\tP\u06f8\ufffd\u001b\ufffd\ufffd38`\u0014\ufffd\ufffd\u000bT\ufffd5\ufffd:\u0018\u0019I\ufffd\ufffd\ufffdn\u0019\ufffd&\u001a\ufffd\ufffd\ufffdE 5Z\ufffdj\ufffd;\ufffdA\ufffd\ufffd\ufffd\ufffd\u0012jR\ufffdbPg\ufffd\ufffd7v\ufffd\ufffd\ufffd\ufffd=\ufffd\u001e\ufffd\ufffd\f\ufffdf]\u018b\u0014\ufffd\u007f\ufffd\ufffd\u0007*Ou\ufffd\u0018\u05dd\ufffda\ufffd\ufffd=8\u0016\ufffd\ufffd9\ufffd\ufffd[\ufffd\ufffd\ufffd\u0125\ufffd\n\ufffd\ufffd\u0002\ufffd\ufffdw\u000e,C\ufffd\u02e8{\ufffdK\ufffd>\ufffd\ufffd\u0004\ufffd1M?\ufffd\u0012\ufffd\ufffd\ufffd\ufffd\ufffd\u0013\ufffd;\ufffd\ufffd\u001d\ufffd\ufffd\ufffd?\ufffd=\ufffd^\ufffdU\ufffd\ufffd\u001e\ufffd\ufffdF\u051b\ufffd\u0003\ufffd\ufffdT\u0005\ufffd}\ufffd\ufffdw7\ufffd\u0001\ufffd\ufffdE\u000f]\u000f\ufffd\u001bC\ufffd\u0017\r\ufffd\ufffd\ufffdG\ufffd3\ufffd\u0018k\ufffdF\u001a\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd[\u0016X\ufffdg\ufffd{;*\ufffd0f\ufffd\u001f^\ufffd*\ufffdr\ufffd\ufffd\ufffd\ufffd\u000bT\u000fL\ufffd\ufffd+\ufffd\u0016\ufffd\u001c\ufffd\ufffd\ufffdx\u0015\u064a\ufffd(\ufffd\ufffd\ufffdFb\ufffd\ufffdfpD\ufffd\ufffd\ufffduJ\ufffd\u0017\ufffdfW\ufffd\u0010O\ufffd\ufffd\ufffd(\ufffd\ufffdSzp\ufffd\ufffd\ufffdU\ufffd\u0013\u0007\ufffd\u0005\ufffd\ufffd\ufffd\ufffd\u05eb$b\u001f~\ufffdu\ufffd\u0012\ufffd\ufffd\u05e8>\ufffd{\ufffd\ufffd\u015f\u0242\u001b\ufffd#\ufffd\ufffd\t\ufffd\ufffd\u0000\u000e\ufffd\ufffdaI\ufffd|\u0580\ufffd\ufffd\ufffd<S1\u0005\ufffd\ufffd\ufffd\u001d:[,\ufffdm\ufffdLU\ufffd\ufffd\ufffd\ufffdx\u0010\u0002\u001e\ufffdl\ufffd'\u0002\ufffd\ufffdn.\ufffd</\ufffd$\u0007\ufffd|_w\ufffd^\ufffd\u0000\u0000\r\ufffd\u0000\u0000\u0006\u0004A\ufffd\ufffdI\ufffd\u000e\ufffd\ufffd\ufffdD\ufffd?\ufffd\ufffd\u0010\u0000\u0000\u0003\u0001\u0014\ufffd\ufffdqh\ufffdu\u0011\ufffdm\ufffd\ufffd\u0002\ufffd\ufffd\u0010!\ufffdc\ufffdl\ufffd\ufffd@9\ufffd\ufffd\ufffd1\ufffd:R\u0000#\ufffd:!$\ufffdU\ufffd\ufffd\ufffd\ufffd\r_tW\ufffd\\`\u0000\ufffdM\ufffd\ufffd\ufffd!\f\u000f\ufffd\ufffd\ufffd\u0010R|\ufffd\ufffd\ufffdv\ufffd\ufffd\ufffd\ufffd\ufffdu+i\ufffd\f\ufffd\ufffdg\ufffd\"\ufffd\"X\u0006\ufffd\ufffdC\ufffd\ufffdS1\"\ufffd\ufffd\u0019\ufffd\u001f\ufffd\b\ufffd|\ufffdv\ufffd\ufffd1\ufffd\u0014\ufffd\ufffd#e\ufffd\ufffd6E\ufffd\u0200\u001a\ufffdE\ufffd\ufffd#\u07ce\ufffdh \ufffd3\ufffd\ufffd\u0012\ufffd\u0201^}\ufffd\u0011#t!\ufffd\u0011\ufffd\u0011\ufffd\ufffdV\ufffdd\ufffd\u000b3\ufffd\ufffd\ufffdG\ufffdc\ufffd!\ufffd\ufffd\ufffd,?\ufffd\ufffd2\ufffdb\ufffdF\ufffd\ufffdR\ufffd\u0015\ufffdC\u02ce\ufffd\ufffd\ufffd{XKi\ufffd,\ufffdL \ufffd\ufffdX\ufffd\ufffd4,\ufffdy&O\ufffd:\ufffd]\ufffd\ufffd\u0012L\ufffdH\ufffd\ufffd\ufffdH\ufffdt;g;w\u0010\b\ufffd\ufffd\ufffdS\u04e9`\u0002\u0585\u0019\ufffdE\ufffd\u001cg6\u0007b7\ufffd\ufffd\u0000\u0012\ufffd\ufffd\"\ufffdd\ufffdD\ufffdrC_\ufffdr\ufffd\ufffd(\ufffd\u0236\ufffd\ufffd/\ufffd\u001a\ufffd \u0013J\ufffdC>\\/\u001dj\ufffdP\ufffdq'S>\ufffd\ufffdSv\u0015\ufffd\u001f\ufffd\b\u0001\ufffd4\ufffd@\ufffdsM\u01fc=\u00bb\ufffdy2\ufffd\ufffda*\ufffd^\ufffd:\ufffd\u0019)\u000b\u0003&p?\ufffdn\ufffd\u0005\ufffd\ufffd4\u0762W\ufffd\ufffd\ufffd\ufffd\ufffd^r\ufffd\ufffd\ufffd\ufffd.:\ufffd\ufffd\ufffd\ufffd\ufffd&?\ufffd6B\u0015\ufffd\"\ufffdV<\u0007Jy\ufffdM\ufffd1\ufffd\u0007\u007f;\tv2s2J\ufffd,\ufffdy%{\ufffd>>\u0002\ufffdj\u007f\ufffd\ufffd\ufffd\ufffd\ufffdM\u000e\ufffd\ufffd\ufffdX\ufffdz\ufffdx\u0006\ufffd\ufffd\ufffd\ufffd\ufffd\u0005\ufffd\ufffd\ufffd\u0018\u0007\ufffd\ufffdA\ufffd\"\ufffd\u0018\ufffdaYN\ufffds\u000e\ufffd\ufffdj\ufffd\ufffd\u0017\ufffd\ufffd)\ufffd\ufffd\ufffdEV\ufffd-\ufffd+\ufffd\ufffd9\ufffd{b\ufffd[!%N\ufffd\ufffd\ufffd\ufffdR}\ufffd\u0004\u0010<\ufffd\ufffd\ufffd\t\ufffd||g`\u000e\ufffd\u001ds}\ufffdcbe\ufffd4\u000b\ufffd-\ufffd\ufffd-\ufffd\u000e\u0000\u001a^\ufffd\ufffd1\u001aq\u001a\ufffd\ufffdM\ufffd\ufffd\ufffd\u0000T\u05f2\ufffd\u007f\ufffd\u0005\ufffd\ufffd\ufffd:\ufffd\f|>V\u0012\b\ufffdn\ufffd\ufffd\ufffd\u00aaVB\ufffd\ufffd\u0018\ufffd;\u0006\ufffd\uec3b94y(\u0723\ufffd)o\ufffdV\ufffd\u001dx\ufffd\u0010\ufffd\u0116\ufffd\ufffd\ufffd\ufffd\ufffd+\ufffd\ufffd]{y\ufffd\ufffd\ufffd\ufffd,c\ufffd\ufffd4\ufffd\ufffd\b\ufffd4-\ufffd6\ufffd\ufffdm\\k\ufffd\ufffd}\ufffd\ufffd}\ufffd<\ufffd\ufffdl\ufffdp#\u0010\ufffd\u0016\ufffd\u0019\ufffd\u0005@,\ufffd\ufffd\ufffd\ufffd\ufffdK\ufffd\u0017\ufffd+\ufffdhWX\ufffd\u0011\ufffd+\ufffd\ufffd9\u01f5\ufffd<\ufffdAeV%@\u0000\ufffd}\u00013\ufffd\f\ufffd\u0018\ufffdB8\ufffd1_\ufffdg \ufffd\ufffd9\u001e\ufffdf\ufffd\ufffd\u0017\u04bc\u0011\ufffd.\u00041dw[C\r\ufffd\u018e\ufffd\ufffd\u0002<\ufffd\ufffd\ufffd4\ufffdZ\u0004\"\ufffd\ufffd6%|xj\u0019\ufffdi\ufffd_\ufffd\ufffd\ufffd\ufffd\u0015\ufffd\u0014\ufffdC(\f+\ubaa2Y\u06e6I\ufffdB\ufffd\ufffd\ufffd\u06797\ufffdVs\ufffd\ufffd\u001dv\ufffd\u02bc\ufffd\u0017\ufffd\u0004\ufffd\ufffd\ufffd:\ufffd\ufffdh\ufffd\\\u0013\ufffd\u001cOy\u001cc\ufffd\b\u0005\r\u0017t\u0003l\ufffd\ufffdgU\u000bG\ufffd\t\ufffd\ufffd\ufffd\u0005\u0019_\ufffd\u0001U\ufffd?5N\ufffd\ufffd\ufffdW\ufffdATdV\ufffdS\ufffdoy\ufffd\ufffd\f\ufffdaU\u007f\fu,\fq\ufffd\u5559\ufffdU\b\u0006\ufffd\u0011\u0015\ufffd&\ufffd\ufffdo\u00007\u000f\u0016\ufffdV,\ufffd\ufffd!\ufffd\ufffd\ufffd\ufffd\t\ufffd\u001aX\ufffd_\u0006\ufffd\ufffdU\ufffd\ufffd\ufffd\ufffd$g,6j3b\ufffd\u007f\ufffd\ufffd\ufffd$F\ufffd\u000e\u017c\ufffd\ufffde1\u0000\ufffd^u\n\ufffd]Cv\ufffdt*\u0014\u001a\u0016\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u000b x\ufffd\u0013,\ufffd\"\u0018\ufffd&\u030cM\ufffd\ufffd J\u0004wr\ufffd$\u001e:\ufffd@Y\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdu\ufffd\u0011N\u036b.\u0007\ufffd\ued1e\ufffdSD\ufffd\ufffd\ufffd\ufffd\u0017\ufffd\ufffd\u000eN\ufffd\ufffd.d\ufffd\ufffd\ufffdg\ufffd\ufffd,\r\ufffdS\ufffd\u0015\ufffd\u06dc\ufffd}-\ufffd\u03f6<\ufffd\ufffde\u0010\ufffd\u0012a]\ufffd>\u06b2\ufffd`\ufffd\ufffd\ufffd4\ufffd\f\n&\u0014\u001c\ufffd\ufffd\u000eA6\ufffd\ufffdd\u001c\ufffddOy\ufffd\u0006)\nz\u0015sV.\ufffd\u04c9\ufffdz4\ufffd\ufffdhV\ufffd\u001b\ufffdp\ufffd(-\u0015\ufffd5.\ufffd#\ufffd4\ufffd\ufffdVNRC\u000f\ufffd\ufffd\u0006V\u0012Jn:\ufffd\u0016\ufffd\ufffd\ufffdN\r\ufffd\u0197\u0489\ufffd[x==V0\ufffd\ufffdb6\ufffd\ufffd\ufffd\ufffd\u000363\ufffd\ufffd\uf9b9\ufffd=5\ufffdJ6\ufffds\u0019\u001a\ufffdt\ufffd\ufffd\ufffd\ufffd\u0012H\ufffdL8v\ufffd\ufffdH=\ufffd\ufffd1\ufffd\u07c6c\ufffd\u0018v\ufffd7\ufffd\u000f\ufffd\ufffdl\ufffd\ufffdx\u000b\u0007\ufffdN<\b`\ufffd/j\u0529]+\ufffd\ufffd\ng\ufffd\u001dx$:\ufffd\u0012jtD\ufffdkk\ufffdipU\ufffdZ\ufffdM~v?\ufffd4\ufffdE\ufffd\u3f50\u001d\ufffd\ufffd\ufffd\ufffd\u0017\u001e0\ufffdB\ufffd\ufffd\\\ufffd\ufffdG\u001ep\u0018\"}\u007f\u0007U6Q\u0002\ufffd\ufffdl\ufffd\ufffdN\ufffd\u0011\ufffdA\ufffd\ufffd\ufffd4\u001e\ufffd\u0000+80\ufffdzR=\ufffd\ufffd\ufffd\ufffd\u0019\ufffd\ufffd\ufffd4\ufffd\ufffd\u0011\u02029\ufffd@{n\ufffd\ufffd$\ufffd\u01cf\ufffd3\ufffd\ufffd\u0016\ufffdhv\ufffdL\ufffda3\ufffd\ufffd\ufffd\ufffd\r}\ufffd$\ufffd\ufffdf\ufffdk\ufffd1UYw\ufffd\u058f4\u001d\ufffd\ufffd\ufffd\ufffd\ufffd#%\u0617\ufffdGI\u0018[\ufffd5\ufffd\ufffdh\ufffd\ufffdC,\u037b\u05c8\ufffd\ufffd\ufffdeR\ufffd\ufffd'.\ufffd|\u0001\ufffd7+\ufffd\u05a38\u0011A\ufffd5\ufffdu \ufffd\ufffd2\u00126zB\ufffd\ufffd9\u0019\ufffd\ufffd$\ufffd3\ufffdk\ufffd!@\uaadc\u0015V\u0000\ufffd\ufffd{5\ufffd=G\u000e\ufffd\ufffd\u001e\ufffdN\ufffd\u000f\ufffd\b\u001fA\ufffd\ufffd\u01f1\u0005\ufffd\ufffd\ufffds\ufffd\ufffd\ufffd\u2d41\ufffdJ\u0012\ufffd\ufffd\ufffd9N\ufffd\u0017\ufffd\ufffd\ufffd9Y\u0000\u0000!\ufffd\u0000\u0000\u0001\u007f\u0001\ufffd\ufffdjB\ufffd\u0000\u0000\u0003\u00009\ufffd\t\ufffd\u0015\ufffd_\ufffd(\t\ufffd\n\ufffd\ufffdf\ufffd\ufffd\ufffdY\ufffdF\ufffd\ufffd\ufffd\u0016A\ufffd2\ufffd\ufffd\ufffd\\\ufffd>j\ufffd\ufffd\ufffd\n\ufffd\u0013\ufffd%K?\u0005\u0015\ufffd\t\u0017f\t\u000e\u001f`\ufffdR\ufffd\ufffd\ufffd\ufffdrNA\ufffd\ufffd\ufffd\u0395\u001e7\u050a/\u0004,\ufffd*\ufffd\u001a\ufffd\u0000J\ufffd\r\ufffd\ufffd\ufffd'h\u007f\ufffd\u0003\ufffd\ufffd%\ufffd\n\ufffdLmN\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdw\ufffdP\ufffd\ufffd*w\ufffd\ufffdX\ufffd6\ufffd\ufffd\u00cf\ufffd[(_Z\ufffd\ufffdgi$~\ufffdq\ufffdEne\ufffd\ufffd]m\ufffd;y\ufffd \ufffd\u046b\ufffd\ufffd.y\r\ufffd\ufffd\u0001J;D0@\u0010>,\ufffd\ufffd\ub2ae\ufffd\ufffd\u0018\u0006\ufffd\ufffdh4\ufffdCa\ufffdc\ufffd:H\ufffd\u02b84\u0000$+\u0006\ufffd\u001b.Q\ufffd\ufffd\ufffd\u0016*\u0005\ufffdW$\ufffd\ufffd[\ufffd\u0007q\ufffd;\ufffd]\u075f\u001a\ufffdEa\ufffd\ufffde\ufffd\ufffd\ufffdr\ufffd\ufffd\ufffdz\u001d\u0000^[\ufffd\\c\ufffd\u0018\ufffdJ\u0018\ufffd;\ufffd\ufffdl\ufffd\u0007j\ufffd\ufffdm\ufffdwR\ufffdAN\ufffd*\ufffd\ufffd\u0002H\u0018n\ufffd\ufffd\ufffd&\u0017O\ufffd0vX\ufffd&\ufffd\ufffdO\ufffd\ufffd\ufffd^\ufffd\ufffd\ufffd\ufffd\ufffdP\ufffd\u2457w\ufffd|Q\n$\ufffd\u000e\u01af\ufffd\ufffd\u067da9\ufffd\ufffd\ufffd}\ufffd\u0016*\u0010\ufffd}w\ufffd\ufffd\ufffd\u025f*U}\ufffdmxH\ufffd\ufffdW^'\ufffd\ufffd\ufffd%\u0012u\ufffd\ufffd\ufffdF\ufffd\u0010m\ufffd\u0000\u001f\ufffd\u0000\u0000\u0007\ufffdA\ufffd\ufffdI\ufffd\u000f&S\u0002\u0015\ufffd\ufffd8@\u0000\u0000\u00045\ufffd.u\ufffd!\ufffd*\ufffd`\u0007\u0018\ufffd\ufffdB\ufffdZ,\ufffdB\u001f\ufffdj\u0018x8e\ufffd\u007f\ufffd\u0000\ufffd\u0016k\u0010\ufffd\ufffdy\ufffd\ufffdI\u0015\ufffdrtll0\u0000\ufffd)\ufffdZ\ufffdI\ufffd\ufffd*z\ufffd\u0002\u0013%\ufffd\"\ufffdirE\ufffd<\ufffdg\ufffd\u000b\u0489\ufffdK\ufffd\ufffd\ufffdu\ufffd\u0016\ufffd\ufffd\ufffd\ufffds\ufffdv\ufffd\u0191s\ufffd\ufffd\u007fO\ufffdFcl2\u0015\u000f\ufffdAr\ufffd\u0007+\ufffd`\ufffd\ufffd]\ufffd\ufffd\ufffd\ufffd\ufffdK\ufffd\ufffd=0\ufffd9<\ufffd\f\ufffd\ufffda\ufffd\t\u001bd#\u001a\u059b{\ufffd\ufffd\u0019\ufffd!\ufffd\ufffdG/|[\u0002\ufffd\ufffd$jO\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdi\ufffd\ufffd\u05bb+\ufffd^\u0178d\ufffd8\ufffd\u0311\ufffdg5\ufffd\ufffd$5l\ufffds\ufffd\u01e1\ufffd\ufffd\u0016\ufffd\ufffd\ufffdV\ufffd \u001a_f\ufffd\ufffd\u000e\u0554\u0007O\ufffdX\ufffdy\ufffd\u0002\ufffd\u0344%?\ufffd~u~\ufffd\ufffd\ufffd\u4b8f\u0017G\ufffd\ufffdM\ufffd\ufffd\u04f1\u0007\ufffdh!\ufffdK\ufffd\u010fmZ)\ufffd\u0002\ufffd\ufffd\u0001\ufffd\u0007\u001d\ufffd\ufffdgD>Q\ufffdU\ufffd@]\ufffdAg\ufffdj\ufffd\"\ufffd}E\ufffdW4X\ufffdO\ufffd5\ufffd-\ufffd+\"\ufffd!dI\ufffdBZ\ufffd<\ufffd\u001c\ufffd\ufffdR\ufffd\ufffd\ufffd\ufffd@i#\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0709\ufffd*{\ufffd\ufffd\u043f.\u0017\ufffdq0\ufffd\ufffdi\ufffd\ufffd\ufffd\ufffd\ufffdH\ufffd\ufffd\u0000\ufffdNw\ufffd\ufffd\t\ufffd\u001ao\u0013\\\r@\ufffd\ufffd@\ufffd\u0000\ufffd{W5\ufffde)$A\ufffdC\ufffdVL\ufffd\ufffd\ufffdr]\ufffd\u0011\ufffd\ufffdL\ufffd\ufffd\ufffd\ufffd\u001f\ufffd\u0016\ufffd;\ufffd\ufffd\u06b5\ufffd\ufffd:\ufffd$]\u0006\ufffd(G_\ufffdF\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdg(\ufffdO\u00056\u00067s\ufffd\u001asb\u001a\ufffdq\ufffdpcb\ufffd\ufffdX\u04aa\ufffd!j\u0005\ufffd#E\ufffd+P\ufffd\ufffd\u000e\ufffd\ufffd\ufffdIl\ufffd\ufffd)\u001b,<\ufffda\ufffdNO\ufffd\ufffd\ufffdT@\t\ufffd\u0016\ufffdb\ufffd\nE\ufffd\ufffd\u0154\ufffdC\ufffdK\ufffdGx\ufffd?m\ufffd}\ufffdI\ufffd\u0019\ufffdF\ufffd6\ufffd\u001b\ufffdM\ufffd+\ufffd\ufffd\ufffdh7@\u0081\ufffd\n3\ufffdz0\ufffd\ufffd\ufffd\ufffd\ufffd\u001b\r\ufffd\ufffdBg\ufffd\ufffd\ufffd\ufffdx5^I\ufffdf\ufffd\ufffd\uea98\ufffdH?\ufffd\u000f\ufffd~`\u0016F\u0005\u0015H\f\ufffd\ufffd\n\ufffd\u0001\ufffd\u0000V\ufffd\ufffd\ufffd\ufffd{^\ufffd\u0013\u001aR\ufffd\u000e\ufffdG\ufffdT\ufffd\u0003\ufffd\ufffd\u9c5b\ufffd\ufffd\u0011\ufffd\u001f\ufffdT\ufffd\ufffd\u0014]V\ufffd\ufffd\ufffdc-\u001cB\ufffdB\u0015A\ufffd\u001f|\ufffd\ufffd\ufffd\ufffd(t2'\ufffd\u040amSM2\ufffd!\ufffd:\u0012B\ufffd\ufffdQ\ufffdf\ufffd\ufffd'\u0001\u0001\ufffdfNe\ufffd\ufffd/\\\ufffd|\ufffdy\ufffdL>\ufffd\ufffd\ufffd\ufffd&\ufffd\ufffd\ufffd,\u0001\ufffd'mSh\ufffd\ufffd\f\ufffd,1<\ufffdFu]0W\u000b\ufffd\u0018\ufffd\u0017Ve\ufffd$mvd\u0015\ufffd9\u03ae&\ufffd\ufffd\ufffd\u0000\u0002\ufffd\ufffd\u0133~E\u0005\ufffd$4iK\ufffd\ufffdM\u0016\u060bgA\ufffd/\ufffd/\u000b\r\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\ufffda\u023b\ufffd\u07bd\u000e\ufffd\ufffd\ufffd\u001fF\u0000\ufffd\ufffdW\u0005\ufffdx\ufffd@\ufffd)\ufffd\ufffdv\ufffd\u0303E\ufffd\ufffd\ufffdhi\"w\ufffd\ufffdX\ufffd\ufffd\ufffd\ufffdX\ufffd\ufffdi\ufffdN\ufffd\ufffd\ufffd#P\ufffdQ\ufffdbD\ufffd9\ufffd\u000f\ufffd\ufffd\ufffdQ4\u0017U\ufffd\ufffd\ufffd\u0007\ufffd\u001a\ufffd\ufffd\ufffd\u0006^1rH6\ufffdB\u0014\ufffd\u0621\ufffd\t\b\u0003\u07ca[\u01bc\ufffd\ufffd\r\ufffd(\ufffd\ufffd\tS\ufffd\ufffde\ufffd\"\ufffdp\ufffd_r\ufffd,(~\ufffd\u0016B\u009f0R\ufffd\u0018I\ufffd\ufffd\ufffd\u0010\ufffd(6\ufffd=\ufffdi\u0013\ufffd\u00168\ufffdn*)\ufffd\ufffd\ufffd\ufffd~&\u0019\ufffd\ufffd\ufffd\u0001\ufffd\u06e7\u0007\ufffdK\ufffd\ufffd\u0016.F\u474f3\ufffd\ufffd\u0015\ufffd2V7`\u000e\ufffd\ufffd\ufffd5W\ufffd\ufffd\ufffd\ufffd\ufffd\u02a71\ufffd*\ufffd\ufffd\n\ufffd\ufffd\u0010\u001a-\u0301\ufffd\ufffd=\u001f=\ufffd\ufffd\ufffd\ufffd\ufffd8~O\ufffd\u03911\ufffd\ufffd\u000b\ufffd\u0011\ufffd\ufffd\u001al\ufffd\u001cL\ufffd\ufffd\u007fe\ufffd\u0003E8\u063a\u0004\ufffdU\ufffdN/l\u0013\ufffdy\ufffd:\ufffd\ufffdf\ufffd\ufffd:\ufffd\ufffd\u76d1\u001e?\u0012$g\ufffd_\ufffd\ufffd\ufffd\u001d\u06a1w\ufffd\u0013\ufffd\ufffd\u03be0%V\ufffd\ufffd\ufffdB\u0219s!\u44b8\ufffd1\ufffd\ufffd\ufffd\ufffd7S\ufffd{i\ufffdh\\j\ufffdJ\ufffd\u0216\ufffd\u0015\u000e0\ufffd/\ufffd~\ufffd\u0004\ufffd(P\ufffd|\\G\ufffd\u0000\u0006\ufffd,\ufffd!\ufffd\ufffd T\b\ufffd\ufffdp\ufffd\u0005G\ufffdM\r\ufffd\ufffd@\ufffd\ufffd:\ufffd8A\ufffd\ufffd\u001b\ufffd\ufffd\ufffd6D\u001dg\ufffd\u0504sGc\u0016\u7de0\ufffd\u0015\u07f2\ufffd\u001er\u0157!\ufffd\u0005\ufffd'\ufffda3>\f\u0005\ufffd\ufffdn\u0325\f\ufffd\u0443\ufffd\u0321\ufffd\ufffd\u0019\ufffdo\ufffd\\\ufffd\ufffd+\t\ufffd\ufffd\ufffd'<\u001c\ufffd*\ufffd\ufffdg\ufffdF\ufffd;\ufffd7\ufffd\ufffd\ufffdpA!\u0015\ufffd\ufffd\ufffd\u001e\ufffd\ufffd\ufffd\f\ufffd\ufffd\u15fd\ufffd{D\ufffd\ufffd/#6Lh\r\ufffd\r\ufffd\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\ufffd)]\ufffd\ufffd\ufffd\u001dE\ufffd\ufffd\r\u001a\ufffd\ufffd\ufffd\u001e~\ufffdv\ufffdX\ufffd\u0019\ufffd2t\ufffd\ufffd-&OR\ufffd0\ufffd+\ufffd4\u03c5\ufffdm&\u007f\ufffdi!1\ufffd\u0000~}\ufffd\ufffd\ufffd*\ufffd)\ufffdEb\ufffd\ufffdO\u0012\u0014]_b\ufffdB\ufffd\ufffd1\u0019\ufffd\ufffdS\ufffd\ufffd\ufffdf\ufffd|+Y\ufffd\u0014I\u0003n\ufffdZ]\ufffd\ufffd\u0015/\ufffd8\ufffd\ufffdl\u0005L;\u0004\ufffd/;;\u05446\ufffd\ufffd\ufffd83W\u0012\ufffd[\ufffd\ufffd\u0099}\ufffd,|\u04eb\ufffdoc\ufffd\ufffd \u0000Y|\ufffd\ufffd\ufffd\u0000L\ufffd/\ufffdL<\u0014\n\ufffd\\m\u01d01|/\ufffd\u000f\ufffd-\ufffd*\ufffd9>\u00a2*\u0462\u069a\ufffd\ufffd\ufffd\ufffd\ufffdZ\ufffdW\ufffdR\ufffd\ufffd\u0017\ufffdX\ufffdw\"\ufffd\ufffd\u001f\ufffd\r\ufffd\u000e\ufffd$\ufffd\ufffd<\ufffd2\u001b\ufffd\ufffd\ufffd\ufffdT\u001a\ufffd\ufffd#\u0403\ufffd\ufffd\ufffd\ufffd\ufffd]\u0000\ufffdWe*\ufffdj\ufffdcC\ufffdE\ufffd\ufffd3|\ufffd\u001eX\u0016$\ufffd5P\ufffd.\ufffd\u0019J\ufffdw\ufffd'q\ufffd\ufffd*\ufffd\ufffd\u04c2\u0010\ufffd\ufffd\ufffd\ufffd\ufffdW\ufffdzW?\ufffdJ\ufffd\ufffd\ufffde\ufffd\u001e\ufffd2/0,v\u0000L\ufffd\ufffdn\ufffd5\u0011_NS\n\ufffdV\u0015Fs\u0006\u0168G$\ufffd\u001b\ufffd\u0186\ufffd\"\ufffd\ufffdF\ufffde\ufffd\u0019Nh\ufffd\ufffd +\b\ufffdl\ufffd\u000b\u0000+-\ufffdW\"\u0010\ufffdo\ufffd\u007f%6\ufffdU\ufffd[\u001cy\ufffdO\u409awF\ufffd\ufffd\ufffd\u06bc\ufffd\ufffd\ufffd\ufffd+\ufffd{\ufffd\ufffdH{O\ufffdw\ufffd'\ufffd.q\r-\ufffdG*\n\ufffd\u02a20Rn\u057d\u0012UrB\ufffdtw\ufffd7z\ufffd\ufffd\ufffd\u0016\ufffd\ufffd\u000e\u0001\u031f+\ufffdiX\ufffd\ufffd\ufffd\ufffd\ufffdWs\u0017\ufffd)m\u0013P\ufffdA\ufffd\u076c\ufffd\ufffdub\ufffd\ufffd>?\t\u0015\ufffd\ufffdI\ufffd\u0011\ufffd\u0155\ufffd\ufffd\ufffd\u0681\ufffdb\ufffd\ufffd$\u001f@\ufffd+\ufffd\u007f\ufffd\ufffd\ufffd\rkd\ufffd\ufffd\u0013-\ufffd\u001d\"%\ufffdS\ufffd\ufffd\ufffd\ufffd\ufffd_\ufffd\n\ufffd\ufffd\ufffd\\\ufffdw\ufffd\u04e1.B\ufffdl\ufffd\ufffd(\ufffd\u00120W\ufffd\ufffd?\u000e\ufffd\ufffd\ufffd/h\ufffdG1\ufffdt\u0015\ufffd3\ufffd,\ufffd\u0019\ufffd~\u0549\ufffd*\\\ufffdA\u001du\ufffd\ufffd\u0005u\ufffd[\ufffd\ufffd\ufffdD\ufffd<\ufffdE\ufffd\u0018d^\ufffd\ufffdS\ufffd\ufffd\ufffd\ufffd\ufffd3\u0013\ufffd\ufffd\ufffd\ufffdR\ufffdif\ufffd5\u0015OmN\u01da\ufffd\u0474\ufffd\u001e\"!\ufffd8@\ufffd\ufffd\u001aZ\ufffd%\ufffd\ufffd\ufffd\ufffdE\u0010\ufffd\u0005\ufffdm\u0011\ufffd\ufffdL\u0002\ufffd\ufffd\ufffd\f\u0013\ufffd\ufffd\u001e2\ufffd+xGD\ufffd7\ufffdF\ufffd9\u06df\ufffd\f$;c\ufffd\ufffd\ufffd2\ufffdH\ufffdz\ufffd\u0014\ufffd\ufffdgW4\ufffdl\ufffdP\ufffd\ufffdg\ufffd\ufffd:\ufffd\u02eaV\ufffd\u000eN0<5\ufffd\ufffd\u04a1YS\ufffd=ss@qt3BFk\u0003\ufffd\u0780\ufffd\u0014\ufffd\ufffd\ufffd?h\ufffd\ufffd\ufffd\r\ufffd\u0000\u0000\u0002\ufffdA\ufffd\ufffdE\u0011<+\ufffd\u0000\u0000\u0003\u0000;V\u0684\ufffd\ufffd\u0012\ufffd&B\u000f\ufffd\ufffd\u00023\ufffd\ufffd\ufffd\u0012\">\ufffd\u0006T\u0016j\u0305\ufffd^\ufffdQ J\u0174\u007f\ufffdK0\ufffd\ufffd\ufffd+Y\ufffd\ufffd\ufffd1\u00179\ufffd\ufffd\ufffd\r\ufffd\t\ufffd\u0002|\f\ufffd7n\ufffdP\u0000?\ufffde\ufffd]k\ufffdF\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd*\u0017\ufffd\u0002\ufffd\u0017?\ufffd\u0013\ufffd\u001c\ufffdI\ufffd\u0017\u0015V~b\bqv\u0015.Z\ufffd\ufffd\ufffd\u0000.\ufffdz\ufffd\u0199\u000e\ufffdU\u001c\ufffd\ufffd\u0007\ufffdp\ufffd\ufffd\u0706\ufffd\ufffd\ufffd\ufffd\ufffdSd\ufffd'\ufffd|7&0\ufffd\ufffd\ufffd|V\ufffd\u05d6\ufffd\ufffddol#\ufffd\ufffd\u06ff\ufffd\ufffd\ufffd;\ufffd\ufffd\u001f\ufffd\ufffdWU_\ufffd0\u07b4\ufffd\u0017\ufffd\ufffd\ufffd#\u001d\u0012\ufffd\ufffd\u0018'z\ufffd1U\ufffd\ufffd\n\ufffd-l\ufffd\u0013\ufffd\ufffd\\N\u0018\ufffdA%\ufffd\u0019+\ufffdu\ufffd\ufffd\u0006\u0012A\ufffd\ufffd?_\u0007S\ufffd\u0328xs<\ufffdP\ufffd\ufffd\ufffd\ufffd\ufffd\u000e\ufffde\ufffd:]K\ufffd\u000f\u001d0\ufffd/?\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd/1\ufffd3gs.\ufffd\u0010\ufffd\ufffd\ufffd\ufffd\ufffd\b8\ufffd\u0000\ufffdG<{A\ufffd\ufffd@\ufffd\ufffd/]\u0003 \ufffd\ufffdh\ufffd\ufffd\u0015\u0003\ufffd\ufffd\ufffdi<DG\n\ufffdP:>\ufffdF\ufffd\ufffdW\ufffd\ufffd\ufffdT\u0017\ufffd\u000f\ufffdA\ufffd[\ufffd\u0004g\ufffd4\ufffdg\ufffd\ufffdO\u0007\ufffdB%\ufffd\ufffd\ufffd\ufffdjXF.?\ufffdOn\ufffd\u001b\ufffd\ufffd%\ufffd\ufffd\ufffd\ufffd\ufffd\u007f\ufffd\ufffd\ufffdW\ufffd7F5\ufffd\ufffd\ufffdP\fq\ufffd\u0159\u0019\ufffdg\ufffd\ufffd\ufffdCWS\ufffdo\ufffdi<G2\ufffd\u00126>F\ufffdv{\u001a\ufffd\ufffd\ufffd\ufffdc\ufffd^y\ufffdr\ufffdK\u0017:A\ufffdx\ufffd\u0002\u07d2\ufffd\u0005v.B\ufffds\ufffd\ufffdM\ufffd\ufffd\ufffdA\ufffdk\ufffd(Q\ufffdqmz\ufffdt\u0002R\u0232\ufffd\ufffd\u0711[hk2\n*\ufffdH\ufffd6\ufffd\ufffd9C\ufffd:S\ufffdrpJ\u000bsk\ufffd\u0016\ufffdAr,{\u0001u\ufffdn\ufffd\rJ\u000b}N\u001b\ufffd\ufffdzQ\u0002wu\ufffde\ufffd\ufffd\ufffd\ufffd\ufffdh\u0011L\ufffd\ufffd\ufffd\ufffdYA\u0729\ufffd\ufffd\u00aan\ufffd9\ufffd\u0019F\u001d\ufffd\ufffd\ufffd\u0018t\u031e\ufffdkWD\f\ufffd\ufffdB\ufffd\ufffd3;\u001b\ufffd\ufffd\u0386_\\\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd&\ufffd\ufffd,T\ufffd\u0005\ufffd\ufffd4\ufffdFf\ufffd\ufffdY\u0016\ufffd7g\ufffd\ufffd$b\ufffd}%TVF\ufffd\ufffd\u05ce\ufffd\ufffda\ufffd]\tc\ufffdl\ufffd,\ufffd\ufffdi\u0017B\ufffd\ufffd\ufffdP)\ufffdE\u0006\r\ufffdA\u0003\u068b\u0001\u077cp\u0000\u0000\u001f\ufffd\u0000\u0000\u0002\u000b\u0001\ufffd\fjB\ufffd\u0000\u0000\u0003\u00008\ufffd.\ufffdn\ufffd\ufffdF\ufffdNb\ufffd\ufffd>\ufffd\ufffd\ufffdP\ufffd\u000e\uc2b7\u0000J\ufffd>X\ufffd\ufffd\u000e\ufffddmU\ufffdYY\"\ufffd\ufffddj\ufffd?a\u0000\u0013z\ufffd\ufffd\ufffd\ufffd\ufffdNI\ufffd\u0014#\ufffd@\ufffd\ufffdO\ufffd\ufffd\ufffdD\u0018\ufffd\f:n\u0000\ufffd\ufffd6\ufffd\ufffd\u001b\ufffdc\u000e'\ufffd\ufffd\ufffda_.m\ufffd\u0018\ufffd\ufffd\ft\u0011\ufffd\ufffd\ufffd1\ufffd\ufffd\ua968@\t\ufffd\ufffd\ufffd}\ufffd\u0003\ufffd\b,\ufffdy\ufffd\r2sF\ufffd\ufffd~\ufffd\ufffd\ufffd\u00067\ufffdhv\ufffd\ufffd\\\u0000\u0017\ufffd\ufffd/\u000eA\ufffd\ufffdc\ufffd\ufffd\ufffdl8\ufffdc\ufffd\ufffd.\u0005\u0568qP{\ufffd\u9741\ufffdo\u0003\ufffd#\ufffd\ufffd\u0019'\ufffdy+Y\u000b\u0003%\ufffdF\ufffdI \u00e8X\ufffd\ufffd\f\ufffd>\ufffdd\ufffd\ufffd\ufffd\ufffd\ufffd7-E\ufffd\ufffd`\ufffd\ufffd\ufffd\u0528\ufffd\ufffd\ufffd\ufffd\u0002h\ufffd\ufffd\ufffd\ufffd\u007f\u0633\ufffd\ufffd\ufffdW\ufffd\ufffdz\u001c\ufffd\ufffd\ufffdBHLQ\ufffdX\ufffdA\ufffd\ufffd\ufffd\u0569\ufffd<\u0006\"f,\ufffd{\ufffd\ufffd\u0007Xr\\H\ufffd\ufffd\ufffd6\ufffd\u013e\u00037H\ufffd\ufffd^\ufffd?'\ufffd\ufffd%\u0010eg\ufffd\ufffd'~\u0299j\ufffdF\ufffd&\ufffd|H\u001cm\ufffd\ufffddS>\b\n\ufffdO\ufffd\ufffd\u000f\ufffd\ufffd\ufffd\ufffdp<\u060ai0\u007f\ufffd\tD\ufffd\ufffd\ufffd\ufffd5\u001bH\u001bH\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0012-\ufffdN0\ufffd\ufffd\u0016\ufffd&=\r\u0001Gm\ufffd<Y\ufffdsp\n\ufffd*\ufffd\ufffd#\ufffd\ufffd;D\ufffd\u0004\ufffd\ufffdj\ufffdhX\u0005oX\bvU\b\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\ufffd\ufffd\u0005r\u000f\ufffd\u01ea\ufffd\u0015\ufffd\ufffd~\ufffd\ufffd\ufffd3\u044at\u0018g\u0452L>\ufffd\ufffdf\u000ed\ufffd56\u000ep\ufffd\ufffd\ufffd\u0564\ufffd\u0012\ufffd\u0017\u0331\ufffdP)\u007f\ufffdS\u0019\ufffd?y;\ufffd\ufffd7~\ufffd\ufffd6\u0004\ufffd\ufffd#\u0005yK\ufffd\u0007Q;\u0018\ufffd6\ufffd\ufffd\ufffd(\ufffdH\ufffd\ufffdo\ufffd\u0003T\ufffd\ufffdL*\ufffdcY^\ufffd\ufffd\u00cc\ufffd\u0000\u0000B\ufffd\u0000\u0000\f\u0013A\ufffd\u0011I\ufffdAh\ufffdL\bw\ufffd\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000%?#\ufffd\u0002\ufffd9l\u05f2\ufffd\\\ufffd*\ufffdP\u0001(\ufffd\ufffd\ufffd\u03a1}\u0014\u001d\u0007\ufffd\u05e5\ufffd\ufffdQ\ufffd\u000e\u0015\u0018s,\u0013\ufffd\ufffd\ufffd\ufffd\u0017Y6\ufffd\"{\ufffdx\ufffdU\ufffd\ufffd\ufffd\ufffdFo\ufffd\ufffd\ufffdq\ufffd$\ufffd\ufffdH\ufffd\ufffd\u06e9\r4,\ufffd\ufffd\n\ufffd&\ufffd\ufffd\b\ufffd\ufffd\ufffd&qt\ufffd,\ufffd.\ufffd\ufffdY\ufffdcR\ufffd\ufffd\ufffdN\ufffd)J\ufffd.\ufffdS\ufffd\ufffd^N\ufffd\ufffdW\ufffdn}\u0013k\u062c\u00108\u0006\ufffdd\ufffdMen\ufffd\u0001\ufffd\n\ufffd\ufffd\ufffd\"\u000e\u001dwW)p\u0006\ufffd\u0010*\ufffd\u001f\ufffd[W\r\ufffd\ufffd\ufffd\ufffd\ufffd\u0014\ufffd\ufffdY`\ufffd\u07c5\ufffd\ufffd\u0019q2\ufffd\ufffd\u001e\ufffd\ufffdC\ufffd\ufffd-Mx{\ufffd\u0011\ufffd\ufffd}\ufffd\ufffd!\ufffd\ufffd\ufffd\ufffdh|\n\u0000\fW\ufffd\u0001\ufffdW\ufffdh\u022f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdp\ufffd\u0001&1?\ufffd\ufffdC\ufffdt\ufffd\ufffd\ufffd\ufffd\ufffdJ\ufffd\u0012(\ufffd\ufffd\ufffd'\u001e\ufffdvW\ufffd.l,\ufffd\ufffdI*\ufffdk\ufffd\ufffd=\ufffd\ufffd;\ufffd\u0013\u001b*yR\ufffd\ufffd/\u001e\u0002@H\u0731\ufffd\u0007\ufffd\ufffdF\ufffd\ufffd8H\u0484\ufffdOkenIa\ufffd\ufffd\u007fH\ufffd\ufffd\u01c5::\ufffd\ufffd\ufffde\u0001\ufffdC\ufffdigW\u0001\u0465\ufffd%\ufffdC\u0011<\u0015\ufffd30\ufffd=\u0015\ufffd\u0001D{5\u0603\ufffd\ufffd\ufffdhp\ufffd\r\ufffd\ufffd\u001a\ufffd\u0013\tL\u001f\u0748<\ufffd\u001d\ufffd\ufffd\u04ba\ufffd%W\ufffd\ufffd\ufffd%\ufffdY\ufffd7XX\ufffd\ufffd\"\b\ufffd\u0010\u001e\f\ufffd\u0219\u0001\ufffd8x\u0019\ufffd\ufffd7\ufffd\u000bu\u0019A\\\ufffd]9\ufffd\u001c\ufffdD{\ufffd\ufffdlF-at@<\ufffd\ufffd\u0123\ufffdS\ufffd\ufffd\ufffd^VF\t\ufffd\ufffd\u000f\u0012\ufffd\ufffddp\ufffd\ufffd\ufffd\u0015q\ufffd^\ufffd\ufffdI\u0248y\u01ba\u0001V,K\ufffd\u007fu<X\ufffd8\ufffd\u0003\ufffd\ufffd\ufffd&\u0002\ufffd\u034e\ufffd\ufffd\ufffd\ufffd(r\ufffd\ufffdt\u0006\u0003\ufffd\u0016k\u001b\ufffd1jac\ufffd\u0015\ufffd\ufffdq\u0775\u0017`)\ufffd\ufffd\ufffd\u001f\ufffd~\ufffd\ufffd\ufffdV\ufffd\ufffd\ufffd\r\u0000\ufffdF\ufffdGy\ufffd{\ufffd\ufffd;eBg\ufffd\ufffdh\ufffd\ufffdkQ{1\u0011\ufffdb\ufffd\ufffd\ufffd\u0018\ufffd\u001d\ufffd\ufffd\u0005\u0017\ufffd\ufffd\u0019\ufffd\ufffd\u0010koT\ufffdG\b\u000e\ufffd\u0010-\ufffd~\u0000\ufffdh\f\u0002\ufffd\ufffd\ufffdb\ufffdWLF\ufffd`\ufffd\u001bv\ufffd\ufffd/\ufffd8\ufffd\ufffd\ufffd\u0015\ufffd\ufffd\ufffd\u0017\u001b\ufffdx\u0004.\ufffd\u0011\ufffd{\ufffd\u000f*+[\ufffd\ufffdLI\ufffd\ufffd\ufffd\u051a;^\ufffdy\ufffd\ufffdR\u0004y\u00151-sQ\ufffd7\ufffd\u0004z\ufffd\ufffd\b\ufffd\u202d\ufffd1\ufffd\ufffd\ufffd\u000e(\u000f\u0575\ufffd\ufffd\ufffd\ufffd\ufffdm\ufffd\ufffd\ufffd\"o\ufffd\ufffd\u007f\ufffd\ufffd\u0017!0a\ufffdY\"T\ufffd\bk\u0006K\ufffd\u0002\u0005X\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0480\u0010\ufffd?\ufffd\ufffd\u007f_\ufffdg\ufffd\u0001\ufffd\n\ufffd!Q\ufffd\u001c\ufffd\u04b1\ufffd\ufffd5\ufffd\ufffd8\ufffdR\ufffd\u001a5ZK\ufffdr\ufffdQ\ufffd\ufffd\u000f\u0003\u0005zM`H\ufffd_\ufffd\ufffd\u001d\ufffd?c\ufffd;\ufffdx.\u0615E\ufffd\ufffdT\ufffd\ufffd)\u007f\ufffd\ufffd{\ufffd8\ufffd\ufffdZU'\"\ufffd\ufffd\u0001\ufffd\ufffd\ufffd\u0017\ufffd\ufffd!a#\ba\ufffd\ufffd/\r\ufffd\ufffd\u0003S\ufffd\u063ed\ufffd\ufffd\ufffd\ufffd\f\u0003P\ufffd\ufffdoK\ufffd\ufffd\ufffd\u027f\ufffd\u007f\u0007\ufffdQ\ufffd!d\ufffd\u0018\ufffdsk[\u0013\u0013:<1\ufffd\f\ufffd\ufffd[\ufffd8\ufffd\ufffd\ufffd\ufffdE\ufffd\u07aeIW\ufffdUi\ufffd\ufffdf\ufffd\ufffdl1/\\P\ufffd\u0010}\u0014\ufffd\ufffd\f>\ufffd\ufffd\ufffd1\ufffd\ufffdk\ufffd\ufffdb\"e\ufffd\ufffd\u0004v\ufffd\ufffd]\ufffdJ\ufffde`\ufffd\ufffd\u000fv\ufffdgj\u001c\ufffd\ufffd\ufffd\ufffd\ufffdX\ufffd\u0000\ufffd\r\ufffd\ufffd\ufffd\ufffd\ufffd\u0004\\\ufffdN\ufffd59\ufffd&C\ufffdH\ufffdmF\\es?\u0530P\ufffd\u0001\u001a\ufffd\u0013-Pj\ufffd|\ufffd\ufffd\ufffd+\ufffd\ufffdj\u0016\u0000\ufffd\u0004\ufffd\ufffd\u0014DV\ufffdI\ufffdO\ufffdh\ufffd4\t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC3\ufffdQD\ufffd\ufffd_\u000b\ufffd\t\u0006\ufffd\ufffdF\u0011$zi\ufffd\u000b\ufffd\u0016\u074b\u03f2R\u0007\ufffd\ufffdp\ufffdQTq$>A\ufffd<\ufffd(5\ufffd9\ufffd\bE\ufffd}\u0017K\ufffd^\ufffd\ufffd\ufffd\ufffd\ufffdt\u000b\ufffd\u0016Q5\ufffd\ufffd.\ufffd\ufffd\ufffd\ufffd2\ufffd\u6ae3\"2\ufffdk3|\u0014\u0374\ufffd\ufffd67e\n\ufffd\ufffdWg\u0010\ufffd\u000e\ufffd\ufffd\ufffd{\ufffdQ\ufffdi1\ufffd \ufffd\r\ufffdQS\ufffd\ufffd\u00121\ufffda\ufffd\ufffde\ufffd\ufffde\ufffd(2e\u000e\u0240e)\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdy\ufffd\ufffd'1\ufffdQ<\f@\ufffd\ufffd)\ufffd\ufffdcZ\ufffd\u0011\ufffd\ufffd\ufffd}\u0016\ufffd\ufffdC\ufffd\u0000\u007f\u0011\u0014\ufffd\ufffd\u000fy\"\ufffd\u001e\ufffd\u00ae\ufffd\ufffdNx\u0003u\ufffd\u001f\u0015\ufffd'\ufffd\u0015\u0000\ufffd\ufffd;2\ufffd\u0013@\ufffdH\ufffd\ufffd\u001e\ufffd>\ufffd\ufffdY\ufffdO.P\ufffdr\ufffd\ufffd\ufffd\ufffd\ufffd\u001b\ufffdA\ufffd.\ufffd\ufffds\u0012\ufffd!\ufffd\u0004m\u0006R\ufffd\ufffdQ\ufffd\u0003\ufffd\ufffd\ufffd\u001b\ufffd\ufffd\ufffd\ufffd*\u0016\ufffd{\ufffd\ufffd\ufffdH\ufffd\ufffd\ufffd\u0006\ufffd\ufffd\ufffd\u001e=%\ufffd\u000b\ufffd\ufffd\u0018\ufffd\u0004xRit\ufffdC1\ufffd\u001f8A\u0006\ufffdet;\ufffd\u05b8\ufffd(\ufffd&\ufffd\ufffdb<\ufffd9\ufffd\ufffd\u0012\ufffdFLJ\ufffd1_u\u0011\ufffdT\u0011\ufffd\ufffd*y\u0014\ufffd\ufffd\ufffd\ufffd'\ufffd\u038d\ufffd\ufffdD\ufffdB\u0003\u0001\u0016?\ufffd\ufffd\ufffd\nzs;\ufffd\u001b\ufffd\u04ac\u0014\ufffd\ufffd\ufffdN\u0017\ufffd\ufffd\u04b8qX\ufffd\ufffd\ufffd\u0001\u0001aso\ufffd\ufffd'\ufffd\ufffd2tr;\ufffd\ufffd\ufffdzt\ufffd4\ufffdTl6\u0018\u000b?\ufffd\ufffd\ufffd\ufffdc\ufffdC\u001f\ufffds\ufffd\ufffd|6\ufffd_G<\ufffd\ufffd\ufffdE\ufffdi\u001a\ufffdY\":\ufffd{\ufffd\u001d\ufffd\ufffd.\u0006\ufffd\ufffd\u0003\ufffdB\u0005p\ufffd\u0015\ufffd/\ufffd:\ufffd9\ufffd\u0000\ufffd\u001aG\ufffdND\ufffd3\u0011L\u03ae\ufffd\u000fQ6U\ufffd\ufffd\ufffdC1\ufffdkpJ\ufffd\ufffd7\u0006A\nL\b\ufffdJ3\ufffdI\ufffd\b\ufffd\ufffd\ufffd\ufffd(c\u000fe\ufffdk\ufffd\ufffd\ufeeb\b\ufffd\ufffd\u001e\ufffd\ufffd\ufffd\ufffdq\u04fc\ufffd\u001f]'\ufffd\ufffd~C\u012d\u059d\u001f\ufffd,\ufffd\u000e\ufffd$\ufffdz\ufffd(}\ufffdG\ufffd\ufffd\ufffd\ufffdO>\ufffd\ufffd\ufffd\ufffd\ufffd\u05cd\ufffd\ufffd\ufffdS\ufffd{v\u00fb\ufffds\ufffd\ufffd:\ufffd\ufffd\ufffd\ufffdt\ufffd7\u0012bE\u000fr\ufffd/H\ufffd\ufffd\u0013\u001a$+FI\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdO4\ufffd\ufffd\ufffdB`'J\ufffd$\ufffdk\ufffd\ufffd\ufffdV\ufffdNS\ufffdo9\ufffd\ufffdB\ufffd\ufffd8O\ufffdw?\u023dEWy^\ufffdl\ufffde\ufffd\ufffd\ufffdE\ufffdb\ufffd\ufffd\u031e\ufffd\ufffd \ufffd\ufffd\ufffd\u0018\ufffd#\ufffd\ufffd\u0006j\ufffd@\ufffd\u001e-\ufffd\ufffd\u0014Xtt\ufffd2\ufffd\u0004\u0005\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdl\ufffd\ufffd\t\u000b\ufffdL\ufffd4Bj\ufffd\ufffd\ufffd\u001fp\r`\ufffd6\ufffdZ:\ufffd-`\u0567j-\ufffd\u0535,\u0014\ufffd\u07ceK\ufffd9\u0003uU\ufffd\u000b\ufffd\ufffd\ufffd\u000f\u0013\u001c2\ufffd\u001c\ufffd\u0010y\ufffd\ufffd\ufffd\ufffd\ufffdL\ufffd\ufffd\ufffdp\ufffdH\ufffd\u0006\n\u0001),;\ufffd.>6A\ufffd\ufffd\b\ufffd)\ufffd4\ufffd\ufffd\ufffdu\ufffd\u0199\u0015\f\ufffd\ufffd\u0012o\ufffdM~\ufffd\ufffd\ufffd\ufffd\ufffd\b\ufffd\u0018\u0014\ufffdo\ufffd!\ufffd\ufffd\ufffd\u0007Q\ufffd\ufffd\ufffdeQf\ufffdk\u0012\ufffd\u001cS;uz\ufffd\u0019\u0003X\ufffd\u001e\u000e1e\u001f\ufffd8\ufffd\ufffd\ufffd\ufffd/Z<\u000e]\u0781\ufffd\ufffd\u0011@O\ufffd4\ufffd\ufffd\ufffd\n2\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdR\u007f\ufffd\ufffdW\ufffd=?\ufffd?A\ufffd\bs\ufffd\u0000\ufffd\u0017\u0496\ufffdQF6\ufffd\ufffd*\fv\ufffd\u001d\u0000\ufffd\u0006\ufffd8\ufffd\ufffd\u0014\ufffd\ufffd\u0011\tv\r\ufffde\ufffd\u001bM\ufffdU\ufffd\ufffdG~r\ufffdqi\ufffd\ufffd(\"7B\ufffd\ufffd\u0018kg%7>m\u07faVb\u0001\ufffdI\ufffdR\ufffd\ufffd\ufffd-6j\ufffd\ufffd\ufffd\ufffd\ufffd\u0470\u0015\u0334\u0004R!P\ufffd\ufffd9\ufffdgF/&\ufffd\ufffd1\ufffd\ufffd;6\ufffd\ufffdB*\u0010\ufffdj\ufffd\u000f\ufffd\ufffd\ufffd\u0003\u000b\ufffd\ufffd\u000f\ufffd\ufffd`Di\ufffdN}2\u0013\ufffdo\ufffdMy\ufffd*\ufffd\ufffd\ufffd~\ufffd\ufffdR\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd \ufffd\u0001=\ufffd\ufffd\ufffd-\ufffd\t\ufffd`\ufffd\ufffd^\ufffdqU\ufffd\ufffdl\ufffd\ufffd\ufffdh6\ufffd\ufffd\ufffd\u0019U\ufffd\u0016jR\u007f\u000b\ufffd\u0001\ufffd$\ufffd\ufffd\u0014sV#\n\ufffd>t\ufffd\ufffd\u0017f\ufffd\ufffdk\ufffd\ufffd\ufffd\ufffd\ufffd\u0019UGK\u000f\ufffd\ufffd\ufffd\ufffd\u0013'\ufffd\ufffd@\ufffd\ufffdL\ufffd\ufffd!sZ\ufffdi`\ufffd\ufffdA\ufffd\ufffd\ufffdddF\ufffd\ufffd:\b\u0011\u0006\ufffd\ufffd5*\ufffd\u3f167\ufffd9\ufffd8Sk\ufffd\ufffd}\ufffdeG:M\ufffd9g1\ufffd\ufffd\ufffd)\ufffdf\ufffd\ufffd\ufffd3\u000f\u0016\ufffd\uabb8\ufffd\u0019zd\ufffd\ufffd\u00165\u0006U| )L\ufffd\ufffd\ufffd\ufffd\ufffdr\ufffd\ufffd<7]\ufffdQ)\ufffd\ufffd\ufffd\ufffds\ufffdgO\u00ea\ufffd\ufffd(\ufffd\ufffd\ufffd\br\ufffd\u0016B\ufffd\ufffdt\ufffd\ufffdQ$5RM\ufffd\ufffd?\ufffdR\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffd\ufffd\ufffd-X;\ufffd\u001cNK\ufffd\u0004Kd\u001b\ufffd1#\ufffd\ufffd\u031c\ufffdD\ufffd$\u0000\ufffd\ufffd%\u000f\ufffd\u000f\ufffd\f\ufffd`,qo\ufffd\u0007;\ufffdd\ufffd]$\u001d\ufffd\ufffd0\ufffd=g\ufffdt0\ufffd\ufffd\ufffd\ufffd\u0010l%^wLk\ufffd\ufffd\ufffd\ufffd\ufffd4\ufffd\ufffd>\ufffd\u0257\u0010\ufffd\ufffdI\ufffd\u0017r\ufffd\u0424=L\u0013\ufffdmk\"\ufffdtT\ufffd\ufffd\ufffdPE\ufffdm\u0000\ufffdg(\u001b\u072d=\ufffd\ufffd\ufffdbq\ufffd'\ufffd\ufffd8\ufffd7\ufffdG\ufffd\ufffd\ufffd\ufffd.6\ufffd\u0006sw\ufffd\ufffd\ufffd\ufffd\b\ufffd\ufffd\ufffd\ufffd Vd\ufffd\u0004D\ufffd\\\ufffd\ufffdT\u0011\ufffds\u001e\ufffd \ufffd\ufffd\u0001M\ufffd\ufffd\ufffdQ~\ufffd4\ufffdU\ufffd!:\ufffdCW\ufffd\u007fC\ufffd\u0004Q(6\ufffdV\u000e\u0166\bt\ufffd\"\ufffd\ufffd6\ufffd\ufffdQ\ufffd\ufffd]\u0006\ufffd|\ufffdo\ufffd\ufffd{\ufffd\ufffd\ufffd\u0012t\ud32e\ufffd\u001b\u001cp\ufffd\ufffd\ufffd\ufffd\u0003/\ufffd\ufffd\ufffd(\ufffd\ufffd/\n1\ufffd\ufffd\u78c1\ufffd\ufffd<\t\ufffd\u0012&\ufffdY\ufffdZ'I\ufffdl\ufffd\u001b\u0004R7aQ{W]\u0005\u07f6\ufffd\u0015\ufffd\ufffdH\ufffdm#wF\ufffd\ufffd76\ufffdS\ufffd\u0696d\ufffd\ufffd\u01b2S\u0002&j\ufffd\ufffd\ufffd7\ufffd7U\ufffd\ufffd\ufffd%\ufffdZ\ufffd\ufffd\ufffd\u0018\ufffd\ufffde\ufffd{\b\ufffdF\u000f.\ufffd;\ufffd{\ufffd\u007f2\ufffd\u0003\ufffd\ufffdOk\ufffd\ufffd@M\u001f\ufffdM\u0019\ufffd\u001a\u03d6\ufffd))\ufffd\ufffd\u0004`\ufffd&\ufffd(\ufffd4\ufffd{\ufffd\u0003\ufffd\ufffd\ufffdu\u000e\ufffd\u001b\u0016\ufffd\u000e\ufffd\u00fc\ufffd]<\ufffdt\ufffd\ufffd9Sz\u0637\u0003\ufffd\ufffd\u01e0T(\ufffd\ufffd<\u001f]\ufffd\ufffd\ufffd\u000b\ufffd\ufffd\ufffd8ug\ufffdu\ufffd\ufffd(\u0005]\ufffdMWI\ufffd\ufffd\u0366\ufffd\ufffdr\u06f7\ufffd\u0014\ufffdq\u007f'\ufffd\ufffdh,\u0016\ufffde\u0698(/\ufffd\ufffd\ufffd\ufffdH\ufffd1q\ufffd\ufffd\u0015\u001a\ufffd\ufffd\ufffd\u07bb\ufffd\ufffdb\ufffd\ufffd\nF\ufffd@\ufffdD\ufffd\ufffd\ufffdnF;d\u001a\ufffdD<\ufffd\u0016lS\u0015A\ufffdKd+!T.\ufffdh\ufffd\ufffd\u0013\ufffd\u001f\fF\ufffd\ufffdo\ufffd`\u0004\ufffdo\ufffd\ufffd\ufffd`~\ufffd($\ufffd\ufffd\ufffd\ufffd\ufffd\u0007\ufffd\ufffd!\ufffd\ufffd\\]\f\ufffd\u0000\ufffdK\u0000\ufffd\t$s\ufffd\ufffdN|\ufffdu\ufffd\u054c\ufffd\ufffdg\rt\ufffd\ufffd\ufffdB\ufffd\u0603n4\u0018x\ufffd\ufffdh\ufffd\ufffd\ufffd\ufffdZ\ufffd\ufffdE\ufffd\u0016\ufffdG0\u001b;\u001f\u0014>%}\ufffdQ\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdca\ufffd\ufffd\ufffd\u1fbbw\u0010\ufffd\ufffd\u001c\u0003Z&\u001a9X\ufffdZ\ufffdt\ufffd\u01ac\ufffd\u0432\ufffd\ufffd:M\u000bl\ufffdC\ufffdW;:C\ufffd\u007f\ufffd \ufffd\u0005\ufffd\u0002\ufffd<M\u6823KY\ufffdT\ufffd\ufffdO\ufffd|wV+0\ufffd\u0001\r\ufffd\ufffd\ufffd(\ufffd\u0018\ufffd,E\u001eo\u0005\ufffd\\7<|p\ufffdu\ufffdWU\ufffd\u0003:\ufffd\u00073`\ufffd_\ufffd\ufffd\u0004U\ufffd\ufffd1\ufffd\ufffd\ufffdJ5\ufffd:\u0004\ufffd\ufffd\bvvh\ufffd\u000b\u0010\u03a0\u000bNE\u0001\ufffd\ufffdW\ufffdW\ufffd\u0015\ufffd\ufffd\ufffde\ufffd\ufffd\ufffd\ufffd\u0000\u0000\u0003\ufffdA\ufffd/E\u0011,/\ufffd\u0000\u0000\u0003\u0000\u007f\"/\ufffd\u0019\ufffd\ufffdeR \u0002`cg\ufffd\ufffd\ufffd#\ufffdsn\ufffdal\u0276\u0003\ufffd\u0777J\ufffd\u0001\u0003R(\u0019\b\ufffd\u0010\u04acnl\ufffd\ufffd\ufffdXqP\ufffd\u0113\ufffd\ufffd\ufffd\u00017\ufffd\u0000q,;\ufffd\ufffd\u000f\ufffd\ufffd<\ufffd\u001b\ufffd1\ufffd\ufffdE\ufffdC\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\f\ufffd_A\ufffd\u054e4@\nG\u0010\ufffd\ufffd\u0010\u0015\ufffdl&\ufffd\ufffd\ufffdT\u0004\u007fz\ufffdC\ufffdb_\ufffd\ufffd\ufffd\ufffd\u0002+%\ufffd\ufffd`I\ufffd|\ufffdV\ufffd\ufffd\ufffd\u0013\ufffd>\ufffd\ufffd\ufffd\ufffddM*z\ufffd\u0005N\ua015\ufffd\ufffd\u0141\ufffd\ufffd\ufffdRW@#Q\u0019l\ufffd\ufffd[\ufffd\f\ufffd+J\ufffd\u0011\ufffdI\ufffdH\ufffduF\ufffd\ufffd\ufffd\ufffd4\ufffd\ufffd\u000e/\u001f6fz\ufffdUk\u0001\ufffd\ufffd\"\ufffd\n\u0002-J\ufffdO\ufffd\ufffd\ufffd\u0002s\ufffd\ufffdu\ufffdJ#\ufffd-\ufffd\u0000\ufffd\ufffdD\ufffd\ufffd\ufffdi\ufffd\ufffdp\ufffd7\ufffd\ufffdpQ\u0131\u001fcl\ufffdU_\u0434\u0003\ufffd\ufffd\ufffd\u00dc\u0006A\ufffd\ufffd\ufffd\ufffd\ufffdv\ufffd\ufffd\ufffd+\ufffdB\ufffd\\V]z:\u001f+yGQ\ufffdl\u0299\u0015\ufffd\ufffd\ufffd\u007f\ufffd)\ufffdV\ufffd\ufffd[1\ufffd/DEa\u0002\ufffdnBYRUU\u001c)\ufffdo\ufffd\ufffd<!\ufffd\u0011M\ufffdj*\ufffdt\ufffdI\ufffd\u0011\ufffd|\u007fb(`\ufffdC\ufffd\t\u04beh\ufffd\u0001\u000bC\ufffd\ufffd8\ufffd#\ufffd?\ufffd\u0012\ufffdxm\ufffd\u001bu\ufffdRZ\ufffdc\ufffd\ufffd\u0004\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001e\ufffd\ufffd<\ufffd\ufffd\u0017\u0617\ufffd\ufffd\ufffd&\\\ufffd\ufffd\f\ufffd\u02ac\ufffdL\ufffd|\ufffd\ufffd^\ufffd\u07e3\u000e;\ufffd{\u000b\u0001p\ufffd\ufffd>z\b\u0005\u001b\ufffd\ufffdz\ufffd\ufffd\ufffd\ufffd\u06b9\ufffd\ufffdZo'ht\ufffd\ufffd\ufffdFl\ufffd5\n\ufffd\ufffd/\ufffd2\ufffdfD{\ufffd4+\ufffdI\ufffd<\ufffd*A\ufffd\ufffd]\u0015\ufffd\ufffd.C\ufffd5\ufffdnV\ufffd\ufffd\nd3\ufffd\ufffd\ufffd\u0003n\ufffd\ufffdcK\ufffdK`ki\ufffd\u05b74(*k\u01dd9P\ufffdD#\ufffdFPxm:\ufffd!\ufffd\ufffd\ufffd>Q\u07efV\u001e\u001a\u0003\ufffd;u\ufffd5\ufffd9\ufffd{\u0011?\ufffd\ufffd\ufffdJ\ufffdbc\ufffd\ufffd\ufffdC\ufffd}+\ufffd4\ufffd>b\ufffd\u0180\ufffd>#\ufffd\ufffdG\ufffd\ufffd\ufffdh\f\u007f?\ufffd\ufffd\ufffd\ufffd3/[\ufffd\u02c1\ufffd`\ufffdhP\ufffdJ\ufffd]\ufffd\ufffd\ufffd\ufffd[\ufffdB\ufffd[_rI\ufffdv\ufffd[\ufffd2'(\ufffd\u00114\u001d\ufffdVj\ufffdU\u0004\ufffdPz)I\ufffd\\\ufffdq2N\ufffd\ufffd\ufffd\ufffdO\ufffd\ufffd\ufffd\ufffdz!Ci\ufffd4\ufffd\u001a\ufffd\ufffd\ufffd$v\ufffd\ufffd\ufffd\u000f\ufffd\ufffd\ufffde\ufffd%t\u0002\ufffdln\ufffd\ufffd5A\ufffd`\ufffdO\ufffd\fn\ufffd\ufffd}\ufffdvM\ufffd\u0003\ufffd\u0004\ufffdHR\u001e\ufffd\u03e7\ufffdl\ufffdC\ufffd\ufffdz\ufffd\ufffd*\u001fg\ufffd\ufffd'\ufffd\ufffdh+\ufffd\ufffd\u001c\ufffdn\ufffd\n<G\ufffdS\r\ufffdH\ufffd\ufffdzU\ufffd\u0016\ufffd\ufffd\u0017\u000bRbfzB\u001bqL\ufffd\ufffdU\ufffd]\u0007\ufffd8`DS\u0001Rc\ufffdX\ufffd\u0001\ufffdg\ufffd`m#\u0012#\ufffd\ufffd\n\ufffdF\ufffd\u001cv\ufffd\ufffd\u0015E\ufffd\ufffd\ufffd\ufffd\ufffd0-\ufffdq\ufffd\u0011\ufffdn\ufffd\u001a\ufffd\ufffd8U1\ufffd\u01c1\u0489%\ufffdH\ufffd\ufffdn.\ufffd>\ufffd_V\ufffd\ufffd\ufffd\ufffd\ufffds\ufffdh\ufffdj)A\ufffd\ufffd\u00144\ufffdd\ufffdJ\"r\ufffd\ufffd7\u001e\ufffd\t/>\ufffdn\ufffd\u01b1&\ufffd\ufffd\ufffd\ufffd\ufffd@\rj\ufffd\ufffd\ufffd\u0532IyCt\ufffdLjI\ufffd\ufffd\ufffd\ufffd6qx\"\ufffd$\u0012j\ufffd\ufffd\u0016k\u0013\ufffd\ufffd\u0007`\u0000\u0000\ufffd\ufffd\u0000\u0000\u0002\u0000\u0001\ufffdNtB\ufffd\u0000\u0000\u0003\u0000;V\ufffd\ufffdj'Q\u07cf\u0002\u0013Gd\u0000\ufffd^\ufffd\u007f\b eaQ6<'c+\u000f\ufffduU\u0012\ufffd\ufffd\ufffd\ufffd8\u001au\ufffdF6\u000b\ufffdE\ufffd\\\ufffd\u000bl\ufffd1\ufffd\ufffdDY\ufffdi\ufffd-d\ufffd\ufffd>Y\ufffdl\ufffdN\ufffdT\ufffd0'I\ufffd3\ufffd\ufffd>\ufffd\u0004O'\ufffdLD\ufffd(\u0012\ufffd\ufffd\ufffd.\ufffd\u0000:,\ufffd\ufffdC\u0004\ufffd\r\ufffd\ufffd\ufffd\ufffdE\ufffd\ufffd\ufffd\u0013\\\u001f\ufffd\ufffdl\ufffd\ufffd&2\ufffd\ufffd\u0015\ufffd\ufffd\ufffd\ufffd\u0014~$Os\ufffd=\ufffd\u066c\ufffd0\ufffd\ufffd\u0014\u0011\u001f\ufffd\ufffd\ufffd\u001c\ufffd\n\ufffd\ufffd{\ufffdo\u0013\ufffd$Z\u0018\ufffd\ufffd+\ufffd\"\ufffd\u0017\ufffd^\ufffd>\ufffdD}\u001ee\ufffd\u001e\ufffdw/\u000bk\ufffd\ufffd\ufffd\ufffdHsV\u0012\f\ufffd\u056f\ufffd\ufffd\ufffd\ufffd\ufffd\u0018\ufffd5\ufffd\ufffd\ufffd\ufffdo\ufffd\ufffd\u0002\ufffd\u0011J:\u0018\ufffdE7\ufffd\u077c\ufffd\ufffdF\ufffd\ufffdoh\ufffd,\ufffd\ufffd\f\u0196CL\u0017@\ufffd\ufffd\ufffdYM\ufffd\u052fK,9\ufffd\ufffdVz\u001c\ufffd\ufffd\ufffdhU`p\ufffdt\u000eN\ufffdb\u0002.\ufffd\ufffd\u001d\ufffd\ufffd\ufffd\u001f\ufffd6\uedfe\ufffd7b\ufffdS`\ufffdxQy\u00191\u02b5\ufffd(\u0004\ufffd\u0003\ufffdKf(p\u001b\r\ufffd{\u019c>U\ufffd7\ufffd\n\ufffdL\u04b9\ufffd|zm\ufffdS2\u04ecF^\u001dB+\ufffd\ufffd\ufffd-\u0004\ufffd\u0013/\ufffd\ufffd%A_\ufffd\ufffd0\ufffd6\ufffd4\ufffd\ufffd%\u0324\u00103\nJ\ufffd\ufffdv\ufffdd\ufffd\ufffd\ufffd\u042fG\ufffd_V8\ufffd\ufffd\ufffd7\ufffd\ufffd\ufffd\u007f\ufffd\u0011j\ufffd\ufffd&Enl\u001b\ufffd`\ufffdN!\ufffd\ufffd\ufffd\u000b\ufffdn\ufffd\u0431\u0015?\ufffd\u001c6\u06bc\u04c1\ufffd\ufffd\ufffd\r\ufffd{Q\ufffd1\u001b\ufffd\ufffdq\ufffd\u5c7b\u0768\ufffdH\ufffd\ufffd\ufffdc\ufffd\ufffd?\r\ufffd\ufffd\ufffd\u0442j\ufffd\u001e4i\ufffd`K\ufffdh\ufffd\ufffd%\u0639\ufffdU\u0018\u001b{\ufffdnNiJ\ufffd\u02c68\ufffd~\ufffdV\ufffdgH\u0000 \ufffd\u0000\u0000\u0002\ufffd\u0001\ufffdPjB\ufffd\u0000\u0000\u0003\u0000;j\ufffd\ufffd}\ufffd\u0001q\u007f\ufffdl\ufffd\ufffd\ufffdM_\ufffd\uad85\u0005>\ufffd\ufffd/I\ufffdi\ufffd\ufffdU\ufffd\ufffd\ufffd\ufffd\ufffd\u000b\n\ufffd\ufffd\ufffd\ufffd\u069c\ufffd\u0006q\u0206\ufffd0ofe\ufffd\u00007\ufffdo\ufffd<d\ufffd\"]\ufffd\ufffd{\ufffd^\ufffd\u001c\ufffd\u001d\u001aV\ufffd\ufffd\ufffdB3\u0004>\ufffdn\ufffdt\ufffd\u03e4p\ufffdi\ufffd;\n\ufffd]\t\ufffd \ufffd\u0007\ufffd\ufffd5qJ\ufffd\ufffd\u07d9\ufffd\ufffd\ufffd\ufffdRL+v$\u0011E\ufffdQ0\u0006\ufffd\ufffdR\u3f01\ufffd`l&Y4\ufffd\"_\ufffdav\ufffd\"\ufffd\ufffd}n\ufffd\ufffd\ufffd\ufffd\u001d0\u0017\ufffd\u0019L&\ufffd(\u0003K\ufffd\ufffd.\ufffdVj%\ufffdO\u0017\ufffdq\ufffd\u001eq\ufffd\ufffd\ufffd&d\ufffd\u0019\ufffda\ufffd#{\u073br\ufffd\u0003jGm\ufffd\u001d%\ufffd}.J \t\u0003\u0003\ufffd^\ufffd[.?\ufffd/\ufffd\u0017\ufffdA|\ufffd\ufffdC6\u0002'\ufffd\u0019\u0504\ufffdk\ufffd\u0003d\ufffd\ufffd~\ufffd\u0010\ufffd\u001di\ufffd\ufffda\ufffd\ufffdU\ufffdl\ufffd\ufffd\ufffde\ufffdj\ufffd\ufffd\u0007A\ufffd0\u001e@\ufffd\ufffd0\ufffdy\u07d4>\u007f\ufffdP*\u0014\ufffd\ufffd\u0013\ufffd\ufffd;\u000b\ufffd\u0016\ufffd[\b\ufffd8b\ufffd\u0012O~\ufffd\bk\ufffd\ufffd$\ufffdM\tW9(\ufffdg\ufffde\u0019\u0017o\ufffd#\u0002`\ufffd\n\ufffd\ufffd%\ufffdt[\ufffd\u0018/\u0001lH\u0012\ufffd*\f\re\u0014\ufffdi\ufffd\ufffd@\ufffd~\ufffd\ufffd\ufffdY-\ufffd_k\ufffd\ufffd\ufffd\ufffd\"\ufffdm-}9(\ufffdw \ufffdS\ufffdh\ufffd\u0015P\ufffd\ufffd\ufffdlax\ufffd\ufffd\u01a04\ufffd8R\u0014\ufffdQ8\ufffd\r\ufffdW\ufffd\ufffd\ufffdi<\ufffd\ufffdT\u001b\ufffd\ufffd\ufffd\ufffdF\ufffd4\ufffd&es I\ufffd7m\u0003qkE\ufffd\ufffd\u0018k\ufffd\ri\ufffd\u0013\ufffd\ufffd\ufffdQ\u000eZ^\u0019\ufffd\ufffd\ufffd=\ufffd\ufffd\u000b\u0018]\u00006\u01b4T\u0010\ufffd&/\ufffd\ufffd\ufffd\ufffd,\ufffd\ufffd\ufffdJX\ufffd\u0004\ufffd\ufffd9\ufffd\ufffd=\ufffd\ufffd:\ufffd\u0732!q\ufffd=3\ufffdcw\nw\ufffd\ufffd!F*\ufffd\ufffd\ufffd\ufffd)\ufffd1v\u0012\ufffdi\ufffd\ufffd\u0019\u0001\ufffd<\u0016\n\ufffd\u001e\ufffdX\u000f\ufffdU\u00123D\ufffd\ufffdLlI-\ufffdv|#I-\ufffdZ@\ufffd#O\u0017\\\ufffd%4\ufffd_G\ufffd\ufffds\ufffd\u0012\ufffd\ufffd\u0515Q\ufffd^3\ufffdY\ufffdC\ufffd|\ufffd\u0628\b\ufffd\ufffd3\ufffdqy\ufffdy\ufffd#\u001bGv\ufffdB\ufffd\ufffd\u0012MY\ufffdl\u0013\ufffdb\u04fb\ufffdW\ufffd\ufffd\u0004\ufffdNS\ufffd\ufffdX\u001e\u0016J\u0014\ufffd}\ufffd2A\ufffd\ufffd\ufffd\ufffd\ufffd@\u0000\u0000e\ufffd\u0000\u0000\b\ufffdA\ufffdUI\ufffdAl\ufffdL\bw\ufffd\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000#?\u0005m\ufffd{P\ufffdG\ufffd\u06b5\ufffd\ufffd\ufffd\ufffd\ufffd\u8539v\ufffd\ufffd{h\u0000]V\ufffd\ufffd-\ufffdw+\ufffd\ufffd#\ufffdDmz\ufffd_\ufffdX\u000e \ud922\udcf5+\ufffd\ufffd\ufffdPJ\u001d\u0018\ufffd}\ufffd\ufffdb\\O\u0012\ufffd\ufffdlI \u007f\ufffd\ufffd\f\ufffd0\ufffd\ufffd\ufffd@\ufffd/\u0018\u001a%\ufffd=\ufffdN\ufffd\u0019\u0004\ufffd\ufffd\ufffd-\u001d7\ufffd\ufffd\ufffd\ufffd)K\ufffdFX\ufffd\ufffd\u000bK}\ufffd@\u0011\ufffd\ufffdm\ufffd\u007f\ufffdS\ufffd\ufffd\ufffdG \ufffdR\ufffd&es\u0014t\ufffd\u00163b?k\ufffd\ufffdR\ufffd\u0310\ufffd\ufffd\ufffd\t\u06b3\ufffd\ufffd/\ufffd\ufffd\u0011\ufffdi\u0015\ufffd\ufffd\ufffd^-\ufffd\ufffd\njZ\u0006\ufffd\ufffd\u0010\u0002\ufffdQ92\ufffd\u05ca\ufffd\ufffdca7\ufffd\u00a4\ufffd\u001e\ufffd\ufffd\ufffd\ufffd\u0016\ufffd\ufffdx\ufffdz\ufffdx\ufffd\u001c\ufffd(` \ufffd\u0015C\ufffd:'\u001cj\ufffd\ufffdi\t\ufffdy\u0167\f\u000f\ufffd%m^ \n\u05f9\ufffd\ufffd\ufffd\ufffd\ufffd\u007f\u0014g\ufffdg\ufffd#\u000e\ufffd\ufffd\ufffd\ufffd\ufffdf\ufffd4\u048dOiz\u000b\ufffd\f\ufffd\ufffd\ufffd\f\u007f\ufffda\ufffdQ\n\ufffdUjH\r<D/xH]\ufffd\u05e5\u0003TO\ufffd5\u0017 \"3_\ufffd.9u\u001b\ufffd8\ufffd_|/\ufffd5\u0007.\ufffd\u0005\ufffd\u0018A\ufffd\u0006fh\ufffd\ufffd\u001c\ufffd\u0012\ufffd,\ufffd\u001b\u001b[\ufffd\ufffd_\ufffd\ufffd5\ufffdu\ufffd\u0002\u00fep\ufffd\ufffd.\u0014!\ufffdC\ufffd?\ufffd\ufffd\ufffd\ufffd\u0541\ufffdu\u0373\ufffd\nL\ufffd\ufffd\u0011v\ufffd\ufffd\ufffd\ufffdY]\u0013\ufffd\ufffd6K\ufffd!\\\f\r\ufffd\ufffd.}\u0011Z\ufffdI\ufffd\ufffdq\ufffdJ\ufffd9\u001e*=YQ\ufffd\u0001\ufffd\ufffdT\ufffdl\ufffd\u0015\ufffd\ufffd?\ufffd\u0011\ufffd/?\ufffdB\ufffd\ufffd\u007f\ufffdU\r \ufffd\ufffd0$\ufffd\u001e\ufffd-\ufffd#\ufffd\ufffdS8H\ufffdo+4\u0011\ufffd\ufffdn\ufffdi\u0018\ufffd\ufffd\u02e9F\ufffd[\ufffd\u0017\ufffd\b*\ufffd\ufffdX\ufffd\ufffd\ufffd\b\ufffd\ufffdc\r\ufffd\u03d6\u0005g\ufffd\ufffd&\\e\ufffd\ufffd\u011c]\u000b\ufffdz\u001aH\u0004\u0017\ufffd*O\u0003l_\u0005\u000e\ufffd\u03f6\ufffd\ufffd\ufffd\ufffd\u0006\u001bgB\ufffdu\ufffdW\u000fzS\ufffd4\u0006q\u0003)\ufffd\ufffdZ\u0003J)\u000fI\u001a\ufffd\u0003J\u0112\ufffd\ufffd\u0765\ufffdGa\u0003\ufffd\ufffdC\ufffdg\u001a\ufffdT=\ufffd\ufffdmC\ufffd\ufffd\u0015\ufffd%{\u0001\ufffd\ufffd[\ufffd\ufffda\ufffd\ufffd\ufffd\u001e\u0010-\u0515\t\ufffda\ufffd\ufffd\ufffd/=@P\ufffdZ\ufffd)\ufffd83+\ufffd\ufffd\ufffdQq\ufffdu\ufffd\ufffd\ufffd\ufffdGk\u0001\r\u00028\u0017+m\ufffd\r\u0012\u0010\ufffd\ufffd\ufffd}\u0013P\u001b\u001aNbgq\ufffdq\ufffd\ufffd=@B\ufffd\u0011\ufffdE\ufffd\ufffdDM\u001e\ufffd5z\ufffd\ufffd*M\u000f\ufffd\ufffd\ufffd'\ufffd\ufffd\u0012\ufffd/PV/K\u04687\ufffd\u0018\ufffd\ufffd83\ufffdxH\ufffd\ufffd\ufffd\ufffd\u00183x\ufffds0\ufffd\u0000\ufffd\u04f9\ufffd\u05a08[hCF\ufffd\ufffd4M\ufffd0\ufffdEi\ufffd\ufffd|\ufffd%\ufffd\ufffd\u0013\u00133\ufffd\u0012\ufffd|\ufffdo\ufffd/\ufffdy\ufffd\"\ufffd\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\ufffd+\ufffdQ\u0014\u0012\ufffdS4\ufffd3\b\ufffd\ufffd\ufffd\ufffd\u0013\ufffd5\u0019\ufffd\ufffd\ufffdpMo\ufffdW@\ufffd,\ufffd\ufffd)\ufffd\u000e_\ufffd)\ufffdr\ufffd\ufffdH\ufffdb2\ufffd]Y\ufffd\ufffd\u0002m\u000e\u02a7\rW \u060c\ufffd\ufffd\u001c\ufffd\u0016\ufffd\ufffd\u0013_XO\ufffd\ufffd8m\ufffd$\ufffd\bH\ufffd\ufffdJ6Y\ufffdLk\ufffdy7\u001f5\u0012S7J~\ufffd\ufffd\ufffd\ufffdpQM\ufffdi\ufffdf\ufffd\u07c4\"l-4U\ufffd_\ufffd\ufffdL\ufffd\ufffdB\ufffd\ufffd+\ufffd\ufffd\f\u06e4\ufffd\ufffd\u2eb7\uedd7\ufffd\u0015\u001dYW\ufffdit\ufffd\ufffd\u0096\ufffd0i\u001a\ufffd-\ufffd\ufffdH\ufffd\u001fR\ufffdq\ufffd\ufffd3?\u0005\ufffdD\ufffd\u0413ySf\u0015e*\ufffdF\ufffd7\ufffd\ufffd\ufffd\ufffd<\"/\ufffdP\u0013\ufffd\ufffdx\u007f\ufffdSd^v\ufffd(\u078b&\ufffd\ufffdN\ufffd\ufffd\ufffd\ufffdu\ufffdG\ufffd%U21\ufffd&\ufffd\ufffd\ufffdnk`\ufffdw\ufffd\ufffdk*V7u3O\ufffdL\u001au\ufffd@0\ufffd\u06dc&s\ufffd&\ufffdE'U=\ufffd%\ufffdu\ufffd6\u0323\ufffdY\u0017y\ufffd\ufffd/8\ufffd\u007fmt\ufffd\ufffd2\ufffdP\ufffd\ufffd\u04aa\ufffdX\\\t\ufffd\ufffd\ufffd\u001a\ufffd\ufffd\ufffdm_\ufffd\ufffd\u000f\ufffd'\ufffd\u001f\ufffd\u03c4\ufffd\ufffd\u0554\ufffda\ufffd\ufffd\ufffd\ufffdh\ufffd\t\ufffd\u05bc\ufffd\ufffd|\ufffd\ufffd\u001e\ufffd\ufffd\ufffdIK2\ufffd\ufffd\u0003\ufffd\ufffd\ufffdl\ufffd\ufffd'\ufffde\ufffd\u035e\ufffd\ufffd\ufffdy{\ufffda6Q\ufffd\ufffd\ufffd\ufffdr\ufffd\ufffdp\ufffde\ufffd@\ufffd4\ufffd\ufffd1\ufffdR`\ufffd\ufffdG\ufffd\ufffd\ufffdG\u0012\ufffd\ufffdYI\ufffd\ufffd]u\ufffd\ufffd=6B\n\ufffdQ\ufffd\ufffd\u001f\ufffd\ufffdy\ufffd\ufffdrZ\ufffd0\ufffd\ufffd(\u0014\u0019\ufffdl\ufffd\ufffd\u0019\ufffda\ufffd\u0019\ufffd6\ufffdG\u0010\u010a\ufffdo\u0434h\ufffd\u0016\ufffd\u0012\ufffdd43)s\u0014^\ufffd2\\\ufffd\ufffdIb\ufffd\ufffdi\u0011\u000b\ufffd\ufffd\ufffd\ufffdZVv\u0019\u001e\ufffd$?\u007f;\u0014\f\ufffdM\ufffd\ufffd\u001c\u0007\ufffdQ\u000b\ufffd\u0004-\u001e\u001b\ufffd\ufffd\ufffd\u0004\u0612\u001eEH\ufffdBP\ufffd{\ufffdg\u0000\ufffdB\ufffdS\ufffd\ufffd\u0011\ufffd\ufffd\ufffd\ufffd\ufffd}r8\ufffd\u020e\ufffd\ufffd4r0F\ufffd^\ufffd\ufffdn\f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0172/\u0018E`\u01f6\ufffd\ufffdm\ufffd}A\ufffd\u0019@\ufffd\rf\ufffd\ufffd#\ufffdZvg\ufffd\u0000&\t=B\ufffd\ufffd\ufffd\ufffdX\u0659\u0010y\ufffd\ufffd<\ufffd\f\ufffd=\ufffd1\ufffdS\ufffdP\u0013R#\ufffd\u00174\u0523!\ufffdU?E\u044dw\ufffd[\ufffd\ufffd\ufffd\ufffdL\ufffd\ufffdEs!>\ufffd\ufffdH=\ufffd*\u0005\u0018\ufffd\u0019\ufffdn\ufffd\ufffd\u0018|Z\ufffd\ufffd#&\u0011\ufffd+\ufffd\u001d\u06b8K\ufffd\u0014\u0003\ufffd\u042f\ufffd\ufffdS#\u0014J\ufffd-I\ufffdy\ufffdM\ufffdN\ufffd);\ufffd'\u0390p\ufffdDG\ufffd\u0019\ufffd\ufffd\ufffd\u0005\ufffd\ufffd-0\ufffd\u0002\ufffdu\u0002\u001fY\ufffd\ufffd\u0013M\u0012\ufffd34\ufffd\\\ufffd\ufffd\ufffd,\ufffd\ufffdo\ufffdZ\ufffd\u00e1U\ufffd^\ufffd\ufffdC\ufffd\ufffd\ufffd\u00165|\ufffdOZ\ufffd\ufffdi\ufffd*>\ufffd%\ufffd\ufffd\u000e\ufffd\b,\u050d\ufffd\\\ufffd\ufffd\u000e\u0010_\ufffdH\u001dM*\ufffdM\ufffdI\ufffdF\u0011o\ufffd\u001e|R\ufffd&\ufffdC-\ufffd\ufffd]\u0016k<\ufffd3W\ufffd\ufffd\ufffd\tI\ufffd\u001a\ufffd+\ufffd5\ufffd?5\ufffd{'d\ufffd\ufffds\bmsj\u0015\ufffdI\ufffd6\ufffdD\u001c\ufffd+}e7\ufffd\ufffd\ufffd\ufffd\ufffd;\ufffdm\ufffd\u067f7\ufffdk\ufffd\ufffd\u001f\u001a&M\ufffd\u001eW\u0019_s!\ufffd\ufffd.\ufffd\ufffd\u0005\ufffd\ufffd\ufffd\ufffd\ufffd_u\ufffd\ufffd\ufffdW\ufffd\u000e\ufffdP\ufffd{\ufffd\ufffdc\u001a)\u057d\u0015SK*\ufffd\n\ufffda\fA^\u0201\ufffd\ufffdk4\ufffdj\u02fen\ufffd/'\ufffd\ufffd\ufffd\u0006\ufffd\ufffd\ufffdL\ufffd\u045bD\ufffd\ufffd\ufffdh\ufffdT\ufffd;\u000f\ufffd\f}\ufffdL~n\ufffd\ufffdO\ufffd=\u042f\u0447~\u0010\ufffd\ufffd\ufffda2\u019e\ufffd{b#_\ufffd\ufffdV\ufffd`b<VW\ufffd\u0432\ufffd0\u0581\ufffd\u0000}\ufffd\u0014t*\ufffd\ufffd\ufffd\ufffd\ufffdK\ufffd\ufffd\ufffdx\ufffd\u0004\u001c\ufffd4\ufffdasw\ufffdB\rQ\"\n\ufffd\u04e0G\u0019\ufffd\ufffd$*\ufffd\ufffdT\ufffdS\u0006\t\u0010j`N\ufffd\ufffd\ufffd\u021c\u0012\ufffd$8\ufffd\ufffd\ufffd\ufffdx.\ufffd\u0004Nq\ufffd\u0002\n\ufffd\ufffd7\ufffd\u0016H\ufffd\ufffd\ufffd\ufffd!\u000f\ufffd\ufffdu\ufffd\ufffd+\ufffd\t<\ufffd\u0016\ufffd\u0016\u001cS\ufffd;\ufffd(l{\ufffd\u0016]\ufffd\ufffd\ufffd\ufffdM\ufffdL\ufffdv\u0017\ufffdR\ufffdaz\u0006\ufffd\ufffd\u02c4\u0526\ufffd\u0007\ufffd\ufffd%\ufffd&\ufffd\u0215\ufffd\ufffd\u022b\ufffdJ\ufffdX\ufffd\ufffd\u0002\ufffd?\u0013\u0010:\ufffdA\ufffdQ\u0003\ufffd\u0000N`\ufffd\ufffd]c\u001b\ufffd\u001d\ufffdW\ufffd\ufffd3\ufffdwtg\u001d\u0004\ufffd\ufffd\u0016\ufffd\u0014\be[\ufffd\u0441\ufffd\ufffd\u000f\\\ufffd\ufffds&\ufffd(\u007fFp\u0016\ufffd\ufffd\ufffd*\ufffd\u001bRP`n\ufffdi\ufffd\ufffd\ufffd:\ufffd\ufffd\ufffd\u0014\ufffd\ufffd\ufffd\ufffd\ufffd\bW\u078b\u1d9eF]@\ufffd\u0006\ufffd\ufffd\ufffdvcn\ufffd\ufffd$cvqO\ufffdAT0\ufffd\u0014)\ufffd\ufffd\ufffdS/\ufffdv<\ufffd\u0013\ufffd\ufffd\ufffdQC\ufffd\ufffd\u062c\t\u0007z^\u9402,0\ufffd=I\ufffdY%\ufffd\ufffd\ufffd\ufffd\ufffd\u0018\u0004l\ufffd\u0004N\ufffd\"'\ufffd\ufffdM\ufffd\u0013d\ufffdE\u01dd\ufffdFv~{\ufffd\ufffdx\ufffd\u05fe\ufffdLb\u001f\ufffd$e\ufffdR4\u00162\ufffdx\ufffd\u00a9\ufffd\ufffd\ufffdp\u0006\u0390)\ufffdc\ufffdf\u0011\ufffdy\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0545\ufffd\ufffd\ufffd\u007fM\ufffd\ufffd1\u000e}\ufffd\u037c\ufffdz\ufffd\ufffdF\ufffd<x\u0006\ufffd\u001e\ufffd~\u0199\ufffd\ufffd\ufffdrS\b\ufffd\ufffdk@gfBEK;\ufffd\ufffd\ufffd0\u0000\u0000\ufffd\u0000\u0000\u0004cA\ufffdsE\u0015,+\ufffd\u0000\u0000\u0003\u00008\ufffd:\ufffd\u0200\ufffd\ufffd\ufffd|\ufffd\u007f\u000f\u001e\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdF\u001ev\ufffd\u0019\u001c\ufffd$\ufffdI&|\ufffd[~\ufffd#\ufffd\ufffd\u05d0\u0003\ufffd5p}9\ufffd+v\ufffd\b\ufffdilG6\ufffd\ufffd\ufffd\u031b\ufffd\ufffd\ufffd\ufffdE\u001b\ufffd5\ufffdt\ufffd\ufffd\ufffd}\u0002S\ufffdfb\ufffd\u001d\ufffdwF7\u001a;B\ufffd\ufffd\u001e?\u0262\u0790\ufffd\ufffd\ufffdp\ufffd\n\ufffdGf\ufffd\\W\ufffd\ufffd;N?\u001cC\ufffd\u001e\ufffdN\ufffd\ufffd\ufffd\ufffd\u0007\r\n\ufffd\"\t.\ufffdig\ufffdX\ufffd\tP\ufffde\ufffd\ufffd\ufffd\\\ufffd5\ufffd\ufffdP4\u0014\ufffd5Tj\ufffdN\ufffd\ufffd\\\ufffdB\ufffd1 u\ufffd\u001a5\ufffd7\u001b\ufffd\u0015|\ufffd\ufffd#rR\ufffd\ufffd\ufb32_\f\u0017M-?\ufffdA\u007f\ufffd\ufffdku\ufffd\ufffd\ufffdc\u05c6\ufffdb\ufffd\ufffdIa\ufffdb'\ufffd{\ufffdt1\ufffd-\u0011t\ufffd\ufffdSz\ufffd=\ufffdN\u0003\ufffd\ufffd\u0002\ufffd8\u039d}E@\ufffde\ufffd\ufffd\u0019s\ufffd\u011e\ufffd\u001c\u04a1k*b\u0001\u0004\ufffdc:vo\ufffd\ufffdlR\ufffd(\ufffd9Wa\u04de\u0001\ufffd\ufffdk\ufffd\ufffd\ufffdz\ufffd\ufffd\ufffdzg\u001a\u001b\ufffdNE]\ufffd\u0012*8\ufffd\ufffd\u0353Og\u0013\rV\ufffd\u0011v6\ufffd\ufffd\ufffd\ufffd\ufffd\u0005\ufffdl\u000e\ufffd\ufffd>\ufffd\ufffd\u01366wcp\u06e1\ufffd,\ufffd\ufffd\ufffdd\ufffdC\u0018\ufffd\ufffd\ufffd5\t\u0018\ufffdE\ufffd\u0345+&^\u0005\u048e\ufffd}bh\u000f\ufffd\ufffd\ufffd\u000b\ufffd\ufffd\ufffd\ufffdE@\ufffd\ufffdQ]\u0016\u06afB\ufffd\r\ufffd\ufffd-\u0004\ufffd\ufffd\ufffd\ufffd96\ufffd\u0015\ufffdm\ufffd\ufffd\u001e\ufffdZV\ufffd`\ufffd$\ufffd\u03ee\ufffd\ufffd`Q=\ufffd\ufffd\ufffd\u0013U]\ufffd\u001d1X\u0002^\ufffdsfE\ufffd\ufffd\ufffd\u0018\ufffdP\u0017\ufffd\ufffd\u0010\ufffd5\ufffd\ufffd\ufffdA\u0005D\ufffd\u0017\ufffd@8\ufffd\b\ufffd\n\bXewv\u0019!0\ua264\ufffd\u001a\ufffdy<t\u0019\ufffdC/2\u0010\u0002Au\ufffdZ\ufffd\ufffdJ\ufffd\ufffd\ufffdR\ufffd\ufffd%\ufffdzh^G\u001e\ufffd\u0627\ufffd7m\ufffd'wq\ufffd\ufffd\ufffd\u0010\tZ\ufffd-\ufffd\u0015\u0007\ufffd~\u007fVdN\ufffd,\u001313\ufffd\ufffdi\ufffd\u057f\ufffdYd\ufffd\ufffd\ufffd\ufffd\f$h\u00a9\ufffd\u04a2\ufffd7\u0018\ufffd-\ufffdn\ufffd\ufffd3\ufffd\ufffd\ufffd<_ \ufffdq\\D\ufffd\ufffd[z\ufffd\ufffd*\ufffd\u001a)\ufffdK\u001f\u0011\u001b\ufffd\u001d\u060b\ufffdm\ufffd\u0000\u0011\ufffd$\ufffd\ufffdw\u001aV\ufffd\ufffd\ufffd\ufffd@\ufffd\u0010\u0012A\ufffd+\ufffd6r!E\ufffd\ufffd\ufffd\r\t\ufffd\u0091s\ufffd\ufffd\u0014\ufffd\ufffdjc\u001b0\ufffd\ufffd\ufffd\ufffd\u06da[\u0015_u\ufffd:h\ufffd\u0409\u0002\ufffd\ufffd\ufffd\ufffdC\ufffd\u007f\u0002^\ufffd\ufffd^&G}e\ufffdqf\ufffd\ufffd7L?)\ufffd{\ufffd<Cz\ufffd\ufffds\ufffdE\t\ufffd\ufffd\u00185Z\ufffd%\ufffd\ufffd\ufffd\u02445\ufffd\u0001N\ufffdu\ufffd\ufffdy\u000b#\ufffdeh\ufffdq\ufffd\u07ec\ufffd\ufffd\ufffd#\u0151+\ufffd\ufffd=]\ufffd\ufffd:\t\u0017\ufffd\ufffd\ufffd\u0019\ufffd\u000b?\ufffd\ufffdor\ufffd<\ufffdGV\ufffdT\u001f\ufffd:m\ufffd)\ufffd\ufffd\ufffdP\ufffd\ufffd\ufffd7\ufffdb\ufffdH\ufffd8\ufffd\\\ufffd\u07af\u0019\u0017\u8a35V\"\u00c3\ufffd\ufffdBu\ufffdgjC\ufffd\u001f\ufffd\ufffd/\ufffd\ufffdp\u0003H\ufffd\ufffdf\ufffd_\ufffd\ufffd\u0013\ufffdv\ufffdJ\nj\u000fL\ufffd\u0017\ufffd\ufffd\ufffdU1\ufffd\u0349\ufffd|Y\u000f\u0002\ufffd\ufffd\u0013\ufffde36#p.U\ufffdy\ufffd\ufffdG\ufffdl\ufffd\u0001\ufffd\ufffd#\ufffd<\ufffdM\ufffd\ufffd3\ufffd7\ufffd\ufffd\ufffd\u001bF\ufffd\ufffd\ufffdr\ufffd|\ufffd\ufffd\ufffd\ufffd\ucbd1\u0206\\\ufffdOo|\ufffdY\ufffdG\ufffd\ufffd\u0016\ufffd\ufffd\ufffdF\ufffd\u000b.^N\ufffdV\ufffd\\P\ufffd\u0016\ufffd\u000eYU\ufffd?\\\ufffdM}nh.b{\ufffd?\ufffd\u0127~\ufffd/&f\ufffdb\ufffd\ufffd\ufffd\ufffd\u0015>(7\ufffd\u0001C\ufffdW\u0015\ufffd\u001c\ufffd\ufffd*\u001bj\ufffd%\b\ufffd\u001d\ufffd\ufffd\u0013\ufffd\u04af \ufffds_\ufffdf\ufffd\ufffdd\ufffd\u0013_\ufffdNR\ufffd>\ufffd\ufffd\ufffd\u045bt\ufffd3r\ufffd\ufffd_\ufffd\ufffd>\u000bt\u0012E\ufffdwp\ufffd\ufffd\ufffd\ufffd}\ufffd\u076d\ufffdm7\ufffdoY\ufffd`<\u000f'\ufffd\ufffd\u007f\ufffd\ufffd\ufffdZQ\ufffd1\r\u000b\ufffdc\ufffd\ufffd\u0001\u000b\ufffdi\ufffd1[\ufffdB\ufffd\ufffd0\ufffdj\u00100P\ufffd\ufffd'h\ufffd\ufffdD(V\ufffd\u0000\u0000>`\u0000\u0000\u0003m\u0001\ufffd\ufffdtB\ufffd\u0000\u0000\u0003\u0000:\nRD@\ufffd\f\u0448K X\ufffd\u0006=\u0000C9\ufffdj\ufffd\ufffd\ufffd\ufffd+)\u001fFt\ufffd\ufffd\ufffdW\ufffd^\ufffd\ufffdI\ufffdb\ufffd:!\ufffd\ufffdO\u04a2\u001c\ufffdC\ufffd&xg\ufffd\ufffd\ufffd\"\ufffdk\u02c0\u00009(P\u000b\u0014\u032b\ufffd\ufffd\ufffd\ufffd\ufffd\ufffde\ufffd\u0016\ufffd:\ufffdN\u0734R\u001d\ufffd\ufffd\ufffd\ufffd\u001edN\ufffd\ufffda\u0016D<,E5\u0016q\ufffd\u032ak,\ufffd\ufffd\ufffd\u0303\ufffdPop\ufffd\u001d*\ufffd\u072e!\"M:\ufffd%\ufffd\ufffd[\u0000l\ufffdRl\u01ac\u0011\ufffd\ufffd?\u0206\ufffd\u000f'\ufffdRu\ufffd?\u0018\ufffd\u001e\ufffd]\u000e\u0001,\ufffd\ufffd\ufffdC\ufffd\ufffdL\ufffd`\u0004\ufffd\n\ufffd^\ufffd\f{\ufffd!\ufffdK\ufffd\ufffd\ufffd\u0018\ufffd\ufffd9u\ufffd\ufffds\ufffdH[&\ufffdY\ufffdV\ufffd~\u0015\ufffd\ufffd\u001d\ufffd\ufffd\ufffd!\ufffd\ufffd.\ufffd\ufffdh\ufffdg\ufffdF\ufffd@\u0193\ufffd1V\ufffd\u001e\ufffd\u0000\ufffd\ufffdp\t\ufffdK7\u0003\r\ufffdb\ufffd\ufffd\u001a:u\ufffd\u001c\ufffd\ufffd\u001f\u000f\ufffd\u001f\\m\"\ufffd\u000f\ufffd\u001fM\ufffd\ufffd\ufffd\u072d1Q-\ufffdfb8\ufffd\ufffd\ufffdxK\\\u0000\ufffd\ufffd\u0017\ufffdi\u001b##\ufffdN\ufffd\ufffd\ufffd\ufffd\u0012\ufffd\ufffdZ{\ufffdq%\ufffd1\ufffd\ufffd\u0006\ufffd@\ufffd\ufffdU\ufffd\ufffd\u001dF\ufffd\u0002\ufffdTN@\ufffdI9\ufffd\ufffd|\u0000\ufffd%c\ufffd\ufffd;\ufffd\ufffd\ufffd\ufffdg\ufffd\u0005\u0010\ufffd?\ufffdz\ufffd\ufffdU37\u0018\ufffd\ufffd\ufffd+\u001av\ufffd\ufffd\u0003)\u001cb\ufffd1\u0014\u001apgk\ufffdX\ufffd\u0006\ufffd\ufffd\u001a\ufffd3\u0005\ufffd2Y\ufffdc\u0012\ufffdT\ufffd0\fY/aeZe\ufffdK!\ufffd\ufffd\ufffdtW\ufffd{\ufffd\ufffd\ufffd>^\ufffd\u0010\u001f\ufffd\ufffd\u0004\ufffd\ufffd-\ufffd\u000f\ufffd0\ufffdQ\ufffd`\ufffd\ufffdy\ufffd\ufffdf8\ufffd\ufffd5\ufffdK\ufffd\ufffdn\ufffd\ufffd$\u0007E\u0427?\ufffd\ufffd\u0012\ufffd\ufffdL\ufffd/\ufffd\u0015\ufffd\ufffd\r\u001e.\u001f\ufffd\ufffdy\ufffd\ufffdA\ufffd\u0003\ufffdEH\ufffd\ufffd_\ufffd\ufffd]\ufffdrm*\u001a\u0001\ufffdn/p\ufffdf\ufffd\ufffd-\ufffd9\ufffd\ufffd\u01445\ufffdA\ufffd\ufffd\ufffd\u04779\u0004g\ufffd=\ufffd'\ufffd\u001b\ufffdA\ufffd\ufffd>\ufffd\ufffd\ufffdV\ufffd\ufffdV\ufffd>\ufffd\u0003\u0004.F\u0017\ufffdT\t\ufffdX\ufffd47\ufffd\ufffd\t`J+J\ufffd\ufffd\ufffdr\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd6KIuhT\ufffdO\b)\ufffd\u0010\ufffd\u0016m\ub185\ufffd\ufffd\ufffdJ\ufffd\ng\u0002\ufffd\ufffd\ufffd\ufffd\uedab/!\ufffdA\u0012\u0005\ufffdH\ufffd\ufffd9\u0014\ufffd\ufffd\u0015\b\ufffdH\ufffd\ufffd\"n\ufffd\ufffd\ufffd\ufffdx\ufffd.\ufffd\ufffd\ufffd\ufffd=\r\ufffdU\ufffd\ufffd\ufffdr\ufffd\u0013uc\u0015S$0\ufffd]\u0654v\u000f\ufffd\ufffd\u000b\u0006\ufffd\ufffdC%\ufffd\u0000\u0145>\u0446\ufffdQ\ufffd\ufffd\u056d{\ba\u001c\ufffd~\ufffdjE<\ufffd\r\ufffd\ufffd\"X\u0007Z\ufffd\ufffdQ\ufffde\ufffd\ufffd\ufffd\ufffd\ufffd`\b\u05b1\ufffd\ufffd\ufffd\ufffd\u0018\ufffdDp\bWT\ufffd\ufffdxA/\u06b3\ufffd\u0003\ufffd\u0013\ufffd\u0012\u0005\rAn\ufffd\u0014\u0015\ufffdP\ufffd*\ufffd\ufffd\ufffdP1d\ufffd\ufffd\u001e=`B~\ufffd\ufffdX\ufffdS\ufffd\ufffd\ufffd%\ufffdZ\ufffdz^\ufffd\ufffd\ufffd'\ufffd\u001b\u0014U\ufffd\ufffd\ufffd\u001e\ufffd\ufffd\ufffd<G\u0001o\u060boN\u0004\ufffd\u000b\ufffdt\ufffd[O\ufffdV\ufffd\ufffdM\ufffd\ufffdj\t~\ufffd-\ufffd\ufffd\u001d\u04ea4iF\u0210\u0016\ufffd\u01429g\ufffdtu8p\u0000\u0000\u0003\u0001[\u0000\u0000\u0002\ufffd\u0001\ufffd\ufffdjB\ufffd\u0000\u0000\u0003\u0000\u0010\ufffd\t\ufffdjL\ufffdo+\r8\ufffd\ufffdn\ufffd\u0000\ufffd\u0019q\ufffdZF\u02587\ufffd\u0006\ufffd\ufffd\ufffdd\ufffdj7.t@r}Sdiq\u000eT\u0007&\u00190\ufffdB\ufffd\ufffd\n\u0000&\ufffd\ufffd\ufffdRY`\u0000\u0000\u00058\u0000\u0000'\ufffdUJt\ufffd\u0000*ne{\u21a7\ufffd]\ufffd_\ufffd\ufffd[R\ufffd\ufffd\ufffdMH\ufffd\u0000\ufffdb\ufffd\u0017\ufffd\ufffd8\u01e0\u31c05}\u0007\ufffd\u0001A\u0004>\ufffd\ufffd\ufffdaV\ufffd\ufffd\ufffd\ufffd\t\ufffd(\ufffd\ufffd\"\ufffd\ufffd\u001ejAc\u000bP\ufffd\ufffd\ufffdWK\ufffdK\ufffd9\ufffd3\ufffd\ufffd\u064cv\r\ufffd<\ufffd\ufffdM91\ufffd\ufffd\ufffdCa\ufffd6\u02cbV\ufffd\ufffdY\\\u0005\ufffd\ufffd=\u0015Y\u0725n\u0006U\ufffd\ufffd\ufffda\u001e\ufffd`\u0019\r\ufffd\u001e\u0004y\ufffd~\ufffd\ufffd\ufffd\ufffdDE\ufffd\ufffd\ufffd\ufffd)\ufffd9\ufffd\ufffd\ufffd\ufffd;V`\ufffdF\ufffdl\u00170\ufffd\ufffdei\ufffd\ufffd3\ufffdt\ufffd\ufffd:\ufffd\u000fPot\ufffd\ufffd\ufffdQh\ufffd\ufffd\ufffd'S\ufffd\u0007VM\u0005R\ufffd>\n\ufffd\ufffd\ufffd\u000e\ufffd\u05dc\u001b\\\ufffd~\ufffd\u0002\ufffdv\ufffd^\ufffd\u0003\ufffd\u0017\ufffd\ufffd?\ufffd\ufffd3\ufffd\ufffd\ufffde\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdZo<\u01fay/\ufffd\ufffd\u05b7\ufffd(k\ufffd9\ufffd\ufffd\u0010\u05506J\u0011:7\uf05al#\ufffdg\ufffdx\u02e6V\ufffd\ufffd^\u0019\rZ\u0001\ufffd\u007f-\ufffd\u001e\f\ufffd\u001d\ufffdD\u0002\ufffdF.\ufffd\ufffd\ufffd6\ufffd%nf\ufffd\ufffd\\*+G(YZ=\ufffd\ufffd\ufffd\u02ce\ufffd\u20d8\u001b \u0015\u0005\ufffdHA\\K\ufffd\ufffd j\ufffd\ufffd\u013d\u0011g\ufffd\ufffd\ufffd\u0002\u0494\ufffd2\ufffd)\u010a\ufffd\ufffd\ufffdr\u06d8:\ufffd\ufffdM\ufffd\ufffd\ufffd.\u0006%\u001e-{\ufffd\ufffd<\u0003\u074e\u0007\u0386\ufffd\u0297\ufffd\ufffd\u027d*\ufffd\ufffdq\ufffd\ufffd!\ufffd\ufffd\u0013dr:\ufffd\ufffd\ufffd\f\ufffdl\ufffd\u0003\ufffd\ufffde\ufffd\fE\ufffdaT\ufffd_\u001cY\ufffd.\ufffd\u0670\ufffd3\ufffd\u0019\u0013\ufffd.\ufffdF\ufffd\t\ufffd\ufffd\ufffd\ufffd\ufffd\uec63p=\ufffd\ufffd!\ufffd\ufffdm\ufffd8L\ufffd\ufffd\ufffd\u001c\ufffd \ufffd\u010bT\ufffd\ufffdk\ufffd9R\ufffd\ufffd\u0012\ufffdc2\u0003\ufffd$~\u001c\ufffdt\ufffd<\ufffd\u0012\ufffdcpw\ufffd?\ufffd\ufffdYQ\ufffd~\ufffd\ufffd9V\u001f\ufffd;Fe\n\ufffd=\u0132\ufffd\ufffd\ufffd`\ufffd\ufffde\ufffd\u000e%\ufffdp\u023a2\ufffd?\ufffdL\ufffdC\u007fwf\ufffdl\ufffdH\ufffd\ufffd\ufffd'\ufffd;E\ufffd\ufffdswx\u0000\ufffd A\ufffdk\udbb5\ude3f&\ufffd\ufffd\u001di\ufffd\ufffd\\\u0018\ufffd3i\"1N\ufffd\ufffd\u0005\u001f6\ufffd\ufffd\u0001\ufffd\ufffd\ufffd\u001b\ufffd\ufffd\ufffd`\ufffd\ufffd\ufffdx\r\u038aU\u0005M\ufffdI\ufffdLx\ufffdz\ufffdn\u0000\u0012\ufffd\ufffdn\u0011H\ufffd\ufffd\ufffd`\ufffd\ufffd/R\ufffd\u0000\b9\u0000\u0000\u0007\ufffdA\ufffd\ufffdI\ufffdAl\ufffdL\bw\ufffd\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000\u0000\ufffdz\ufffd.4\ufffd\ufffd\u0005y\ufffd\ufffd@\u0007u\ufffd-\ufffd\ufffd\ufffdgW(\ufffd1\u0015\u0006\u001c-\ufffd\ufffd_\ufffd\u0574)N\ufffd%Y\ufffd\ufffdj\u0010\b\ufffd\ufffd\ufffdt\u0006\ufffd:Y\b?}\ufffd\ufffd\n1c`\u0010k\ufffd\ufffd\u001a\ufffd\ufffd\ufffdB$t\ufffd\ufffd\ufffd]p\ufffd\u000e\ufffdKU\ufffd:\ufffd\ufffd\ufffd\u000b\ufffd\ufffd\ufffd\ufffd\b\ufffd\ufffdJ\ufffd\ufffd^\u007f\ufffdh\u0004\ufffdg\ufffd\ufffdXz\ufffd\\\u0010\ufffdTs\ufffd\ufffd<\u0014\u0311\u0017c\ufffd\u06b3/\ufffd\t;(\ufffd0g\tr\ufffd\u0537\ufffd`\ufffd\ufffd<\ufffd\ufffd\ufffdu\u0017\ufffd\u033aN\u0017\u001d\u6b80\u0018\ufffd\ufffd\u001d\u0006\u0018.\ufffd\u0005\ufffd\ufffdK\ufffd\u0015/\ufffd\ufffd\ufffd\ufffd8\ufffd\ufffd\u0000\ufffd\ufffdO@,r%\ufffd\ufffd\n\ufffd\u001b\ufffd%\ufffd4c\u000e\ufffd\ufffdck@<\ufffd\ufffdL\ufffd\u0011\ufffd/\ufffd\u0722\ufffd_F\ufffd\ufffdB\ufffd;\ufffd\ufffd\ufffd~!\ufffd\ufffd\ufffd\ufffd3\u007f\ufffd\u0127\ufffdN\u0002i\ufffd\ufffd\u0010|\ufffd\u06a9\ufffd\ufffdq\ufffd\u000bDr\ufffd\ufffd\u0007\ufffd\ufffd\ufffd M\ufffd39\u07e6C\ufffd\ufffdQ\ufffd\ufffd\ufffd\ufffdu\ufffd{\ufffd\ufffd\u007f\ufffd#6hN\ufffd\ufffd\u0016!6ir\u007f\ufffd\u0013&\ufffd\ufffd\ufffd\ufffdtNCb:\ufffd\ufffd^\ufffd\ufffd\f\ufffd\u6b05ds\ufffd\u0018\ufffd\ufffdy\ufffd;c\ufffd\r\ufffd\ufffd\u001aq\ufffdJ\ufffd!\u0011QfA\u0014\ufffd\u0013\ufffd\ufffd\ufffdB\u07bb}\u0566\ufffd'\ufffd}\u031d\ufffd\u001d\ufffd\u8e4a\u0379\u0013?\u0018\ufffd\ufffdLL\ufffd\ufffdw\ufffd\u0004\ufffdp\ufffde\ufffd\u0000\ufffdy\ufffd\ufffdSQa\ufffd\ufffd\ufffd\u0006\u0003\ufffdK\ufffd\ufffdA\ufffd\u0319[j)p}t\ufffd\ufffd2\ufffdI\u001f\u0017\ufffd\ufffdn\ufffdj\ufffd\u0012\ufffd\ufffdL\ufffd\ufffdH\ufffd\u0014=\ufffd\ufffd=\ufffd\ufffd\ufffd\u0013N\u000ez\u0012\ufffd\t\ufffd\ufffd\ufffd\ufffd5\ufffd\ufffd\u001aw\ufffdt^\ufffd\ufffd\ufffdV\ufffdLY\ufffd\ufffd\u007f\ufffd\ufffd&\ufffd \ufffd\ufffdEZ\ufffd\t\ufffd\u0011\ufffd\u0010\ufffdq\ufffd\u001e\ufffd\ufffde\ufffd\u001c\ufffdhr\ufffd\ufffdj\ufffd\ufffd,}\ufffd\ufffd+\ufffdB\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdf~\ufffdP\ufffd+n\ufffdt\ufffd\u0011{xl\u0019\ufffd{\u001a~g\u07cf:du\ufffd\ufffd\ufffd\u0012\ufffd\u0007\ufffd\u001cd\\\ufffdz\ufffdg;\ufffd(O\ufffd\"o<\ufffd]\ufffd%}\ufffdB\u0017fVq\ufffdhy\ufffd\ufffd;\ufffd-\ufffd6[\ufffd\u0019\u0130\ufffd:\ufffd4\ufffd\ufffd\ufffd\u0005/\ufffd\u007fm\ufffd\u000b\u001aEw\ufffd\u0000H\u001a\ufffd\ufffdn\ufffdr\ufffd7\ufffdW&W\ufffd\ufffd\u0010@}DU\ufffdy\ufffdN\ufffd\u000ez\ufffd\ufffd\u0011\u00b3v\u007f\ufffd.\ufffd)\ufffd<\ufffdPC\ufffd!\u007fcEmX6j\ufffdQ\ufffdE\u001f\ufffd*?\u0011p\"\ufffd!\u061a3\u0019i\ufffd\ufffd-\f\ufffd\ufffd\u0016\ufffd\ufffd\ufffd\ufffds\ufffdi\ufffd\ufffdZ\ufffdW\f|\ufffd\ufffd\ufffd\ufffd\n2\ufffd\ufffd\ufffd\ufffd\u0007n\ufffd\ufffd\ufffdkY\u0014\ufffd\ufffd-/\ufffd\u0002\ufffd(\u0537\ufffd,\ufffd\u01d5\ufffd\ufffd=\u0003k\ufffd\ufffd\ufffd \\\ufffd\ufffdp\ufffd\ufffd\ufffdDvn\u0017\u001b\ufffd|A\ufffd\ufffd\u0005$\ufffd8\ufffd~\ufffd\u0011\ufffd-$\ufffd_\ufffd\u075d\ufffd]) \u0003el\ufffd\u001a\ufffd\ufffd\u0127*\ufffd\r\ufffd\ufffd\ufffd\u0013\ufffdc@[\u0018NL\ufffd\u0018\ufffd\ufffd\ufffd=-\ufffd=\ufffd\u00047F\ud83d\udf16\ufffd\ufffd\u0005\u0001\f~{\ufffd\ufffd\n\ufffdI[\t/]\ufffd\ufffdDwf\u072f\ufffd\u007f\ufffd\ufffd\ufffd\u001a\ufffds\u000fy\ufffdx\ufffd\ufffd\ufffd\ufffdt.\f\ufffd\ufffd+F\ufffdh):\ufffd\u02657\ufffd\u001dNO^\ufffd\u00039\ufffd(\ufffd\ufffd\b\ufffdJ\ufffdsl\ufffd\ufffd\u0019F\u067f5\ufffd\ufffd_\ufffd\u0019k\ufffd!.\ufffd?|\ufffd\u0001#\ufffd\u001f\ufffd\u07ded\ufffd\ufffdU\ufffdT7) YD=l\ufffd\ufffd\ufffd\ufffd\ufffd?\u0002\u000b\"8\u001712\u0130i\u66f8EZ\u0521\ufffd\ufffdC&\u001b\u001a[\ufffdm\ufffd4\ufffd\ufffdF dv\u001d\ufffd3eb\ufffd\u0010\ufffdi\u0003?\ufffd\u06c23\ufffd\u001d6\ufffdw\ufffd\ufffd\ufffde\ufffd\ufffdjj\ufffd\ufffdkx\ufffd~\ufffdM#\ufffd\ufffdS\ufffd)\ufffd2a\u001d\ufffd\u0015\ufffd\" \ufffd\ufffd\ufffd\ufffdv!\ufffd\u0017z}\ufffd\ufffd\ufffd\ufffdbT\u0006q\ufffd\ufffdG\ufffdg\u0006a\ufffd\ufffdU7\ufffdu\u0416\"s\ufffd\ufffd`_\ufffdU\ufffd;\ufffd\n\ufffd\u007f\ufffd\ufffd9\u0000Gb\ufffdA\ufffd%\ufffd\ufffd\ufffd\u0012\ufffd\ufffdA*\ufffd\u0015\u0014\ufffd\ufffd\ufffdu\ufffd\ufffdj\r\ufffd\u001c\u0001>\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdXL\ufffd\ufffd\ufffd\u0014\ufffd\ufffd\ufffdl\ufffd\ufffd\ufffd\ufffd\nz\u000e\u0003\ufffd-\u0005uDq\ufffd\ufffd\ufffdTh\ufffdX~_zB*{\ufffd\ufffd(\u0016\ufffd\ufffdS{Gnd\ufffd\ufffd\ufffd\ufffd[T\u0001\ufffd\u0015\ufffd&l\ufffd\ufffd4\ufffdd\ufffd\u0010\ufffd\ufffd\ufffd\ufffd\ufffd\t$ \ufffd\u027b\\lZ\ufffd\ufffd\ufffd\u0005\ufffd\ufffd<u\ufffd\ufffd\ufffdM\ufffdgFS0\ufffd\u0012F\ufffd\ufffd(\u0018!M\ufffd\ufffd/\u0012\ufffd\ufffd\ufffd7\ufffd\uae8b\ufffdqe\u001ao5\u0019\ufffd\ufffd\ufffd\ufffd\ufffd;\ufffdXe\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd]\u06d2s|\ufffd\u00b4\ufffd\u0002\ufffd\ufffd\ufffd\u0000 \ufffd\ufffd\ufffd_\ufffd7\ufffd\u000b\u0292\ufffd0\ufffd\r\ufffd\u0018\u0001\ufffd\ufffd[\ufffd\u000e\ufffdx\ufffd\ufffd%\ufffd\ufffdRL\u0017\u0381\ufffd\u0011E\u0005\ufffds\ufffd\ufffdn\ufffd\ufffd?\ufffd\u000e\ufffd4\ufffd\ufffd\f\r\ufffd\r\u001c\ufffd\ufffd\ufffd0\ufffdC\ufffdw\u0006\u001f\u00132x\ufffd\ufffds\ufffd\ufffd?\ufffd\ufffdL\ufffdE\b\ufffd\ufffd:\n\ufffd\ufffd\u03a8\ufffd\ufffd\ufffd\ufffd\u001d\ufffd\u0006\ufffdb\ufffdi\ufffd\ufffd\ufffd\ufffdin\ufffd\ufffd\u000b\ufffd\ufffd\ufffd\u001f\ufffd\ufffd\ufffd\ufffd\ufffd\u06bb\ufffd\ufffdW\u00c6 \u0017M9\ufffd&B\ufffd\ufffd\ufffd\t\ufffd\u000b+\u0004\ufffd\ufffd' O\u0014\ufffd\ufffd\ufffd\ufffd\u0018\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0007PP~\ufffdA\ufffd(i\u0006\ufffd\ufffd\u0004;\u0011*\ufffd\u0018\ufffdp\ufffd\u0015+ss\ufffd?`\u0007v\u0007%\ufffd\u000f(\ufffd\ufffd \ufffd\ufffdCb\u03b8\ufffd\u001fp/>\ufffd\ufffd\u0012\u0006\u001aP\ufffdm\ufffd\ufffd\u075a\ufffd\ufffd5\u00048\ufffd\u001b\u048a?\u0000\ufffdT\ufffd\ufffd/\ufffd{\\\ufffd,\ufffd\ufffd\ufffdr\ufffds\u001f\ufffd\u001d\rB\ufffd\ufffd\u0006P\ufffd\ufffd\u0265\ufffd\ufffd\ufffd\ufffd\ufffd/\ufffd\u0003\\\\*1=\ufffd\u0010\ufffd\ufffds\ufffd\"+\ufffd\ufffd\ufffd\ufffd\u001dm\u001d'\ufffdR\ufffd\u0012HL<\ufffd>\ufffd\u0014\ufffd\ufffd>\ufffd;\ufffd8\ufffd\ufffdh\u0011R\u0017\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd,Z\ufffd\ufffdOi\ufffd\ufffd\ufffd\u0015-\u0000\u0010\ufffd\ufffd\ufffd\u0011\\\t{\ufffd\u0002\ufffd\ufffdY\u000eJ\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd>\u001cb.%N\ufffd\ufffd\ufffdrh^i3\rG\u001c\u0016:\ufffd\ufffd\u6b3d!@\ufffd\u0005\ufffd\u001bh\ufffd\ufffd\ufffd\ufffdas\u001fxW\ufffdi\ufffd\ufffdC6*U\u01e6\ufffdB6)\ufffd\u0016v\u0017'xM\ufffd\ufffd\ufffd6\ufffdiIwB\ufffd\ufffd\ufffdk\ufffd\u0000\ufffdw\ufffd\u0014D\ufffd\ufffd\u0011\u05aa\ufffd\"\ufffd\ufffdP6\u0007\ufffd\u0011\ufffd\ufffd\ufffd\ufffd\u0006k\ufffd%\u0001\ufffd\ufffd\u0004X`\u015b\ufffd\ufffd7\ufffd\ufffd*\u0448\ufffd\ufffd4\u0018\"\ufffd0\u06a5\ufffd\ufffdO\ufffd7\ufffd\ufffdH\ufffd\ufffdD\ufffd\ufffd\u001ai\ufffdK\ufffd\u0010Y\ufffd(\u0010\ufffd\u001b\u03e3\ufffd\ufffd=K\ufffd.e2\ufffd5\ufffd/S\ufffd\ufffd\ufffd%^\f\ufffdOXM\u0001 \ufffd\u0018C\u001aP\u0002Y\ufffd\ufffd\ufffdm\ufffd\ufffd<\ufffd\ufffdv\u0003qND\ufffd\ufffd\ufffdP\ufffd}\u0019~\ufffd\ufffd\u05e2\u001e\ufffd\u01420\ufffd\ufffd\u0004\ufffd\ufffdT\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\u0001'\ufffd\ufffd\u000fn\b\ufffd\ufffde\ufffd\ufffd}R\u001d\ufffdl\ufffd\u000b\ufffd*(\ufffd\ufffd'x{<\ufffd*w(\u0000\u0000\u0003&A\ufffd\ufffdE\u0015,+\ufffd\u0000\u0000\u0003\u0000\u0001P\ufffdc\ufffd\u014e\ufffd\ufffd\ufffd\u001b\ufffd\u001dp\ufffd\ufffd\ufffdl+c\u001d\ufffd\u06ee4\u0003\ufffd\u0000{\u00124)S\ufffd\ufffdVXW\u0481\ufffd?B\ufffd\ufffd\u0011\ufffd\ufffdi\ufffd\u0001\u0007\ufffd\ufffd\n}t[\u1d95\ufffd\ufffd@\ufffd\u06cej\ufffdre$LU\ufffdR}<\u0002t)\ufffd3\ufffd\u0016h\ufffd\ufffd\ufffd\ufffdq\ufffd'{\ufffd\ufffd]\u001c\ufffd\ufffdm\ufffd|\ufffdO\u0346\ufffd\u0011\ufffd\ufffd\ufffd\ufffd\u00ac\ufffd\"\ufffdL\ufffd$y#5\u001d\ufffd\u000ez\u0581\ufffdR\ufffd\ufffd\b5\ufffd\ufffd\u001e\ufffd\ufffd\u0453y\ufffd\ufffdE5\ufffd]\ufffd+z\u7124b\u000f\ufffd\ufffd\u0114\ufffd\ufffd&\ufffd\ufffd\u044cW\f,\ufffdc4\r\ufffd\ufffd\u05fa\ufffd'Pp\u0004\u0001\n\ufffd\ufffd[1\ufffdJ\ufffdF\ufffd\ufffdv5)\ufffd\ufffd-\t\ufffd*&/\ufffd\ufffd\ufffdR\u0349\ufffd\ufffdP\u0000\ufffd\ufffdr\ufffd\ufffd\ufffd\ufffd\ufffdRX\t\ufffd\ufffd\u000f\ufffdK%H\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdpT\\-\ufffdP\u0016a\u0452\u0015\ufffd\ufffd\ufffd_F\u0010\ufffd\u000fwWh\f\ufffd\u025c\ufffdd\ufffd}#\ufffd\ufffd~b\ufffd\ufffd\ufffd\ufffd`\ufffd\ufffdg\"g@\ufffd\u001ej\ufffd\ufffdZxo\ufffdl\ufffdqCyh\u0316\ufffd#\ufffd+w}Bv\ufffd\u0011\ufffd\ufffd\ufffdRv\ufffd;b\ufffd\ufffd\u000b]\ufffd\ufffd~>\ufffd0\u0001\u0121\u06b8\ufffd6\ufffdC\u0006\u0017\ufffd\\\u0011\ufffd\ufffd^\ufffd\ufffde\u05b0\\@\ufffd\ufffd\ufffd=\u0272\ufffd\ufffdp\ufffd\ufffd\ufffd.\ufffd\u001d\ufffd`\u061an$S\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdp\ufffdkP\ufffd\ufffd\ufffd\ufffd\u0003\ufffd/`\ufffdheK\ufffd\ufffd\ufffd\u001fD\u0017\u0014+\ufffd:\n\ufffd\ufffd\ufffd\u0176\ufffd\ufffd52\ufffd\ufffd\u0006\ufffd>\u079e\ufffd'\ufffd>\ufffd\u00191$\ufffd!\ufffdK\n\ufffdc/x\ufffd\r\ufffd\ufffdE^\u0003\ufffd\ufffd\u0647Q\u001bC/\ufffd\ufffd\ufffd0\ufffd\ufffd\ufffd\ufffd\ufffd4E\ufffdj\ufffd\u001d\ufffd\ufffduF\u0018fb\u000b6!\ufffd\ufffd\ufffd'\ufffd\ufffd\\\u000bB\ufffd\ufffd\ufffdd\u0015\ufffd\ufffd\u054e\u001b<o\u0002L\u0019\ufffd\ufffd\ufffd\u05d4\ufffd\u0006\ufffdg\ufffd\ufffd\ufffd\ufffdc\ufffdk\ufffdP\ufffd\ufffdG\ufffde\ufffd\ufffd\ufffd\ufffd\ufffdt\ufffd\ufffdx\ufffd0\u001e\ufffd%\"\ufffd\ufffd33\u0005\u04aa2\ufffd\u0005\ufffd\ufffdZV\ufffd+8\\\u00111gmR*! \ufffdD9~+5I\ufffd\ufffd 1\u0017\u0016\ufffd'\ufffd7\t\ufffda\ufffd\ufffd\u0007\u007fJ\ufffd~\ufffd\u0000q\u0017g\ufffd\t\u07df&<\ufffd,\u0005\ufffd\ufffd\ufffd\ufffd0o\ufffd\ufffdO\u0288@\ufffd\ufffd\u0012\ufffdoG\u000e|ym\ufffd[\ufffd9\ufffd\u001e\ufffd\ufffd\u0013\ufffd\ufffd[\ufffdl\u0017\u0010\ufffdc\ufffd\ufffd\ufffd#r^\ufffd\ufffd\ufffd\ufffd\u00f03&\u001c(n\ufffd\ufffd_'\u0016\ufffd\ufffd\u001a\u0002\ufffd\ufffd\ufffd\u000e\ufffd\ufffdD\ufffd\ufffdG\ufffd\u079a\ufffdS\ufffd\ufffd#\u000b\ufffd\ufffd\u0013\u01dfkGDj\ufffd\ufffd\ufffd\ufffd\u0369\ufffd\ufffd\ufffd\ufffd\u000esE[Eo\ufffd\ufffd\ufffd\ufffd\ufffd\f\ufffd\ufffdPb{\ufffdw\f\ufffd\ufffd\ufffd\u0000b\ufffdb\ufffdv\ufffd\ufffd\ufffd0g0\ufffdv+c\u0015\u0005\ufffd\ufffd\u0013\ufffdsX\ufffd\ufffd\u0019\ufffd3@?\ufffd\ufffd\ufffd\ufffdKd\u0000eA\u0000\u0000\u0002\ufffd\u0001\ufffd\ufffdjB\ufffd\u0000\u0000\u0003\u0000\u0001P\ufffd\ufffd\u0015]\ufffd#\ufffd\ufffd0y\u0000&\ufffd>\t\ufffd(\ufffd\ufffd\ufffd\ufffd\ufffd\u0746\u0016\ufffd\u001e\ufffd\ufffd;\ufffd\ufffd\ufffd\ufffd,L1\ufffd\"z\ufffdr\ufffd\ufffd\ufffd\ufffdt\ufffd?\r\ufffd\ufffdSn!\ufffd\u001bZ\ufffd\ufffd\u0015\u0661\ufffd\ufffdb\ufffdw\ufffd\ufffd\ufffd\u0015a\ufffdH\ufffdk\ufffd\ufffd8\u001e\ufffdE\ufffd\ufffd\u0011\ufffdod\ufffd\u0282vE\ufffdH\ufffdY\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd0\ufffd\ufffdP\u000e\ufffd&e\u04f5E\u001b\ufffd\ufffd\u001e\ufffd\ufffds:\ufffd\ufffd\ufffd\ufffd\u0012_(\u001bp\ufffd%\ufffd\ufffd-\u0018%\ufffd\ufffdF\ufffd\ufffdc@V\ufffd\ufffd\ufffd\ufffdV3\ufffd\ufffd\ufffd\ufffd\u001a\ufffd\b\ufffd\ufffd@\ufffd0\ufffd\ufffd,\ufffd\u0010aA\u0007z\ufffdv)\u00148\ufffdK\ufffdxX\ufffd\ufffd\u000b4\ufffd\uc340\n\ufffd\ufffd8\ufffdKV~)\ufffdOz%\ufffdX\u04b4\ufffd2wzO\ufffd\ufffd\u0006\ufffd\b:=2\ufffd\ufffdJ/\ufffd/T\ufffddt\ufffd\ufffdN\ufffd\ufffd\ufffd8\u0012\ufffdV*\ufffdf\u0013\u03b2\ufffdh\ufffd\ufffd\ufffd7\ufffd\ufffd\ufffd#L\ufffd\ufffd\u001d,\u0007\ufffd\ufffdz\u001e\ufffd\ufffd\r\ufffd\ufffd \ufffdY$\u0005?U\u0018\ufffdu\u0007\u0015bLo\ufffd\ufffd\ufffdy\u0003\ufffd\"\ufffdJ.\u0565-\ufffdt\ufffd\ufffdo\ufffd\ufffds\u001f\ufffd\ufffd\ufffd\r\ufffd\ufffd\ufffd\u000e~^\ufffd\ufffd\ufffdM\u029a@\ufffd\u0002{\u0004`\ufffd]e7\ufffd1\ufffd\ufffd\r\u0011\ufffdY\u0015\ufffd=N?\ufffdx\ufffd\ufffdp\u0000\ufffdO\ufffdr\ufffd\\\ufffd|\ufffd\ufffd\ufffd>\ufffd\u001d)c\ufffd\ufffdn^\ufffd\ufffd\ufffdtk\ufffd+\ufffd\ufffd(/\ufffd\ufffd\u0002|\ufffd+\u00067\ufffdsB\ufffd\u0015\ufffd\ufffd{1\ufffd\ufffd\u0015\u0016\ufffda\u0016\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd6O\ufffd\ufffdd\ufffdnA.\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0017*\uada5\ufffd\ufffd*5\ufffdY8\ufffdg\u0000\ufffd\ufffd\u001fa\ufffd\u001f\u00169\ufffd\ufffd\ufffd\ufffd\ued44R$\b\ufffd\u0015j\u0013\u06c7{\ufffd\u001cw,\ufffd0\ufffd0\b\ufffd\ufffdxf\b<\ufffd\ufffd\u001f\ufffd_\ufffd\ufffd5\u001b\ufffd\ufffdXy|\ufffd\bn\ufffd\u0000\ufffdf\ufffd\u001e;z\n\ufffd\ufffd\r2\u0006\ufffdU\\\u0001@\ufffd=\ufffd\ufffd\ufffd\u000f7\ufffd\ufffd`i\ufffd7\ufffd\u0018\"+U\ufffd\ufffdP]\ufffd\ufffd\u0241\ufffdi\u0019\ufffdgk\ufffd\ufffd\udbcd\ude78\u001a\u0004\ufffd\ufffd\u0002\ufffd63]3\u00d6r3\ufffd\b\be\ufffd\ufffdW\ufffd\ufffdY\ufffdQ\u0120\t\u0001\u001d<\ufffd\ufffdl\u0011\u0016\ufffd\ufffd\ufffd\u00f0\u0005\u024a\u0015L\u0000\u0012CRC\u000b\ufffd\ufffd\u0011N\ufffdyv\ufffd\u0000\u007f\ufffd\u0000\u0000\u0007\ufffdA\ufffd\ufffdI\ufffdAl\ufffdL\bw\ufffd\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000\u0001\ufffd\ufffd\ufffd\u001b\ufffd\ufffd\u0007\ufffdR\ufffdq\ufffd8\u0000\"\f\ufffd9\ufffd\ufffd\ufffd\ufffdG\ufffdO\ufffd\ufffd\u00071x-\ufffd\ufffdZk\ufffd\ufffd\ufffdG(\ufffdv\ufffd\ufffdK\ufffd\ufffd\u02e1\ufffd\ufffd\ufffd\u0553l\u0244\u00175\ufffd\ufffd'\u027e\ufffd/\ufffd\ufffd\ufffd\ufffdb\u001b\u000e\ufffd=\ufffdi\ufffd?\u0003b:\u001dK\r\ufffd\ufffd\ufffd\ufffdGIZ\ufffd[3\ufffdi\u0019rr\u0006b\b\ufffd\ufffd\tL\ufffd=&\nI\ufffdnD\ufffd\u0007\ufffdX\ufffdA\ufffd\ufffdx\ufffd\ufffd\u079b\ufffd\ufffd\u000eP\ufffd\ufffdc\ufffd\ufffd\ufffd\ufffd-A\ufffd\ufffdo\ufffd\u0195\ufffd\ufffd\ufffdb\ufffd\ufffd\ufffd\ufffd\u04d2N&g;U\u0018\u000b\ufffd\ufffd\ufffd)\u007f\ufffd\ufffde\ufffd\ufffd\u0001\ufffd\ufffd\ufffdSz\ufffd1\ufffd\ufffd_<P\u001at\ufffdO\u070f\u001c\ufffd\ufffd\ufffd\ufffd\u459eI\ufffd^\ufffd\u0679\u001d\u000b\u0004\ufffd0t\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdN\ufffd\ufffd\ufffd\ufffda\u033e6h\u0667\ufffdw\ufffdA\u001a\ufffd\ufffd\ufffd\u0014\u0001\ufffdv\ufffd\ufffdm\ufffdr\ufffdF\ufffdv<\ufffd^\ufffdB\u05d6p\u0013\ufffd\ufffd\ufffd\u001e3\ufffd\ufffd\ufffd,\u0011\ufffd\u082c'\u02efcql\ufffd\ufffd\ufffd\ufffd\ufffdo\ufffdL\ufffdZ\ufffd\ufffd\ufffd\nhR\ufffd\u0005\ufffd\ufffd\ufffdY\ufffd\ufffd6\ufffdr\u0011*\ufffdC\u0002N\u0001K\ufffdC\u0004p\ufffd@\r\ufffd\ufffd\u01c3F\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd^\u0001H4\u001cL\ufffd\ufffd\u001eX7\ufffd\u04b8j\u01df\u0011v|\ufffd\ufffd(\ufffd\u023eq$\ufffd\ufffd\ufffd\ufffdqQ\ufffd\ufffdZ\u001e\u0016\ufffd\"5\ufffd\ufffd\u0015/\ufffd)\ufffd1\ufffdP\ufffd(\ufffdF\u0016g\ufffd+\u000bQ/eT\ufffdr7\u0005[\ufffd%ta0\u0016\"U\ufffd\ufffd+\ufffd:2\u0010g\u0013\ufffd\t\ufffd\u027dt\ufffd\ufffdfd\ufffd\u0014ywTD\ufffd\u07cb\ufffd5\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdcw\ufffd-\ufffd\ufffd-h!\ufffd\u001c\u0019\ufffd\ufffd\ufffd\u0160\ufffd\ufffdY\ufffd(\ufffdh\\\ufffd\ufffdfGp\ufffd\ufffdn-%\ufffd\ufffda\ufffd\ufffd\ufffd\ufffd\ufffd3Q\u39d7\ufffd\ufffd\ufffd\ufffd\ufffd[\u00cf\u000f\u0017rs\ufffdg'\ufffdqE\uedf8\ufffd\ufffd\ufffd\u001eFi1\u001d\ufffd|\ufffd^\\\u0233\u00d1\ufffdQPB,\u0011\u001a\ufffd\ufffdL$\ufffd\ufffd0W\ufffd\ufffd\ufffde\ufffd\ufffd\bJ\ufffdu\ufffd\ufffd\u000f\ufffd\ufffd\ufffd,=\ufffd\ufffdQ\u001a\u0019\ufffd\ufffd\ufffd\ufffdb\ufffd-\ufffd\ufffd\ufffd\u0013\u0002g\ufffdy\ufffd\ufffd\ufffdL\ufffd\ufffd\u0002\u0011\u001b4\u02b3G\ufffd\ufffd\ufffd\u0002\\\ufffdm\ufffd!\ufffd\ufffd^C\u001e\ufffd\ufffdo\ufffd6\ufffd\ufffd=b\ufffd_>(\ufffdA#\ufffd\u0014\ufffd\u0378\ufffd\ufffd\u0630\ufffd\ufffdg\ufffd\u000ey\ufffd*\u0016\ufffd\ufffd:\ufffd\u000fM\ufffdN\ufffd\\\ufffd\ufffd\u007f\ufffd\ufffdx\ufffd\ufffd\u07e1\u077c\ufffd\ufffd\r\u0001\ufffd\u0001\ufffd\ufffd>_\ufffd(^\ufffd\ufffdX\ufffd*?\ufffd\ufffd\u0725\ufffd\ufffd\ufffd8\ufffd\ufffd-\u0002\ufffd\ufffd\r\u06a5.2\ufffd\ufffd\ufffd\ufffd'o\ufffd\ufffd\u0015\u001a\ufffd\ufffd\ufffdJ\u000e\ufffd\ufffd\ufffdo\\\u000b\u001f\ufffdjCE\"\ufffd\u0622a\u001b\u0003t\"\ufffd\u000b\ufffd\ufffd@\ufffd\ufffd\ufffd\u0010x\ufffd|\ufffd\ufffd6\ufffd\ufffdr\ufffd\u0003\ufffd\ufffd\ufffd\ufffd\u01dc\u0012\ufffdU\u001aO\ufffd\u0014\ufffd\u0013dW\ufffd\ufffdM\ufffdUh\ufffduW~7\t\ufffd\u0005\ufffd\ufffd^\u0012\ufffd\u0006\u071c\ufffd\ufffdNY\u0159N\ufffdE]\ufffd\ufffd\ufffdX\ufffd\u0015o\u0017\u000f\u000e5\ufffdI\u05c2?\u0019\ufffd\ufffd\u0005_\ufffd\ufffdQ\ufffd\ufffdk\ufffd\ufffd\ufffd\u001fx\ufffd\ufffd\ufffd<-\ufffdY)\u001e|\ufffd\ufffd?\ufffd/\u001a\u0016\ufffd\ufffd\ufffd\ufffd\u0743\ufffd'\ufffd>\u000f\ufffd\ufffd\ufffd@Q\ufffd\u0004\ufffd5PE,'W\ufffd\ufffd\ufffd\ufffd\ufffd`eYO\ufffd\u001dcQ\ufffdb\t\ufffd\u0007;o/]\ufffd\u0548\ufffd-B#\ufffd\ufffd\\\ufffdj\ufffd\u0003!\ufffd\"q\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdd\ufffd\ufffds\ufffd\ufffd\ufffd\ufffd\ufffdh\ufffd\r\ufffd1\ufffd\ufffd1\ufffd\ufffd\ufffd\u001b_i\ufffd\ufffd\ufffd\u000e\ufffdb\ufffdJ\ufffdXA\ufffd\ufffd\u000b\u001f\ufffd\ufffd\ufffd\ufffd\u0012\ufffdAqp:\ufffdH(\ufffd\ufffdy\ufffd\u0015\ufffd\ufffdi\ufffd\u007f\ufffdE\ufffd\ufffd\ufffd\ufffd\ufffd=\ufffd\ufffds\ufffd\ufffd\u0001\ufffdJ\ufffd}\ufffd?\u0315\rP\ufffd/\ufffd\ufffd\ufffd\ufffd\ufffd\u01d0?\u0000DA\u0012\ufffd\u03fe\ufffdU(x\ufffd;\ufffd'(\ufffd\ufffd\ufffd^:\u0000w\u0004\\\ufffd\ufffd\ufffd-(\ufffdr\ufffdz<\u07f9]\ufffd6\ufffd\u0781\ufffdi\ufffd/\ufffdsQ-\ufffd\ufffd\ufffd\\]\ufffdzV\ufffd+\ufffd\u0000\u07ab\u066bv\ufffd\ufffds}c\ufffdQ>\u001a\ufffd\ufffdf\ufffd&:\u0018\u001d\ufffd\ufffd\ufffdW\ufffdGM\ufffd\ufffd!\ufffd\ufffd\u0012[m\ufffdV\ufffdM\ufffdk/ZX\ufffdE\ufffd\ufffd*1\ufffd~\ufffd\ufffd\u000b%\u0581\ufffdl\n\ufffd:a\u0003\ufffdPT4\f\ufffd\u0010@/\ufffd\ufffd\ufffd\ufffd\ufffdo\ufffd\ufffd\u0012}\u001b4\ubee9$\ufffd\u0018C\n\ufffd\ufffdO(\ufffd\\cK\ufffd\u3bf4\ufffd\ufffdMG`\ufffd}\fS?\ufffd\ufffd\ufffd\u0003\ufffd4\ufffd\ufffd\u02d7H`\ufffdg\ufffd^\ufffdE\ufffd\ufffd\ufffdV+7\ufffdP#I)\ufffd\ufffd@m\ufffd\ufffd\u0018\ufffd\ufffd1\ufffd\ufffd\u0004%\ufffds\ufffd\ufffd|\ufffd\ufffd\u0013\u0476\u0001!k\ufffdH\ufffd\ufffd3;~%L\ufffd\u001a\u0019;X\u000b\ufffd\ufffdO\ufffd5\u0017\ufffd\ufffd\ufffdU\ufffd\ufffd\ufffd#Q\ufffdl\ufffd\b\ufffd\ufffd\u001f\ufffd\ufffd\ufffd\u0002\ufffd`\ufffd\ufffd7\ufffd'5\f\ufffd\n\ufffdx`\u0018Wj\t\ufffd\ufffd\ufffd\ufffd]\u0018\ufffd\u0007\ufffd\u0016Y\ufffd#\ufffd1nP\ufffdL\ufffdg\ufffd\ufffd{\ufffd\ufffd\ufffd\ufffd\ufffdX\ufffd\u064e\"l\t\u001bRu\ufffd\u02ee\ufffdo\ufffd\ufffd\\b\u0005\ufffdi\u0013n\u0006t\ufffd$\ufffd-P\ufffd\u0007\ufffd>*\ufffd\u0776\ufffd\u000e\ufffd\ufffd\u011f\ufffdl\u000b\ufffd\ufffdQ+Y\ufffd9\ufffd\ufffd(\ufffd\ufffd@\ufffd\ufffd\ufffd\t\ufffd\ufffd;p1<g~\ufffd\u0010\ufffd\ufffd)j\ufffd\u066aM\ufffdJ\u001e@T\ufffd\ufffdE>\ufffd[\ufffd\ufffd\u0633\ufffd~$\u0017t\ufffdF7\ufffd\u0000\u03bd\ufffd\ufffdSg\ufffd\n\u0018#%/\ufffdR\u0005/\ufffdU\ufffd\ufffd\ufffdEd\ufffd\ufffd=MY\u0003\ufffdy\u001c\ufffdb\ufffdRr#\ufffdRN\ufffd\ufffd'\ufffdY\ufffd\ufffd\u0622\ufffd;B\ufffd\u0003\u0000d\ufffd\ufffd\ufffdn\u0007\ufffd\ufffd\ufffdaY\ufffd\ufffd\ufffd+\ufffd4\ufffd\u001a\ufffdQ+\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0012=L\ufffd\ufffdS\ufffdR\ufffd\u0012\ufffdj\ufffd\ufffd\ufffd\ufffd\t\"\u079f/\f\u0261\t\ufffd_:\ufffd\u01f9\u0005\u00132/\ufffd!6/\ufffd\ufffd\u0014\ufffd\ufffd\u001f\ufffd=0\u0281\ufffd\ufffdK\ufffd\ufffd\u0000\ufffd\ufffd\u001e\ufffdq\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}>\ufffd0cz\u0019AV\ufffdK\ufffd%\u0010\ufffd\u0019\u0016\ufffdC\ufffdA\ufffd\ufffdF\u0016 zt\ufffd>\ufffd\ufffd\u0460\f\ufffd\ufffd\u0734d\ufffd\ufffd\u001c\u0019k4\ufffd\ufffd%r\ufffd\u0000\ufffd\t\ufffd2\ufffdf\ufffdR\ufffd\u02ee\u001dG\u0015\u07e2~-\ufffd\ufffd\nXUy\ufffde\ufffdO\ufffd\u000b\ufffd\ufffdYuh\udb24\udefc\ufffd3\ufffd\ufffdsy\u0016s\ufffd\ufffd*\ufffd\ufffd\u001e|\ufffd\ufffdJ\ufffd$\ufffd\u0001\u001f\ufffd\u0019p\ufffd\ufffd\ufffd\ufffdD-\ufffdQ\u0019cM\ufffd\ufffdNfB\ufffd\ufffd\ufffdE\"~fAxT\ufffd\u0005\u0019BN\n\ufffdY\u0012q+\ufffdM\ufffd\ufffd\u041c\ufffdA\ufffd\ufffd\ufffdX3\ufffd\ufffdg\ufffd\ufffd\ufffd\ufffd\ufffd=q@{~\n\ufffd\u0002\u001e\ufffd&h\ufffd\ufffd\ufffd&y#\ufffdVhg\ufffd\u001e\ufffd\ufffd*X\u001c\ufffd\ufffd6\ufffd\ufffd`\ufffd9L\u0016\ufffdM\ufffd1\ufffd\u0496Vu>8\ufffd\ufffd\ufffd\ufffdN1\ufffdq\u0000!z6O\u00ea.\u0005\ufffdNv(\ufffd\ufffd\"]zJ\ufffd\ufffd\ufffdV\ufffd\ufffd\ufffde\ufffd\ufffdT\ufffd\ufffd\ufffdV\u0005_,\ufffd\ufffd\u0018\ufffd\ufffd\ufffd\u0007\u0013b\ufffd\ufffdy)\ufffd\ufffd\ufffd\ufffdQ1\u0006\ufffd\u0000\"\ufffd\ufffd\ufffdc\t\u0000\ufffd\u0400\u0000\u0000\u0002\ufffdA\ufffd\ufffdE\u0015,+\ufffd\u0000\u0000\u0003\u0000\u0001>jFe\ufffd\ufffd(\ufffd\ufffd\ufffd\u001e\ufffd\ufffdm\ufffd\ufffdX\ufffd\ufffd\ufffd/\ufffd\u0000\u000e\ufffdk\ufffdV\u001c\ufffd\u000f\u0016p\tk\u001eN=\ufffd \ufffdf\ufffdw)gM\u0013x\no\ufffd\ufffd\ufffdy\u0002n6s\u001a\ufffd\ufffd\ufffd\ufffd\ufffd>\ufffd\ufffdz>*\u01c7>]-\u0010\ufffd\ufffd\ufffd\ufffd\ufffd+u\f\ufffd\ufffd\ufffd<\u0001\ufffd\u046a\ufffd\ufffdp\ufffd3*\ufffdd$0\ufffd\ufffd\ufffd\ufffd\ufffdCr0H>\ufffd\ufffd\u0000\n\u0014m\ufffd\ufffd\ufffd<\ufffd\ufffd\u0005\ufffd\ufffd5C\ufffd\u0002\ufffdn\ufffd:\t\ufffdw\u0013VR\u0006\u000ba[\ufffdm\t\ufffd\ufffdj\ufffdE\ufffdk\u0017\ufffd\u001a\ufffd\ufffd\u000fV\u0014\ufffd3\u001e\ufffdsc\u040f\u0016\ufffd\ufffd6\u0010#Z\ufffd\u001e\ufffd\fx\u0010\ufffd\ufffd\nu\ufffd\u000b\ufffdS\ufffd]Q^\ufffd8n\ufffd\ufffd\ufffdb\ufffd\u001c\ufffd\ufffd{\ufffdi\u073b\ufffdb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd}\ufffd\ufffd.\ufffd\ufffdJ\ufffd\u0007;\u0010\ufffd\u00058\ufffd\ufffd\ufffd\u0016\ufffd<\ufffd8\ufffdz\ufffd\ufffd\u0011\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd~\u0003\ufffdp\ufffdJ@\ufffd\ufffd\ufffd\ufffd]\u0334\u0005\ufffdw)=\ufffdB\ufffd*\u000b\ufffd\ufffd\ufffd)$\ufffd\ufffd\ufffd\u0013Y\u0000\ufffd\ufffd\u000e\ufffd+\ufffd\ufffd\ufffdU\ufffdV`\ufffd\ufffd\u0003\ufffd\ufffda\ufffdyC/\u0011.\u0732k\ufffd[\u0007\ufffdZF\ufffd\u008e\ufffd`\ufffd\ufffd\u0134\ufffd\u001f\ufffd^\ufffd\ufffd\u06e3\ufffd\ufffd\u06a5\ufffd\u007fv\u000f}:w8\ufffd\u0000*.\ufffd\t\ufffd\ufffd$B\ufffduei/\ufffd\ufffd\ufffd\t\ue835i\ufffd\ufffd+p\ufffd'\u0007\ufffd\u0016h\ufffd>\ufffd\ufffdwB\u0013\u0003\ufffdA!\ufffdJ\ufffdRk\ufffd\ufffd\ufffd\ufffdP\ufffd}\u0001Ia:\ufffdK\ufffd\ufffd|\ufffd\u0001\ufffd\t\u07be\ufffd\u0003\u0015.\ufffd,\ufffd\ufffdU\u000b\u050d\u0007`TG\ufffd{\ufffd!cb\"$\ufffd\ufffdl\u001f\ufffd(:\u0003\ufffd\ufffd\u0003\u000e\ufffd\u001e2\u0015O_\ufffd\ufffdr\ufffd}\u0334\ufffd|!i\u001c\ufffd\ufffd\ufffdu\ufffdO\ufffd\ufffdjG\u000f\ufffd\u0015,[\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdK\ufffdw\u007f_\ufffd0[/&\ufffd\ufffd\ufffd\u0012\ufffdv\u0007\u007f\u000b6\u0623$yT?\ufffd\ufffd\u001dk\ufffd.\u00030\u000fY:J\u0007\ufffdvqB\ufffd&\ufffd\ufffd1\ufffdX\ufffd\ufffd\u0011\ufffd\ufffd\ufffd\ufffdK\ufffd \ufffd\u001b\ufffd\u0015T\ufffd[I\ufffd1\"D\ufffd\ufffd\ufffdw?\ufffd<\u001b\u001a\ufffd@\u0010\u0015\u0243-+\ufffd\ufffd\ufffd)\ufffd|mI\ufffd0\ufffd\ufffd\u0016\ufffd^G\ufffdu\ufffd\ufffd\u052d\u062eS\ufffd\u0006\ufffd\ufffdEx\ufffd\u01684\u0000\u0010\ufffd\u0017\ufffd\ufffd\ufffd[\ufffd\u0012q\t\ufffd4\ufffdlB:$\u030ccS\ufffd5\u001f\ufffd\ufffdw\ufffd\ufffd\u0007\ufffd\ufffd\ufffd\ufffd\ufffd)\ufffd\ufffda\ufffd\ufffd\ufffd\u0019\u0004\ufffd\ufffd\ufffd\ufffd\ufffd\b=\ufffd\ufffdR\u000b\ufffd\ufffd\ufffd\ufffdX\u0000wA\u0000\u0000\u0002\u0012\u0001\ufffd\u001ajB\ufffd\u0000\u0000\u0003\u0000\u0002k\ufffd\u13ca\ufffd\ufffdC\ufffd\ufffd~\ufffd`h%'5T\u0002\ufffd:\ufffd\u001f\n/\ufffdi\ufffdn\u000f4\ufffd5\ufffd\ufffd\ufffd\ufffd\u0010L.4Q\ufffd\ufffd\u0015\ufffd\ufffd\ufffd\u0000-\u0012\ufffd\u001c\u0001q\u001cC\ufffdQ\ufffd\ufffd\u077d\ufffdcR\ufffdl\u0000\ufffd\u0002#Y\ufffd\ufffdX\u001c\ufffd\u001d\ufffd).\udad3\udd25:\u007f3^B\ufffd\ufffdM\ufffd\u007f8\ufffd\ufffd%\"\ufffd,\ufffdV\ufffd\u0001q\ufffd%\ufffd\ufffd\ufffd\u00077\ufffd\u001c\u0016\ufffd\ufffdh\ufffd\u000e\ufffd\ufffd\u0010\ufffd3\ufffd\u0010\ufffd\ufffd\ufffd\ufffdR\ufffd\ufffd\u000br\ufffdQ\u001f\ufffd\u07d2\ufffd7\u001b\ufffdGnT\u0003^\ufffd\ufffd\u001c-\u0004\u0011Bl\ufffd\u0000\u001a\ufffd\u0003\ufffdR\ufffdT\ufffd\u0016\ufffdwH\ufffd\ufffd/#@\u0003\ufffd\ufffd\u001bX/\u0019\ufffd<\u0017N\ufffd\ufffd\ufffde5\ufffd\ufffd1\ufffdr\ufffd\ufffdq'\u0001\ufffd\ufffd\ufffd\ufffd \ufffd$c\u001b6\ufffd5\ufffd\ufffd-\f[:\u000f\ufffd,\u0010\ufffd;z\ufffd \ufffd\\,\ufffd \ufffd\ufffd\u001c\ufffd\ufffd\ufffd\"\ufffd\ufffd\ufffdjv\ufffdE\ufffdU\ufffd\ufffd\ufffd\ufffd\r/\ufffdg\ufffdD@\ufffd1\u007f\ufffd\ufffd\u0019\ufffd H\ufffd\u02ed>\u04fd\ufffd]Ch\ufffdm\u0012?\ufffd\ufffd\ufffd:\u001e3\ufffd\b\ufffd\ufffd\ufffd\ufffdb\u0013w(n\ufffdt;<\ufffdaF\ufffd\ufffd\ufffdN\ufffd\ufffd\t\ufffd0v\u0007\ufffdx\ufffdG\ufffdp^9\u001c\ufffd\ufffd\ufffdSN2\ufffd\ufffdg\ufffds\ufffdg\ufffd\ufffd\u001dP4\ufffd;\ufffd\u0331$\ufffd\ufffd\n\ufffd:\ufffd\ufffd\u03fcTt\ufffd\u00126\ufffd\u0201\ufffd\ufffd!fs\ufffd\ufffdr\ufffd\ufffd\ufffd>\ufffd}\ufffd5\ufffd\ufffd\u0018\ufffd\u01cf[\ufffdai\ufffd\u0148+2\ufffd_\ufffdo^\ufffd\ufffd\ufffd\ufffd\ufffd@4\ufffd\ufffd\ufffd=\ufffd\ufffd\ufffd\ufffd>\u0001\ufffdW\ufffd\u00189y\ufffda\ufffdk\r\u00c4\ufffd\"_E\ufffd++[0\\\u0002Y\u000f\u0001\ufffdj\ufffd\u0013)\ufffd^\ufffdSnn\ufffd\ufffdX\ufffdx\u07e6Z\u001b\ufffdq\ufffd,3J\ufffd\ufffd\u001c\ufffd\u0017.\u001e\ufffd\ufffd\ufffd\ufffd[Z ?\ufffd\ufffdH\ufffd\u000fu\u0016\ufffd\ufffd\n\ufffd\ufffd0\u0016\ufffd\u0001y\u0000\u0000\u0006\ufffdA\ufffd\u001fI\ufffdAl\ufffdL\bo\ufffd\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000\u0003\u000e\ufffd\u001f\ufffd \u0002\ufffd\ufffdG\u00ceH\ufffdU\ufffd\ufffd\ufffdg2m{\ufffd#l\u0019\ufffd\u0012O\ufffd\ufffd\u001f\ufffd>\ufffd\ufffdm>\u9bb4w!$L\ufffd\u001f(\ufffd2532\ufffd\u0006\ufffd\ufffd\ufffd?v\ufffd\uf264\"\ufffd\ufffd\ufffd\ufffd\ufffdHA\ufffd\ufffd\ufffd/\ufffd\u001a\u000e~[\ufffdp}\ufffd\u007fQ\b\ufffd\ufffd\u0019\ufffd\ufffd\ufffd\u001a,\u0003\ufffd\ufffd\ufffd8\u0013\u0016\ufffdX@\ufffd\u0011N\u0006\ufffdsi\ufffdw<\ufffdD4\ufffd\u239e7\ufffd\u0484\ufffdg\ufffd\u001e\ufffd\u3dbcJ\ufffdF>\f\u0000\ufffd\ufffd\u001d\ufffd\ufffd\ufffdq\ufffd\n\ufffd\fJO\ufffdi\u0005P\ufffd\ufffd\ufffdq\t\ufffd\ufffd\ufffdj\u0003\ufffd\ufffd\ufffd\ufffd\u02fa\ufffdG\ufffd\ufffd\u000ft\ufffd\ufffd\u001a\u001c\u007f|\ufffd\ufffdY\u0018\ufffd\ufffd?\ufffd\u007f\ufffd\ufffdV\ufffd\ufffd8\ufffd*\ufffd\ufffdT\ufffd\u02d4'\u001f\ufffd\u0003\ufffd\ufffd\ufffd\ufffd\ufb9a\ufffd\u000b\ufffd\u065dM\ufffd\"\ufffdl}\ufffd\ufffdPQ2z\ufffd1\ufffdd\ufffdK\ufffd\ufffd1\ufffd\ufffd\u0004iQ\u0674=E|\u0003\ufffdW\ufffd\u0005i\n\ufffdvs\u0006f\u0010C\ufffd\u001f5\ufffd:\ufffd<\ufffd\u001c\u001a\u076c$_\ufffdz\ufffdr#\ufffd\u0017\ufffd,\ufffd\ufffd\ufffd\ufffd\u007f\ufffd\ufffd\ufffd.\ufffd\ufffd\u001f\ufffd\u001a\ufffd1\u04a0\ufffd\u0014;\u0006\ufffdX\u0011y\ufffd\ufffd7\ufffd\ufffd\ufffd\u001bz\ufffdp\u0018\ufffdh\ufffd\ufffdn,v=s:l\ufffd\u0000X\ufffd\ufffd\ufffd$J\ufffd+\u06e0/\ufffdR\u0004\ufffdfcm\u0016\ufffd+\ufffd\ufffd?\ufffd\ufffd{#X9\ufffd,\u0667\ufffd\u0016\u0007b\ufffd\ufffd\ufffd}\ufffd\ufffdb\",}\u0012\ufffd\ufffdC\u0015e\ufffdc\ufffd\ufffd\ufffd\ufffd\u0452>Y\ufffd\ufffd\ufffdl\ufffd\u0007\u0006\u001f:ag'\ufffd\ufffd\u0000\u0001Q\ufffd\ufffd\ufffdN\ufffd\ufffdI\r\u001ar\u0606\ufffd\u0350\ufffd\ufffd]NP\u000f\ufffd1HUf}\ufffd@E\t\u0000/\u0000\u0488\ufffd>\u0010\ufffd\ufffdJl\ufffd\ufffd\"\ufffd4\ufffd\ufffd\u056e\u0004\ufffd\ufffdM\ufffd\ufffd\ufffd\ufffd7\ufffd4\ufffd4\ufffd\ufffd\u0007\ufffd^\ufffd\ufffd\ufffd`\bf\ufffd\ufffdu\ufffd\u0005\ufffd\ufffd\ufffd\ufffd}\ufffd^[\ufffd\ufffd\ufffdf\ufffd\ufffdMa\ufffd\ufffd\ufffd\ufffd\u0003\ufffd\ufffd\ufffdc\ufffd$\u000f\ufffd[p8\ufffd\ufffd\u011b\ufffd\u001c-X\ufffd\u0015@Y \ufffd\u000ea\ufffdN\ufffd\ufffd6k\ufffd&\ufffd\ufffd3\ufffd\\\u06a3\ufffd\ufffd\ufffdo\b\ufffd\ufffd\ufffdc\ufffd\ufffd\ufffd b\\\ufffd\b<\ufffd\ufffd\u0002\ufffd\ufffd>\ufffd\u070a\u0007*\ufffd\ufffd\ufffd\r\ufffd\ufffd\u0016j\f\u000b\ufffd\u0016a-\ufffd\ufffd\u001a\ufffd\ufffdkdf\ufffdK\u00ab\ufffd|,\ufffd\u0014%\ufffd\u0128\ufffd\ufffd\ufffdV\u0012\ufffd)\ufffd\ufffd\ufffd\ufffd\ufffd\u01336c0'Zo\ufffd\ufffd\ufffd\ufffd*\ufffd\ufffd\ufffd\ufffd\ufffdm\ufffd\ufffd\u007f\ufffdC\ufffd#\ufffd\u0004`\ufffd\ufffd\ufffd\u0012\ufffd\ufffdl|\ufffdu\ufffdEc\ufffd\ufffd`X\ufffd\ufffd}$\ufffdksG\ufffd]\ufffd;\ufffd$\\4\f\ufffd]2\ufffduXYg\ufffd\ufffdW\u0014g\ufffd\u1b16\ufffdpu\ufffd*\ufffdJ\u0014'\ufffdK\ufffd?\ufffdL\u0002\\\u06a8\u000fh\u0012\ufffd\ufffdC\ufffd;\u06d8\ufffd\ufffd\rkEK\ufffd\ufffd\ufffd]\ufffd\ufffd\ufffd\u0004\ufffdo\ufffd\u0002D\ufffd\ufffdtW\ufffd\u0019\ufffd\ufffd(\ufffd\ufffdu\u02a1KR\ufffd\u038a\u0018\f*1?\rM3f6[\ufffdu\ufffd\b0\ufffdN|.\ufffdF1\u0773\u0011\u029cq[\u000f\ufffd\u0012\u0492\u001fT\ufffd\ufffd#\ufffdq-\ufffd\u001b\ufffd'\u0018\ufffd\u0017\ufffdol\ra\u000b\ufffd\ufffd\ufffd\u0012\u0288i\nv\ufffd\u0017\ufffd\ufffd\ufffdu\ufffd\ufffd0\ufffd^\ufffd\ufffd\ufffds\ufffdk\ufffd<r\ufffdS\ufffd\\\ufffd\ufffds\n&\u0005\ufffd.,\ufffdc\ufffd\ufffd\u06aa\ufffd*\u04ae\ufffd\ufffd\ufffdtE\u001eOH\ufffdnW\ufffd\ufffd\u0625\u0698\ufffd\ufffd\ufffd\ufffd\ufffd\u0000\ufffdA\ufffd\ufffd\ufffd\ufffdH\ufffdE\ufffd\r\u000btzFTo\ufffd?g't\u0011\\\ufffd\ufffd\ufffd\ufffd+\ufffdyN\ufffd\ufffd\ufffd\ufffd\u0693\u0012\ufffd\ufffd\u0007 \ufffd\ufffd\b\ufffd\ufffdA\ufffd6\ufffdHN;d=t\ufffd\ufffd\ufffd^v\u06dc\u027b\ufffd`EF\ufffd_`\r\rl0\ufffd\ufffdy\ufffd3&Z%\ufffd\u0006\ufffdM\ufffdT\ufffdG\ufffd\ufffd\ufffdh'4\u06f24\ufffd\ufffdp\ufffdW\u0017\ufffd\ufffd\ufffd\u0521\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd%\ufffd\ufffdz\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0013\ufffd/v\u001c\ufffdS\ufffd\u0011\ufffd+\ufffd\ufffdFx_\ufffd\ufffde\ufffd\u0014\ufffdt\ufffd\ufffd?f&\u0718\ufffd1,\ufffd\ufffd\u001eL\ufffd;r\ufffdM\ufffdL}\ufffd\u001a\ufffd\ufffd\u0010dp?\ufffdl2\ufffd\u007f\ufffd\ufffd1\ufffd\ufffd\u001e\ufffdm%\u001e\ufffd\u000f\ufffd\ufffdY\ufffd1\u0011\ufffd2\ufffdv|n^h\u17d1\ufffd\ufffdf\ufffd\ufffd(\u011c5\ufffd\ufffdu\ufffdw\ufffdS]vb\u03aa?y\\\u0015w\ufffd\ufffd\u001d\u03c6\ufffd\u001e%x\ufffd\ufffdg}\ufffd\ufffd\u0016\ufffd4\\\ufffd\u0018\u001c\ufffd\ufffdTO\u0012s\ufffd\u0012w\ufffd\ufffd\ufffd\ufffd,vg\ufffdTm3\u001d'\ufffd\ufffd\ufffdK<r\ufffdB\b4\u0000g\ufffd\ufffd\ufffdSF\ufffd^V\ufffd\ufffd\ufffd+\nPv\ufffd'n\ufffd\u0640(\ufffd\ufffd\ufffd;~\u0013\u001bo\ufffd\ufffdN\ufffd?+\ufffd\ufffd^g\ufffd9\ufffd=D\ufffd\u0007$\u001fd\u0007~4~_\ufffd\"\ufffd\ufffd\ufffdL\ufffd\ufffd\u05fbk\ufffd\ufffd\ufffd\ufffd\ufffd},\u001b\u06ec'\ufffd\ufffd\ufffd\u0002\ufffd\u001dA4\u001a\u000b\ufffd\ufffdg\ufffd\ufffdM \ufffd\u0001\ufffd\ufffd$\u0014\ufffd<\ufffd6%NJ\u0007\ufffdV\ufffd{\u0353\ufffd4-|2\ufffd3\ufffd\ufffd6\ufffd|R\ufffdT\ufffd\ufffdzA<\ufffd\ufffd17\u0254\ufffd\u03d9\"\r1\ufffdXZ?C\ufffd\ufffd\ufffd\ufffd\u0006\u0006\u04a3\ufffdB\u0006\ufffd\ufffdk\r+\ufffd\u0002|D\ufffdH&a\u0015\ufffdP\ufffd\ufffd\\\ufffd,\ufffd\ufffdS\ufffd\ufffd\ufffd\u0477\ufffd\ufffd\u000b\u0004',w\u0015\ufffd\ufffdAf\ufffd\u04bc\ufffdd\ufffdf\ufffdl\ufffd\u0000\ufffdk\ufffd\ufffd\u048et;\ufffd\ufffd\ufffd]i|\u028a]\ufffd\ufffd\ufffd\ufffd\u0006\u001cs\ufffd\u0746\ufffdLsU\ufffdn\ufffdW\ufffdO(\u001a<\ufffdlv\u001d\u001d\ufffd_\u001fE$\ufffd\u0004D\ufffd\ufffd~\ufffd4\u0455\u0374\ufffd\ufffd\ufffd\u001d\ufffd|F\ufffd#'1\ufffd*\ufffd\ufffd\"\u0015\ufffdI>\ufffd\ufffd\ufffdd\ufffd\ufffde\u0003;\ufffd\ufffdwA\ufffd\ufffd/!\u0005\ufffd\ufffd\ufffd];\ufffd\u001a(=\ufffd%]\ufffde\ufffdK\ufffd<P\ufffd#\ufffd\u0002\ufffdfB6\ufffd.9\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdBV\u0012\ufffd\ufffd+9UM\ufffdzIe0\ufffdO\ufffd\ufffd\ufffd\ufffd$\ufffd\ufffd~\ufffd\u000fb\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd!\ufffd\ufffd\ufffd\n\u0002\ufffdD\u007f:6\u0006\ufffdq\ufffd+,~\ufffd\ufffdm\u0015}\ufffd\n\ufffdJf\ufffd\ufffd\ufffd\ufffd=\ufffd53\ufffd\ufffdz~\ufffdC\u0016Ct\ufffdp\u0002\ufffd\ufffd\ufffd\ufffd\ufffd\r\u001c\ufffd\ufffd\ufffd\ufffd{\ufffdD\ufffdmm\u001cbO\ufffd*\ufffdM\ufffd\ufffd\u0001\ufffd{\ufffdN\u0006n\ufffd\u02205\ufffd\ufffdi\ufffd\ufffd\ufffd:Oo\u00b6\ufffd>\ufffdmb\ufffd}\ufffd4y\ufffdY\ufffd\ufffd\ufffd\ufffd.\ufffd\ufffd\u0004\ufffdI\u0000\u0000\u0002\ufffdA\ufffd=E\u0015,/\ufffd\u0000\u0000\u0003\u0000\u0001\ufffd[\ufffd\u0017b\ufffd'\ufffd+\ufffdH-d\ufffdR\ufffd\ufffd\ufffd\u0017\b\ufffdsl\u0016m\ufffd\ufffd\ufffd\ufffd\ufffd\u0380o\ufffd\ufffd5\ufffd\ufffd\ufffdg\u0019\ufffd\r\ufffd@u\ufffd\u0014\ufffd\ufffd\u001d{\ufffd\ufffd;\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdL\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0000 \ufffd\u001d+\ufffdi\ufffd\u0013g={\u0661\u0018\u000b6\u0010\ufffdd\ufffd\u07e5\ufffd?\u0016q\ufffd\ufffd\ufffd\u001e\u029f\u0000\"!$\ufffd_Z\ufffd\ufffd'\ufffd\u001b@uK\ufffdI,2!\ufffd\ufffdB\ufffd\ufffd4\ufffd:s\ufffd\u077a\ufffd\ufffd{;\ufffde;\ufffd\ufffd{\ufffd\ufffd\ufffd\ufffd\u007f\ufffd\ufffd\ufffdfX\ufffd\u007f2\u0018mR\ufffdM\ufffd\u000b\ufffd\ufffd.\ufffd\ufffd\ufffdv\ufffdt\ufffd\ufffd\ufffdM\ufffd;\ufffd\ufffd+\ufffd\ufffd\u0006\ufffd8\ue786\ufffd\ufffdBK\ufffdd\u000f\ufffd\u000b\ufffd\ufffd\ufffd\ufffd\ufffdh\ufffd\ufffdEu\ufffd\u05d9\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdC\ufffdz\ufffd\u0012\u0142\ufffdx/\ufffd\ufffd\u0005\ufffd\ufffd\ufffdaX\ufffd\ufffd\ufffd2B\ufffd(\ufffd\ufffd\ufffd\u0019`]\ufffd9E\u8d37\ufffd\u001d\ufffdEg\ufffd:\ufffd4\ufffd\r-\ufffdf\u0668t>J\ufffd>O\ufffd\u0010\ufffd\ufffd&\ufffd6\ufffd0\u05a2\ufffdJ\ufffd~x\"\ufffdW\ufffd\u0013p\ufffdH\ufffd\u0011\ufffdo\ufffd\ufffdho\ufffd\u0007\ufffdtk\ufffd6\u05709b\u0005\ufffd\ufffd\u05b1\ufffd\ufffd>c\ufffd\u0015\u0002\ufffd+Y4\ufffd\ufffd+u\ufffdDL\ufffd\ufffd\ufffd\u0017\ufffd\u36b3`\u0007\ufffdp\ufffd\ufffdZ\ufffd}r\ufffd_\ufffd\ufffd_\ufffd\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffdU\\\ufffd\u0013\ufffd\u0016\u000f\ufffd\u0002X`\ufffd$\ufffdi\ufffd\u0004\ufffd\ufffd3\ufffdW\ufffd\ufffdq0H\u066d6\ufffd\ufffdL$\ufffd\ufffd(\ufffdPMv \u001e\ufffdv\ufffd\ufffd,\ufffd\ufffd\ufffd\ufffd~\ufffd\ufffd\ufffd\ufffd~\ufffd&\u001d\ufffd\ufffd\u001bd\ufffdZY\ufffd|%[9S<e\ufffd\ufffd\u0003\ufffd(\ufffd\u001c\ufffd\ufffd\ufffd\ufffd\u000b\ufffd_\ufffdw\ufffdOlS <w\ufffd>Y)\ufffd\ufffd\u007fC!\ufffd+\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0004\ufffd2\ufffd\ufffdC\ufffd\u021b\ufffdI\ufffdU\ufffdzbil\u001f0b}\u001a\ufffd\ufffdk\u0006\ufffd\ufffd]\ufffd\u03ab7\ufffd\ufffd \ufffd{\ufffdj\ufffd\u0018;\u0019\ufffd;hj~\ufffdH\ufffd\ufffd\ufffd\u000eD9\ufffda+\u001f\ufffd\ufffd\uf8db\ufffd\ufffd\ufffd\u0174G\u0762\u0016\u05e4\ufffd\ufffdeTo!eY\t\r\ufffd3\ufffd\ufffd]\ufffdX\ufffd\u0000\ufffdm\f\ufffd\ufffd\u000e\ufffdW\ufffd\ufffd\ufffd}\u0000\u0002\u0445\u000f\r\ufffdf\ufffd\ufffd$\ufffd\ufffd3\ufffd\ufffd*\ufffd\ufffdoF\u0000\ufffd\ufffd\u0000\u0000\u0001\ufffd\u0001\ufffd\\tB\ufffd\u0000\u0000\u0003\u0000\u0002k\ufffd7.{\ufffd1=\u0ade\ufffdCIh\u04bb\ufffd\ufffd \u0001,\ufffd\ufffdZ\ufffd*\ufffd\ufffdhu\u0001\ufffd\ufffd\u0007t\ufffd\u001f\ufffd\u0005b\ufffd6\u03d1\u0006\u000b\ufffdl\ufffd\ufffd\u0460\ufffd\"\ufffd%\u0011\ufffd\u0000oA\ufffdJ\ufffdH\ufffd\ufffd\u0014]|\ufffdD\u001bH\ufffd\ufffdC\ufffd7\u000b\ufffd\ufffdp\ufffdU\ufffd.\ufffd\ufffd\u001e\ufffdybK^t\u0019]\u001e\ufffd!\ufffd(xj\ufffdj\u001e\ufffd\ufffd\ufffdc\ufffd\u001e\ufffdM\u00101g\u001cW\ufffd -}\ufffd%\ufffd\u000b\u9c33\ufffd\u0002\ufffd\u057an\ufffdN\u0003\u0422q\ufffd\ufffd\u0013}\ufffd\u001e\ufffd\u0001\ufffd\ufffd\u001f\tm\ufffd\ufffdk\u0001\u001c\ufffd\ufffdv\ufffd\ufffd\u0017\ufffdRj\u0250\ufffd\ufffdp\t\ufffdG\ufffd\ufffdib\n{M\ufffd-\ufffdZS|\ufffd\ufffd\ufffd;\ufffd\ufffdJ\ufffd}Kf\ufffd\ufffd\ufffd{\ufffd\u00011pG\ufffd\u0012z%\u001d\u00e1@O\ufffd7\ufffdS\ufffd\ufffd\ufffd&E\ufffd\u0014l(\ufffd\u0593\u0380\u001b\u04d3{=\ufffd\b\ufffd\ufffd\ufffdf\ufffdv\ufffdo\ufffd!\ufffd%\ufffd\ufffd\ufffd[\ufffd;\u0012\u022fL<E\ufffd-C\\_C\u0001\u001e\ufffd\ufffd\u0005\u0013\ufffdC<\ufffd\u0010+kU\b|\u0019\u0011\u000eu2 \u060a\u0012\u0017\ufffd\ufffdO\ufffd\ufffd\ufffd0A\u007f\ufffd\ufffd\u000esA:\ufffd\ufffd\ufffd\u01cd9\ufffd[\u00052\ufffd_A\ufffdB\ufffdX\b\u001f\ufffd\\j\ufffd\u01f2\ufffd\ufffd!\u0016J\u032b (c6\ufffd\u165b\ufffdR\\\ufffdds\ufffdF\ufffd|Jm\u001d{x\u0019\ufffd\ufffd\u0005\u0005\ufffd19bX\ufffd\ufffd\ufffd\ufffd\ufffd9d\ufffd^\ufffd\ufffd\ufffd4\ufffd\u0016X\u007f\ufffd\u0430d\ufffd\u0000\ufffd\u001b\n\ufffd\ufffd\ufffd\ufffdq~;v\ufffd\u0010\ufffd\ufffdr\ufffd\t\u0003\u0017\ufffd\ufffdB\ufffd\u0727\ufffd\ufffd\ufffdD\u0002\ufffd\u0000\u0000\u0002\u001b\u0001\ufffd^jB\ufffd\u0000\u0000\u0003\u0000\u0002}\ufffdZ,\u0001?\ufffd|\u000e\ufffd\ufffd\ufffdC\ufffd%\u0018\ufffd3\u014c|\ufffdEI\ufffdtoD\ufffd\ufffd\ufffd\u0017\"\n4\ufffd\ufffd\ufffd[\u00d8\ufffd\ufffd\ufffdN; \ufffd\u0002\ufffd\ufffd\ufffd)\u0416\ufffdM\ufffdA\ufffdN;\ufffd\ufffd[\ufffd\ufffdx\u0017\ufffd\ufffd\ufffd\f\ufffd\ufffd)\re\ufffd8\ufffdu#\ufffd\ufffd%&S\ufffdU\u0017\u007fm\u0015A\ufffd]A\ufffd\ufffd\ufffdi\u0017\ufffd4T=\ufffd\u0015\r\ufffd\ufffdc\ufffd?\ufffd3\u06f3\u01a7\u001d:\ufffdp\u0010\ufffd0\u0569\ufffd7\ufffd.\ufffdM\ufffd\u0012\ufffdy\ufffd\ufffd:\ufffd&\"L\ufffd\ufffdj\ufffdF\ufffd\ufffdo\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\ufffd\ufffd:\u001e\u001e\ufffd\ufffd\"\ufffd\ufffd\ufffd\u0019\u007f\r\u0018YS\ufffd\ufffd\u0626\ufffd\ufffd\ufffd!\ufffd\ufffd\ufffd\ufffd\u0012\u0015\ufffd\ufffd\ufffd\ufffd$q9\u0018\u0005\u01b9\f\u000f`\u000e\u001f>\bs\ufffd\u0284\u0017\ufffd\u06e0\ufffd\r\u001a()8\ufffd\\\ufffdZ\ufffd\ufffd<_\ufffd\ufffd\ufffd\ufffdd%QOU\ufffde\u0002\ufffdB\ufffd/}\ufffd\ufffdf\ufffd\blD\u007f-\ufffdB{|\ufffd1=\ufffd\u000e\ufffd0\ufffd5R\ufffd5\ufffdR\ufffd\u00062X\ufffdr.#\u0531\ufffd\ufffd}\ufffd$7\u001fIt\ufffdrt\uc91a\ufffd\ufffd\ufffdwX\ufffdv\u001e\ufffd(\u0010\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd5\ufffd\ufffd\ufffdx*\"\ufffd\u0012u4J#\u001b\u000e\u0012\ufffd\ufffd\ufffdI5c\u001b\ufffdY\f\n\ufffd\ufffd\u001b\u0003\u000e\u000b\ufffdA\ufffd<\ufffd]S\ufffd\ufffdbo\u0005\t7 \f\ufffdw1FC\u209f\ufffd\ufffd?\u0015\ufffdz\ufffd\ufffd6lo(\ufffd\u0006g\u00169<\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd'\ufffd\u0012\u0010\ufffd\ufffd\u000beHb\ufffde`\ufffd\ufffd\ufffd$-\u0017_c\ufffd\u03fe\ufffd8\ufffd^.\u03d6Z\ufffd\u001c\ufffd\b\u0787\ufffd\ufffdL\ufffd7\ufffd\ufffd<US\ufffd\u0791\u0004Q\ufffd\ufffd\ufffd+\ufffd\ufffd\ufffdd'ZPh\ufffd\ufffd\ufffdM\ufffd\u000e\ufffd\u001a}\ufffd\u06df\ufffd\u0003\ufffd\ufffdc\ufffd;\ufffd\ufffdO\ufffd\ufffdTvZ\ufffd\ufffdZ$\ufffd\r\ufffdh\ufffd\ufffd\ufffd7\u0012\ufffd\ufffd\ufffdv6\ufffd\ufffdpD\ufffd\ufffd\u001dp\u0000\u0000\u0007JA\ufffdCI\ufffdAl\ufffdL\bg\ufffd\ufffd\ufffd\u0010\u0000\u0000\u0003\u0000\u000b\ufffd~\ufffd~\ufffdl\ufffd\ufffd\u0285\u0005\ufffd\ufffd\u0018\ufffd\ufffd^y\n\u0367\ufffd\u0001\ufffd\ufffd\ufffd\ufffdT\ufffd\ufffdj2i\ufffd\ufffd\f\ufffd(m|\ufffdX\n\u0016yO\ufffd;|\u0010\u0005C\ufffd\ufffdM\u001a\ufffd!\ufffd\ufffdG\ufffd\ufffd.\ufffda\ufffd\ufffdDzG$\u0010\ufffd\ufffd\ufffd\u051eQu\ufffd\ufffdR\ufffd\ufffd\ufffd+\u0012\u000bFf\ufffd\u0311[\ufffdNy\ufffdt=\ufffd\ufffd\ufffdo\ufffdg\u001d\u001an\ufffd\u0005\u000e\ufffd\ufffd\ufffd\ufffd\u0112WL!\ufffd\u0017\ufffd\ufffd\ufffd\ufffdm\ufffdY\ufffd>\ufffd\ufffdq\ufffdz\ufffdx\\G\ufffd\ufffd^\ufffd\u0000,{K\ufffd@vO}U\ufffd\u001c>\ufffdo\ufffdW \u04ea\ufffd\ufffd\u000b\ufffd\ufffd2\ufffd\u0019\u0006M\ufffd_\ufffd\u072e\u001e\ufffd\u001aU\ufffdC\ufffd\u0018\ufffd\ufffd\ufffd1=,\ufffd\ufffd\ufffd\tj\ufffd\ufffdy\ufffd\u001a\u001e\ufffd\ufffd\ufffd+\ufffd\ufffd5T\ufffd\u001d\u01604\ufffd\ufffd\ufffdt\ufffd\ufffdw0\ufffd\rxV\u0013a8wmm\ufffd\u001cX\ufffdf\ufffdt.\u0013e\u001b\ufffd\ufffde\ufffdcT\ufffd\u0002\ufffdx\ufffd\u000e\ufffd\ufffd@h60:e\u0003\u001d\ufffd|\u0755:\u001e\ufffd\u001e\ufffd\ufffd\ufffd7\ufffd\ufffd\ufffd\u0512;\ufffdh\ufffde9\ufffd\u007fe\ufffdDu\u0093\ufffdT\u0014rR\u0016\ufffd\ufffdn(\ufffdt#\ufffdxU\u001e\b-\ufffdG\ufffd>\u40dc_\u0012\f~\ufffd\ufffd;o\ufffd\ufffdN\u0013Co\ufffd\ufffd\ufffd)P\ufffd\ufffd\u0010Dt\ufffd\u02d9\ufffd\ufffd\u0000\u0002\udb58\udf5b\ufffd-\ufffd\u00025\ufffd\ufffdrd\ufffd\u0222\ufffd{\ufffd\u0007wl\ufffd\\!\ufffdK9\ufffd`k%Fp\ufffd\ufffd\u0015DV\ufffd \ufffd\ufffd\u0015\ufffd\u000b\ufffd\ufffd\ufffd3F\ufffd\ufffd]2\ufffd\ufffd!\ufffd\ufffd,B\ufffd\u0002\u0019\u0302\ufffd\ufffd\ufffd\ufffd\ufffd;\ufffd\ufffdSU\ufffd\u0764,\ufffd\ufffd\u0000\ufffd\ufffdN8(W\ufffd\u00123T\ufffdOh\f\ufffd\u001a\u007fC\u001c#@\ufffd\t2\ufffdgb=\ufffdzz\ufffd\ufffd(\ufffd\ufffd7\ufffdtV\ufffdR6+\u0005hv\ufffd\ufffd\u000e\u05a9\ufffd%BK\ufffd\ufffd\u0010\ufffd;S[\u001c\ufffd\ufffd\ufffdm\ufffd\u0015\ufffd\ufffd\u0004\ufffd=G\ufffd\u0019-\u001b\ufffdU\ufffd\ufffd\ufffd\ufffd9_\ufffd\ufffd}\ufffd6\ufffd\u0000\ufffd\ufffd\ufffd\ufffd\u0004\ufffdQh\ufffd[A\ufffd\u0007>\u001c\u0019?\u001c\ufffd\ufffd\u06a2\ufffd\ufffd\ufffd/-\ufffd\u001f\ufffdz-\ufffd9\u0010h\ufffdP\u0001\ufffd.\ufffdSR\u2806\ufffdm\u0017\ufffdt\ufffdg*t\u0524\"\ufffd\ufffd\tH\ufffd!\u0014\ufffdVx\ufffd\ufffd\ufffd}_\ufffd\ufffd\u0012\ufffd\t\ufffd-S\ufffd\ufffd\t\ufffdZ\ufffdH\ufffd\ufffd{7\u05d3K\ufffd\r\ufffd\u0000\ufffd\tupaH\u0641\ub971\ufffd\ufffdA\ufffd\ufffd2\ufffd\ufffd\by\u001a6v\ufffd\ufffd\ufffdW\ufffdo\u0015\u0017)k\ufffd \u0003J\ufffdV\ufffd>\ufffd\ufffd\ufffd\ufffd\u0150\ufffdP\ufffd\u000bk\u3d74\ufffdI\ufffd\ufffd+\ufffdi]I\ufffd\u0697\u000f\ufffd\u0014^\ufffd{\ufffdq\ufffd \ufffd\ufffd\u007fH\ufffd5\ufffd8j$\ufffd\ufffd\ufffd^\ufffd\ufffd\ufffd<\u0436\ufffd)\u02feS\u000e\ufffd\u000b\ufffd\ufffd\u0004=\n\ufffd\u001a!\b]_\ufffd\u0003\ufffd<\u0017\u0013\ufffd\ufffd]O\ufffdrCV\ufffdC6\"\ufffd#\u0016$\ufffd\ufffd\ufffd\ufffd\u0015\ufffd\ufffd\r/\u0014]\u0017v.x\ufffd\ufffdq8}a!\ufffd\ufffdc\ufffd\ufffdp\u0010\fR\ufffdff\ufffd\ufffdD\ufffdf+`\ufffd\u0016\ufffd\"\ufffd\u0005\ufffd\u0001.\ufffd\n\ufffd\ufffd\u001a\u0006\n\ufffd8\u0003q\ufffdS\ufffd\ufffd\u0012\ufffdw\ufffdc\ufffd\u0649\u0001\ufffd\ufffd\\\u000eC\ufffd\ufffd\ufffd\ufffd\u0018\ufffdtb\u0006Y\ufffd\ufffd$$\ufffd\ufffd\ufffd\u06b4\ufffdZ\f\ufffd\u001fE\ufffdu\ufffd\ufffdl\u0012\ufffd2^\ufffd\ufffd'\ufffd\u0004\ufffdz<\ufffd\ufffd:\ufffd\ufffd\ufffdn\\]\ufffdIbTNI'\ufffd[\ufffd\u0001g>\ufffd!\ufffdg\ufffd[c\ufffdl\ufffd\u0000\ufffd\ufffd\u00155\u0002Z\u0003:\ufffd`M\ufffd\ufffd\ufffdF\ufffd\ufffd\u001c$\u0004\ufffd>}\ufffd.\r\ufffd\ufffd5\ufffd\ufffdM\ufffd\ufffd\ufffd\ufffd\fC]\ufffd8'\ufffd+ee\ufffd\ufffd\ufffdV\ufffd\ufffd\ufffd\ufffd\ufffd!\ufffd\ufffd-\ufffdP6\u0349\ufffd\ufffdg$\u0005\ufffd\u0002\u001b\u047fr\ufffdMPS9\ufffd,\ufffd|\ufffd\u0004:\ufffd\u0367k\u0011\ufffd\ufffd1\ufffd\ufffdF\b\ufffd,_(\"|\u05a7\ufffd\ufffd\ufffd\ufffd\ufffd.\u02a8$ohV\ufffd\f\u0006rYS/}\ufffd\u0018\ufffd\u007f\ufffd_\ufffd\ufffd.\ufffd\ufffdANb\u001c\uf0cd\u001d\ufffd\u07b6x\ufffdec\ufffd#\ufffd\ufffdfVz\ufffd\f5\\\u0013\ufffd\ufffd\u0003\ufffd)x\ufffd\u001b\ufffdoh\ufffd\ufffdW'\ufffdP\u001a\ufffd\ufffd\u001dm\ufffd\ufffdD\ufffd\u0140|\ufffd\ufffdZ\ufffd\"\ufffd5\u001b\ufffdi \ufffd$\ufffd\u0005\ufffd]\ufffdan6\u039b\ufffdM\u0017\ufffd\ufffd=\ufffdJ\ufffd\ufffd\ufffd\u0131\ufffduqq\ufffd\ufffd8\ufffd\ufffd\ufffd7\ufffd{\ufffdv*Q<[\ufffd\u010a\ufffd\ufffd\u0014\ufffd\ufffd|\u0012\u0378=e)\u0012\ufffd\u0395>\ufffd\ufffd\ufffd\uf5c7\rI\ufffd\r&#\u001d7H{\ufffdl\ufffd\n\ufffd\u001e\u000b\ufffd\ufffd*T\ufffd\ufffd\ufffd\u0010\ufffd\ufffd\u001co\ufffd\ufffd\u0091a\u0109\ufffd\u000bzD$\u0007\ufffd\u0011\u07af\ufffd*\ufffd\b\ufffd\ufffd\ufffd\ufffde\ufffd\ufffd\ufffdd|\ufffd\u0257R\u0019\u07df)\ufffd3R\u001b@\u0014n_\u001f=\ufffd\u0002\u001e\u03b3\ufffd\ufffd\u0001L6\ufffd\ufffd\ufffdx\u05fe \ufffd\u0015\ufffd0\ufffdF\u0002\ufffdljP\ufffdF\ufffdDcI(}X-\ufffd$\u001d\u07faR\u001d\u001cp\ufffd\u0006K\ufffd\r\ufffd\ufffd\u007f\ufffd+\ufffd\ufffd\ufffd\ufffdRZn\u0017\ufffd\ufffd\f'\ufffd\n\u0018\ufffdG\u0649\ufffdR\u0017\ufffdi\ufffd\tV\u0017\u0014\ufffd\ufffd9\ufffd\ufffd\ufffd\ufffd\ufffdC<`2#S\ufffd6\ufffd7~\u001f\ufffd]\ufffd\ufffd\ufffd\u009c\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdb\u007f\ufffd;\ufffd\ufffd\\^\ufffd\ufffd+A\ufffd\u0014In1\u07d0\ufffd\ufffd\ufffda\t\ufffd\ufffdf,EQG\u0003c\ufffd\ufffd\ufffd\ufffd\u0014\ufffd\ufffd\u00148@\ufffd\ufffd'\ufffd|?\ufffdK\ufffd\u0018\ufffd\u001b\ufffd)\ufffd\ufffd\ufffd\u001b\ufffd\u0315\ufffd\ufffd\u0002\u02e4\ufffd\ufffdY\ufffdcJ\ufffd\u0018Q\ufffd\ufffd\u7736\ufffdk\ufffd \ufffd\ufffdS\u0001\ufffd\ufffd3\ufffd\ufffd\ufffdr\ufffd9\u06e6\ufffd\u0269\ufffd\ufffd8\ufffd{\ufffd\ufffd\ufffd\ufffd\ufffd\u0001\ufffd\ufffd\u00149\ufffd#\ufffd\ufffdZ\ufffdlx&\ufffd\ufffdX_Z\ufffd\ufffdC\ufffd\ufffd\ufffd\ufffd\u0768\ufffdr\ufffd5\ufffd\ufffd\u0017l\ufffd\ufffd\u0005X\ufffd\ufffd.^\ufffdD\u0003\ufffdz\ufffd\ufffd\u02c9\ufffd\u00176y\ufffdG\u000f\u0017\ufffd\ufffd\u0013\ufffd\ufffd\u01e4p\u000fS4\ufffdQ\ufffdI\ufffd\ufffd\ufffd:m8\ufffd\ufffd\ufffdn)k\u001a\ufffd\ufffd@\ufffd\u000e\ufffd\u0004\ufffd\ufffd|\ufffdS\ufffdj\ufffd\ufffd\u0015FGK\ufffd\ufffd\ufffdwu.\u001a\u000f?\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffd\b /\ufffdQ\ufffdV\u007ft\ufffdY\u001a\ufffdN\ufffd\ufffd\ufffd\ufffd\ufffd\u0342A\ufffdC\ufffdW\ufffd\u0003\ufffdPk9\u0005\ufffdCU\u0019\ufffd\ufffdK\\\ufffd\ufffd3\ufffd\ufffd\ufffdz\ufffd\u0539N\ufffd\ufffdz+\u0002O\ufffd\u0003\ufffdC\u000e[M\ufffd\ufffdP?I\\\ufffd\n\u007f;\ufffd<\ufffd&\u0017\u0012\ufffdZ\ufffd#\ufffd\ufffd\u001e+\ufffd-\ufffd\ufffdK\"\ufffd\u06e1\\Z\ufffd\ufffd)\u0701\u0014\ufffd\u0007L\ufffd\ufffd\u0016\r\u0006~Z\ufffd{P\ufffd)\u001crv\ufffd\ufffdF\ufffd f\ufffd6\ufffd\u0006\ufffd-\ufffd\u001a\ufffd\ufffdz\ufffd0| \r[\ufffd\ufffd\ufffd\u001c\n\ufffd\u001a\u001b\ufffd\ufffd\ufffd\ufffd;:\ufffdg\ufffdm<\ufffd\u0018\ufffd\"\ufffdJ\ufffd]\ufffd<1G\ufffd\t\ufffd\u0000\u0000\u0003\ufffdA\ufffdaE\u0015,/\ufffd\u0000\u0000\u0003\u0000\u0001\ufffd\u0011\u0010j[=\ufffd\ufffd\ufffd%\ufffd\ufffd\ufffdkG\ufffd\ufffd\u0395v\ufffd[6\ufffd\ufffd ,\ufffdu\u000f\ufffd\ufffdX\ufffdRl\u0000\ufffd\u0002EU\u0019\u001e\u0016\u0014\ufffd\u0012F\ufffd~\ufffd\ufffd*\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\u007fD\ufffd*\ufffd\ufffd\ufffdr\ufffd\u00079\ufffd\ufffd#\ud302\ufffdcj\ufffdU\ufffdQ\ufffd\ufffd\ufffdM\ufffdu\ufffd)D0RQ\r\ufffd\u000f'\ufffd\b'\ufffd3\ufffd\ufffd\ufffd^\ufffdP\ufffdVO\ufffd\ufffdZ\u01d2\ufffd<\ufffd@3\ufffd\b\ufffd:+\ufffdN'\ufffd\ufffd\ufffd}\u0019:\ufffd:\ufffd\ufffd\ufffd>p\ufffd\ufffdM\ufffdkwU&p1\u384a=\ufffd\ufffd{\ufffd\ufffd;2#\ufffd8A'Z\ufffd\ufffd*a\ufffd+\ufffdu\ufffd\ufffd\ufffd\ufffd\ufffd\u0013\b\ufffd^!;\ufffd\ufffd\ufffdf^\u0013\ufffdJ.\ufffd&,(\n\ufffd\ufffd\f\ufffd\ufffdk\ufffd@\u028d+\ufffd\ufffdX\n\ufffd\ufffd\ufffd;\u0000\ufffd\u04e5}~M\u0003[\ufffdn\ufffd6lp6\ufffd\ufffd:\ufffd@r\u0012\ufffd\ufffd\ufffd_|/\u0015\ufffd\u0011{\ufffd\u0007\ufffdf/\r\ufffdnQ\ufffd~\u000e\u0004\ufffd\ufffdNT>|\u0019%\ufffd+\ufffdh\ufffdq\ufffd\u001d\u0007\ufffd(\ufffd/\ufffd\ufffd\u0019H\u0017E\ufffd\ufffd\ufffdVd\ufffd\u0016\u0019\ufffd\ufffd\u059b\ufffd\ufffd\ufffd5\ufffdNe>\u0017^9\u001b\ufffd\ufffd\u0019\ufffd\ufffd\"BW\u0002\ufffd\u0017R\ufffd\ufffd\ufffdR\ufffd8\f\u05f3\"xc\ufffd\ufffd\ufffd\ufffd\ufffdrh\u0004J;\u0000\u0005\ufffd\ufffdT\u0017i\ufffd~\ufffd\u01e7\u0647z\ufffdO\ufffd\u0016\u001d\u0623!\u0019\ufffd^\ufffd\ufffdl\ufffd\ufffd3\ufffd\ufffdN\"z3Y\ufffd\u0003C}\ufffd\ufffduK\u0010-\u0005\ufffd\ufffd\u0002\ufffdD\ufffd\u065d\ufffdo\uab7cbgV\ufffd#\ufffd\\\ufffd\u15be\ufffd\ufffd\ufffd\ufffd\ufffd\u001b}\ufffd\ufffd\r\u02b4\u001e\u001e`\ufffd\u02eb>S}Rw\u001avV4\ufffd\ufffd\u0596OJv\ufffdm\u000e\ufffd\ufffd\u0002\u0015\u001ce\ufffdbPM\ufffd,&\ufffd\ufffd\ufffd\ufffd^\u0016[gm)o,\ufffd\b-\ufffd\ufffd)\flD5\u04df\u5a302\ufffd\ufffd\ufffd\ufffd\u007f\ufffd\u001c\ufffd\ufffd]\ufffd:>\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u001c\ufffd\ufffd\u0013\ufffd\ufffdt\ufffd\ufffd`\ufffd\ufffd\ufffdC\u0013\ufffdnq!\ufffd\ufffd\u0011\ufffd\u0665\ufffd\ufffd_^k&)\ufffd\u0002!\ufffd\u001a~\ufffdX\ufffd\u000b\u0010\ufffd\ufffdhsP\ufffd.y\ufffd\ufffd\ufffd'.\ufffd\ufffd\ufffdog*\ufffd\u0010\ufffd\ufffd\ufffd\ufffdK\ufffd\ufffd6\ufffd\ufffdP.\ufffd\ufffd\u001ei\ufffd0Rd\ufffd\u001e\ufffd\u001a\ufffd\u001bO\ufffdj\ufffd\ufffd\n%\ufffd\ufffd\u000f\ufffd\ufffd\u0252\ufffdT\ufffdaN\u001cTb\ufffd\ufffd0\ufffd\ufffdA\ufffd\ufffdY\ufffd\ufffdC\u0018z\ufffdyA\ufffd4\u0007K\ufffd\ufffdO\ufffd]\ufffd\ufffd\ufffd\ufffd}\u0019\ufffd\ufffd/\ufffdR=\ufffd\ufffd\r\ufffd\ufffd\ufffd\ufffd23\ufffd\ufffd H\u001c}\ufffd\ufffd\u000e\ufffd\u0013Z\ufffd\u0006\ufffd\ufffd\u0014\ufffdo\ufffd\ufffd,\ufffd\n?E#\ufffd\ufffd\u0019\ufffd!\ufffd\ufffd\u0003\ufffd\ufffd9\ufffd\ufffd[R\u0002k\ufffdV\ufffd\ufffdB\u0631V,\u028a!\ufffd>;\ufffd\ufffd\u001b\ufffdC\ufffd\ufffd%O\ufffd\ufffdu\ufffd\u001e\ufffd+\ufffd\ufffdK:\ufffdvh_6\ufffdM1\ufffdGo\u05d3\ufffd:\ufffd\ufffd8Z\ufffd\ufffdX\ufffd\ufffd{\ufffdu\ufffd`N\ufffdI\u001d\ufffd\ufffd\ufffd\ufffd\ufffd7wd}W\ufffd\ufffd\ufffd\ufffd\u0011\ufffd\ufffdF\ufffdNj\u0013A\u0018\u0011\u0017\ufffd\ufffd\n\ufffd\ufffdu\ufffdDR\ufffd\ufffd\u000b\ufffd\ufffd\u0001\ufffd\u0019l\ufffd\ufffd\u00efg\u001e>)\ufffd\ufffd\u0732\ufffde\ufffd\ufffd\ufffd\u000b\ufffd\u06de\ufffd\u065a4\ufffda\u0019\ufffd\ufffdV\u000e\\\ufffd\ufffd\ufffd\b&\ufffd\ufffd\ufffd\u0005\u0015\ufffdH\ufffd?\ufffd9\u0010\u001f0\u0000\u0000\u0002u\u0001\ufffd\ufffdtB\ufffd\u0000\u0000\u0003\u0000\u0002|(\u001b\ufffd4\ufffd\ufffd~\ufffd#\u000b%k\ufffd\u0012\ufffdi\u0015'\ufffd\ufffd\ufffdb\ufffd?`R\u007fmg^a\ufffd\ufffdBZB\ufffd\ufffd9\ufffd\u0000\ufffdO\ufffd\ufffdD\ufffdw\u0006\ufffdu\ufffd\ufffd,\ufffdi\ufffd\u001c{\"\f*\ufffd\n\ufffd\u001d\ufffd\ufffd2\ufffd\ufffd\ufffd\u000fA2\ufffd\u0004e:<G\ufffdo\u0000\u0006\u001b\ufffd\ufffdw\ufffdb\u04c4'\ufffd\ufffd\ufffd\ufffdz\u0018\f\ufffd@XA\ufffd\ufffdy\ufffd\ufffd$r\ufffd\ufffd|C\ufffd\f\ufffd\ufffd\ufffd\u0001\ufffd\u0012\ufffd\ufffdH\ufffd\u00bbP\u00127\ufffdJ\ufffdCW\ufffdy\u00e5\ufffd\ufffd\ufffd\ufffd~\ufffd\ufffdi\ufffd2$\u001d\r\ufffd|\ufffd\ufffd\ufffd\ufffdo9\ufffd\ufffd\ufffdij\ufffdz8\ufffdy\ufffd\ufffdf\ufffd\ufffds\ufffd\ufffd>\ufffd\ufffd\ufffd\u007f\ufffd\ufffd\u0011\ufffd\u0016\ufffd=ihA\"Fs\ufffd\ufffd\ufffdS\ufffd\ufffd}3q\ufffd\ufffd\ufffd\ufffd\u0007\ufffd!]7.\ufffd\u012c\f\ufffdo\ufffd\ufffd0\ufffds\ufffd\ufffd\ufffdO\ufffd\u95a6\ufffd`{\ufffd\ufffd\ufffd\uda4a\udca2\r\ufffd\ufffdot\ufffd\t\ufffdd\ufffd\u001ef\ufffdl\ufffd\ufffd\ufffdk\ufffdH4\u001a\ufffd9t{\ufffd'\ufffd\ufffd\ufffd\u0012\u0019\ufffd\u0017\ufffd>\ufffd[{y\ufffd\ufffd\u0004\ufffdW\ufffd\ufffdO\ufffd\u0000\u055b\ufffd\ufffd\"a\ufffd\ufffd\ufffd\ufffd\ufffdh\ufffd6\ufffd\u00a4D\ufffd@\ufffd+\u0495\u0012Y\u0005m\n\ufffd\u0015bw\ufffdi^27BH![\ufffd\ufffd\ufffd\ufffdO2\u0017\ufffd\ufffd\u0017\u0010\ufffd\ufffdR\nv\u001fgE&\ufffd\u001co\ufffdh\ufffdNj\ufffd\ufffds\ufffd\u0010_c\u0010{W\ufffd7\ufffd\u0003\ufffd\ufffd\ufffd\ufffd_\ufffd\ufffd\ufffd\t\ufffd~\ufffd\ufffd]\ufffd\ufffd\ufffd\ufffd\u001a\u0017+\u0000\ufffd\u000b\ufffd}?/\ufffd\ufffd\u00179)h6X8)\ufffd2\u03b0\ufffdl`\ufffd\ufffdHP\ufffd8X\ufffd\u03f1/\ufffdZ,\ufffdX9\ufffd\ufffdjVC\ufffd\ufffd\u0018>\ufffd\u038d\ufffd\ufffd\ufffdr\ufffde\f\ufffd\ufffd\u0011\ufffd\ufffd*\"Z\ufffd+\ufffdT\ufffd\ufffd\ufffd\ufffde\"\ufffd\u001e\u03d4\u0002\r\ufffdA;\ufffd_\u0006\u040e\ufffd%\u0010\ufffd\u0151\ufffd\ufffd\u001c\ufffd\u001a\ufffd\ufffd\r\ufffd2\ufffd\u0471YT5\u0015\ufffd8$\u001d\ufffde\ufffd\ufffd\ufffd\u019bqu\u001c\ufffd\ufffd\ufffd\ufffd\ufffdEiso\tX\ufffd#\ufffd]0$$\u04ael\ufffd\ufffd$\ufffd\"\ufffdB\u007fR\ufffdd\ufffd\ufffd8\u0000&\ufffdS0\ufffd\ufffdw\ufffd\ufffd\ufffd\ufffdP\n\u001c\u0017C\ufffd\ufffd\ufffd\ufffdS\u0018\ufffd\ufffda0g\ufffd\ufffd\tED8Y[#nx\u0007\u001d\u0000\u0000\u0002J\u0001\ufffd\ufffdjB\ufffd\u0000\u0000\u0003\u0000\u0002|E,\ufffd%q\ufffd\ufffdY9R\ufffd.\u0014\ufffd\u0000\u0006\ufffd.1\ufffdi\r\ufffd\ufffdOt\u001fz\u0005\u0006\u001e\ufffd\ufffd}0\ufffd\ufffd\u0006f/\u0425W_\ufffd\ufffd\ufffd;@\ufffd$\ufffdM\ufffd\ufffd\ufffd\u0011#\ufffd\ufffdug\u0003\u007fEI6\u0012\ufffdd\ufffd8\ufffd\ufffd\ufffdB\u046e\f\ufffd\ufffd\ufffdXMB\ufffd \ufffd&\ufffd\ufffd\ufffd\u04cf&\ufffd\u001e-\u0003F=6\ufffd~\u0011\n\ufffd\ufffd\ufffdPD\ufffd7\ufffdP\ufffd\ufffd\ufffd\ufffd@\ufffd\ufffd\u014f\u0004\ufffdKi\ufffd\ufffd3M]R\"c\ufffdN\f\ufffd\u0017g\ufffdNm\ufffd\u03e8\ufffd5\u0010\ufffd\u0357\ufffd\u0524\ufffd=\ufffd\ufffd}\ufffdwdDb\ufffd\ufffd\ufffd\ufffd\u001f\ufffd%\ufffd\ufffd\ufffdx\u0007\ufffd\ufffdw\ufffd-\ufffdXO|`\ufffd\ufffd\ufffd\ufffd@kP\u001b\ufffdG\ufffdf\u0356g\ufffdJ\ufffd*\ufffd\ufffd9h+X\u0012\ufffd\ufffd\ufffd\u001f\ufffd].\ufffdr.\ufffd\u0004\u026ePf\ufffd\u001c\ufffd\u037e?\ufffd\u0011\ufffdlK\ufffd$)\ufffd\ufffd\r\ufffd\u0013k\ufffd\foFA)Q_<\ufffd\ue531\fd\r\ufffd\\Y\ufffd\ufffdS+\ufffd\ufffd\ufffd\ufffd\ufffdV\ufffd\ufffd[q\ufffd\"? 0wW\u0015\ufffd\ufffd@\u0015`\ufffd\ufffd\u001b5\u0015\u007f\ufffd\u0015L\ufffd\rR\u0004t\ufffd\ufffd\ufffd\ufffd?M7\ufffd\ufffdg\ufffd\ufffdp\ufffd*\u07d7\ufffd\ufffd>\ufffd\u0016\ufffd\ufffd\u0014\ufffd\u0002\u001dP \ufffdu\u0014\ufffd\ufffd\u0000|\u0013\ufffd\ufffdLk3yS\ufffd(q\ufffd#(4\ufffd7\ufffd\ufffd\ufffd\ufffdT\ufffd\ufffd^\ufffd8\u01c8\b\ufffd\u001e\ufffdT\ufffd\u0000\u0000\ufffd\u06f3\u0406\ufffd-\ufffdf\ufffd\ufffdh?\ufffdy\ufffdq\\\u2e28\u001f(\u0004U\ufffd\u0010\n\u0011V\ufffd[l\u0775\ufffd\u0000z#]w\ufffd@\ufffd\u02cc:\ufffd\ufffd\u0007\u001dn\u000eJ\b\ufffd\ufffd+M\ufffd\ufffd\ufffd_Pz1Q\ufffds\udb19\udc29\ufffd\t8\ufffd\ufffd\ufffd\ufffd\u0015J\ufffd\ufffd\ufffdX.,9\ufffdJ\ufffdJ\ufffd\ufffd|\ufffd>\ufffd\ufffd\ufffdg&\u001a\ufffd\ufffd7D\\\u001f\ufffd\u001c\ufffdy$ XL\u0015\ufffd\u000f\ufffdm\ufffd\u001c?\ufffd(\u0335,\u000f \u0001\u0006:*\ufffd\ufffd1Q\ufffd.\u0010\u00034(O\ufffdu\ufffd\ufffd\ufffd\u001d\b\ufffd\ufffdrd\u0002:\ufffd>\ufffd\ufffd\ufffd\ufffdj~\ufffd/\u007f\ufffdI\ufffd\u0000\ufffd\u0000U\ufffd\u0000\u0000\u0006EA\ufffd\ufffdI\ufffdAl\ufffdL\b_\ufffd\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0000\f\u0000\ufffd\ufffd\ba9B\ufffdr\ufffd\u001bA0l\u001e\ufffd\ufffd\ufffd\u0005\ufffd\ufffd\u000fZ:P\ufffd\ufffd;XC\u001d\ufffd\ufffd\ufffdE\ufffd\u0002U\ufffd\ufffd\u000b_\n\ufffd\ufffd4\f\ufffd1o}\ufffd\\Io\ufffdVv\ufffdea\u05f2\ufffdYQ\ufffd:\u05445\ufffd\ufffd`\ufffd[\ufffd\u0012f\ufffd+q\ufffd\ufffd\u001ck\u0005\ufffd\u0012\ufffd\ufffdM\ufffd\ufffd-u\ufffd\ufffdmc\ufffdc\ufffd\ufffd\ufffd\ufffdw\ufffd\u0010\ufffd#, ?\ufffd\ufffd\u001d+\ufffdQB\ufffd\u0225\ufffd\ufffd\ufffdt\u001aZ\ufffd\ufffd?\ufffd\ufffdK\ufffd\ufffd c\u0014~\u001c\ufffdk\r\ufffd\ufffd\ufffd\ufffdb\u0011$\n\ufffdR\ufffd+\ufffd{~<.\ufffd!\ufffd!:\ufffd\ufffd\u0011\ufffdm\ufffd?a\ufffdQr\u000e\ufffd\ufffd6\ufffd\ufffd\ufffdYy'M\ufffdxK*\ufffd\u073d\ufffdE\u0366\u0161\ufffd\ufffd\ufffd9@v\b}S\ufffd\ufffd\ufffd?XG\ufffd9%\f}\ufffd\u065c\ufffd\ufffd\u0000\"\ufffd\ufffd\ufffd\ufffd\u0785Vk\u0002\ufffd8B5\ufffdw\u0015\ufffdb~\ufffd\u001b3\u000b\ufffd\ufffds\ufffd)\ufffd!\u061c|g\ufffd\u0007Tp\ufffd\ufffdF%\ufffd\ufffd\ufffdVRp_q\b!G~\u001c\u0018z\u0688_\ufffd\ufffd)}\u0006\ufffd\ufffd\ufffds\ufffd\ufffdG\ufffd\ufffd\ufffd\ufffd\u0018\ufffdY?\ufffd\u007f\ufffd\ufffd\ufffd\ufffd\n@n\ufffdw\ufffd>q\ufffd\u001e\ufffdb\ufffd\u0010r\ufffd<f\ufffd\ufffdI\ufffd\u0018\ufffd\ufffd\ufffd\u000b\ufffdk\ufffdD,\ufffd\ufffdM\ufffd\ufffdF\ufffd\u0006\ufffd\ufffdmi\ufffd\ufffd\ufffd2[\ufffd\ufffd\ufffd\ufffdwr\ufffd\".\ufffd\ufffd~\ufffdw\ufffd\ufffd\ufffd\ufffd\b\ufffdXXJ\ufffd\u0004f\ufffd\ufffdp4J\".|\ufffd+\u054d\u05cd\ufffde\ufffd2!\ufffd\ufffd\ufffd\ufffd\u000e)8D\ufffd\ufffdr/9\ufffd\u0013\ufffd3(Q\nh\ufffd\u0012>d\ufffd8\ufffd\ufffd\u0004Z\ufffd\r\ufffd\ufffd\ufffd\u0517\u0429]9vh\ufffdr\u0451\ufffd7\ufffdm%\ufffdN\ufffd\ufffd\ufffdz\ufffd-\n\ufffd\ufffds\ufffd]\u001aq\ufffd\ufffde\ufffd\\03\u06e4F*z\ufffd-\u0016\ufffd\ufffd'\ufffd\ufffd\ufffd\ufffd\ufffd]\u007fm\ufffd\ufffd\ufffdM\u0013\u0011\ufffdpl\ufffd\ufffd\u001d\nQ\ufffd\u000e\ufffd\ufffdq\ufffd\ufffdP\ufffd\ufffdNz\ufffd\u0004\u000e\u000b\u037110\ufffd\ufffd\ufffde\ufffd\u0012\ufffd\u001f\ufffd\ufffd$\u04dc\ufffd\u0351\ufffd\ufffdr\ufffdU>l<\ufffd\ufffd\t\ufffdO\u0012q\u001eE\ufffd\ufffd\u001b\ufffd\u0080 \ufffd\u0019\ufffd\ufffd#\u000bF\u02c3\ufffdK\ufffd@$?\ufffd\ufffd\u01241\ufffd\ufffd1?\ufffd+jK\ufffd\u000b\ufffd\ufffd+VE\ufffd\ufffd\ufffd|y\ufffd\ufffd\ufffdX\ufffd\u0019?\ufffd\u001b\u0014S\u0018\u0017\r#\ufffd\ufffdY\ufffd\u001c6\ufffdx\ufffd\ufffdmP=\ufffd\ufffd\u0017J\ufffd\u057a\ufffdP\ufffd\ufffdV\ufffd\ufffd\ufffd\u0003\u001a\ufffd\f\ufffd\u0017`f\ufffd\ufffdM\nc\ufffdI*(\ufffd\ufffd\ufffd\ufffdo\ufffd\ufffd\ufffd6#\ufffd}\ufffd\ufffd\ufffd\ufffd\ufffd\u0012.7)\u001f\ufffd\ufffdk\ufffd\u00002\ufffd\ufffd\ufffd/^\u001a\ufffdP)\f\ufffd_\ufffdZ|\ufffd\u001c\ufffd\ufffdB,<\u023f\u0014\ufffdi=\u0013NV\ufffd+\u001b\ufffd\bC*A\ufffdb\ufffdS7\ufffd\"\u0005\ufffd\u01b2K\u001e\ufffdx2\ufffd|\u000b\ufffd\ufffd:\ufffdk\ufffd\u001f\ufffd\ufffd\u0000fct\ufffd\ufffd\ufffd\ufffd\ufffd\u0019O\r\ufffdf\u063d`\ufffd\u0019^'\ufffdZ\u0019\ufffd\u0002\ufffd\u0003G\u001br(\ufffd=n\ufffd#\ufffd.\ufffd\ufffd\u000e9\ufffd\ufffd\ufffd\"\ufffd8\ufffd\ufffdk\u001b\ufffd\ufffdN\ufffd#{\ufffd\u0006\u001d\ufffd\u00030\ufffd\ufffd\ufffd\u049d4\u001f9\ufffd\ufffd\u0003\ufffd\u001a0\ufffd\ufffd\bw\ufffd\ufffd\u0011\ufffdY\ufffd_Ty\ufffd}N\ufffd\ufffd1\u0004&-\ufffd+\ufffd\ufffd\ufffd\u001b,\ufffd\u000e\ufffd\u009eZt\ufffd%\ufffd\ufffd\ufffd\rk\ufffd\ufffd\u000bP\ufffd\ufffd\u001c\ufffd\u0011\ufffd\u001c\ufffd\u0018=2\u0019r\ufffd\ufffd\ufffdp!+\ufffd~\ufffd\ufffd\u000e\ufffd9A\ufffd-=\u0004b\ufffd\ufffd '\ufffds\ufffd$\ufffdl\ufffdy\ufffd\ufffd\ufffd\ufffdcU:YM\ufffd$d\ufffd\ufffd\u001f\ufffdu\u0003_m\ufffd\ufffd\u007f\ufffd\ufffd\ufffd{\ufffd\u001348\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdj\ufffd\ufffd@\u03fe\ufffd+\ufffd\u0000\ufffde\u0010\ufffd\u0004\ufffds\ufffd\ufffd\ufffd@\ufffd\ufffd\u06eci\u0007\u001f\u0012\ufffd\fq\ufffdJ>j\ufffd+(\ufffd4\ufffd(\ufffd\ufffd\u02e4\ufffd\ufffd\u000fl\ufffd\ufffd\u001f\u037c)\ufffd%*\ufffd\\\u007f1\ufffdK\ufffdj\ufffd\u0005\ufffd\ufffd\ufffdhH\ufffd\ufffd\ufffd\"7\ufffd\fCzh\u0004\u0012\ufffd\ufffd\ufffd\ufffdx\ufffd4\ufffd\ufffd\ufffd\u0017\ufffd\u001d\u0006}b\ufffdQ:T\ufffd\ufffd;@\"\u001b\ufffd\u000ep\ufffd!\ufffdre\u062dy\u0000\ufffd\u0603\u000fD\ufffdo\ufffdZ'VdJ]i\ufffd?Ne\ufffd\u0014\ufffd\rf\ufffdzC\u001e\ufffd\ufffdr\ufffdt\u0001\ufffd\rj\ufffd\ufffd\ufffde\ufffd\ufffd\ufffd\ufffd\ufffd\ufffdqR\u0001\ufffd='^\ufffd3\r\ufffd[\ufffd\ufffd\ufffd\u0004k\ufffd\ufffd\ufffdUU\ufffdKy\u0012^\b\u0137F\ufffd\u0010'\ufffd?\ufffd\ufffd\ufffd|{\ufffdI\ufffd!\ufffd\ufffd\ufffd15\ufffdB\ufffd\u065e\tKm\ufffd\ufffd\u000e\ufffd#\ufffd\u0013\ufffdr\u0013\ufffdy\u0003\ufffd\ufffd\ufffd\ufffd\ufffdg\ufffd\ufffd\ufffdQ\ufffd\ufffd%b\ufffdV\u05c1\u0010\ufffdQ\ufffd3\ufffdW\ufffdR\u0011\ufffd-\u001a\ufffd\u0015\ufffd\ufffd\ufffd\ufffdZ\ufffd\ufffd\ufffdA\ufffd\ufffd\ufffd\ufffd\u001c\u00102\u07462\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd2\ufffd\u0001\ufffdW\u001c|0\ufffd\ufffdS\ufffd5\ufffd\u0004\ufffd\u0006RAlZzf\ufffd\ufffd?\ufffd\u0011\ufffd>\ufffd\ufffd\ufffd~bf\ufffd\u0016W\u8c6f\ufffdGhD\ufffd\ufffds\ufffdy?\u001f 92\u000e\ufffd\ufffdo\u0500S!\u001a\u0003\u000f\ufffdo\ufffd+W\u0017w\u07f7\ufffd\u0006\u0497\ufffd\ufffdk\ufffdB~\ufffd\ufffd\rW\n)\u000e\u0015q\u0011\u0002i96\ufffdm\ufffd\ufffdEE\ufffd\ufffd3'|\u0112i\ufffd;**\u0007\u000fw\ufffde\ufffd\f\ufffd\ufffd9\ufffd\ufffd\u001f\ufffdT\ufffdt?\ufffd\ufffd\ufffd\n\ufffd#\ufffd\u000f\ufffd\ufffd\ufffd\u001b(\ufffd\u068e\f\ufffdfe\ufffd2\ufffd<\ufffdWaW\ufffd\ufffd\u0007g\ufffd\ufffd&\ufffd%\t\ufffd\u0002m\u07fdR\ufffd$\ufffdpO$\u0003\ufffd\ufffd\ufffd\u0005&N\ufffd\u05fb\u001c\ufffd\bn|B\u001a+@>^ \u0007\ufffd\u01ac=\ufffd\ufffd\u001e\u0006\ufffd\u001f\u0010\ufffd|\ufffdE\ufffdf\u0149\ufffd\ufffd\u001f\ufffdS\ufffd{5\ufffd\ufffd\u0014}\ufffd\ufffdG\ufffdG\ufffd\ufffd\ufffd\u0495\ufffd\ufffdd\ufffd\u0016\u02fc\ufffdt\ufffd\ufffd0\ufffdP\ufffd\ufffdVr\ufffd\ufffd\ufffd~\ufffd\r5K^\ufffd\u029b\ufffd\ufffd\ufffd\u0000\u0000\u0003\u0018A\ufffd\ufffdE\u0015,+\ufffd\u0000\u0000\u0003\u0000\u0002}\u058d\ufffd\ufffd\f\ufffdyx\ufffd\u0010j\ufffd\u0699>\ufffd\ufffdX\u03c3e\u0000\r\u001a\ufffd\u0000\u0000\u000bm\u0007\u001e)\ufffd\u00007\ufffd\n\ufffd\ufffdLb\n.\ufffd\u0013\ufffd\ufffdd\ufffd\ufffd\ufffdd{\ufffd#}\n\ufffd\ufffdv\ufffd@\ufffd\ufffdUD\ufffdt\u000f\ufffd\ufffd\u0000\u0000:\t\ufffd\u0004w2n\u001cf\u0006\ufffd\ufffd\ufffdw!\ufffdj\ufffd\ufffd\ufffdD\ufffd\u000f@\ufffd}\ufffd\ufffd!!vU\ufffd>\ufffd?\ufffd\ufffdZ\ufffd\ufffd\b|\ufffd\u000f\ufffd\ufffd\u000b\ufffd!\ufffd\\\"vf7\ufffd\t\f1N\ufffd\u0308\u0017\u0010\ufffdCM\ufffd\u0290\ufffd\ufffd\ufffd\ufffd]\ufffdM\ufffd\ufffd\u000bX\ufffd-|u\ufffdU2\ufffd\ufffd\ufffd;\ufffd\ufffd\ufffdb*\u001d\ufffd\ufffd\ufffdxUd\ufffd4\ufffdu\ufffd\ufffd\ufffd6\ufffd\ufffd\\T\u0012\ufffd\ufffd\ufffd;\ufffd\ufffd\ufffd|\ufffdY\ufffdD\ufffd-0a (\u001f5\ufffdq}5m\ufffdE\u0012oU*\ufffd9V\u000bv\ufffd\u0007_:q\"\ufffd\u0416\ufffde\ufffd\ufffd1\ufffd%a\ufffd&\ufffd\ufffdZ`\ufffd'}\ufffdY\ufffd=\ufffd\ufffdZfM\u01a7\ufffd\ufffd-\ufffd\u235e*%\ufffd\ufffdb\ufffd\ufffd\ufffdX-\ufffd-nUv\ufffdVXY\ufffd;\ufffd\u0006N[\ufffd\ufffdu\ufffd\ufffd\ufffd8,\ufffdM\u01f0&\ufffd\ufffd\u0018\u0014B[\ufffdC'\u001a\u000f\ufffdkh@\ufffdJ\ufffdl\ufffd`\u001dp\ufffd 4O\n\ufffd\u0013\ufffd\ufffd\ufffdf2\ufffd9\ufffdz\ufffd\u0010}*Sx\ufffdzQ\u0007\u001b1\ufffd-?\u001d\ufffdC+{q3Yi\ufffd\ufffdW=\ufffd\u0007j\ufffdrY\u0428\u0017M1\tAeX\ufffd\u0016P\\?\ufffd[\nK\ufffdN\ufffd\ufffd`\ufffd\ufffd/]\u000f\u001d\ufffd\ufffd\u00be\ufffd\ufffdZAu\n\ufffd\ufffd\ufffd\ufffd\u00c0=\ufffdz\u001d\u0010G$\u0173$\ufffd4_\ufffdn\ufffd2\ufffd\ufffdB\ufffd\u0016\u001d\u0013\ufffd\u0015z\u0012\ufffd\ufffd\ufffdl\u03d2\ufffd\u000f\ufffd~E]U\ufffdD\ufffdYD\ufffd\ufffd#\ufffd*\u0016\ufffd\ufffdg\ufffd\u0012s\f94u}(\ufffd\u02cbK\ufffdw\ufffd\ufffd\ufffd\ufffd;\ufffdphy\u00060<3q\ufffdl\ufffd\ufffdO\ufffdH\ufffd\ufffdo-\ufffd9,\ufffd\u01f5\ufffd\ufffd\ufffd.\u000b\ufffd\nf\ufffd!\ufffd\ufffd\ufffdJ\ufffd\ufffdi\u001a\ufffd8:\ufffd\ufffd\ufffd*\ufffd\ufffd\ufffd\ufffdn\ufffd53\u0013Ne\tn\ufffd\u0151\ufffdo\ufffdY\u0016\u001d`\u0003\ufffd;:e\u000f\u001d\ufffdp}\nwYM\ufffd\ufffd\ufffdS\ufffd\ufffd\ufffd[\u0007.\ufffd6a}\ufffd\u0004\ufffd\u001e\ufffd\ufffd~\u05fd\ufffd\ufffd\u001f)\ufffd\ufffd/\u046d\ufffd\ufffd\ufffd\ufffdS\u07ba\ufffdS?\ufffdt\ufffd\ufffd\u0016\ufffd\ufffd\u001eG\ufffd\ufffd$C\ufffdI\ufffd\ufffd\u0644%?\ufffd?\u0545h\ufffd\ufffd\u0019\ufffd\ufffd\u0015\ufffdn\ufffdN\ufffd\u007f\u5e12y\ufffd\u0000b0\ufffdA\ufffd{\ufffd\u001b\ufffd{\ufffd\u0018\ufffd\u0013\ufffdp\ufffdU\ufffd\ufffdt2\ufffd\ufffd\ufffd\u0001F\ufffd\ufffd\ufffd\u000b\ufffd- \ufffd\ufffd\ufffd\ufffdv\ufffd\ufffd2}s\ufffd\t\u0001\ufffd_\ufffdD<?\ufffd\r6\ufffd\ufffd\ufffd iQ\ufffd\ufffd&\u0012\ufffd\ufffd_\ufffd}Q\ufffd\ufffd\ufffd\uf547\ufffdN\ufffd\r\ufffd\ufffd{\ufffd+ \u001e\ufffd\u007f\ufffd\u0007u\u0000\u0000\u0002{\u0001\ufffd\ufffdjB\ufffd\u0000\u0000\u0003\u0000\u0002k_\ufffd!\ufffd\ufffd\ufffd\ufffdL*\ufffd\ufffd\u0012R\ufffd\ufffd\ufffd.\ufffd\u0000\u0000\ufffd\u001c\ufffd\ufffd\u05481Y\ufffd\ufffd\ufffd\u0016y\ufffd/g\u07da\ufffd\u0510v\ufffd\u0001x@\u001a\ufffd\ufffd\ufffdq\ufffd\ufffd[\ufffd\ufffd\u000b\ufffd\u007fPNYaLB\u001d]\ufffdE\ufffd\u001e\ufffd#9`C7\u0005M\ufffd\u001e\ufffd\ufffd\u0193\ufffdO(\ufffd\u0001\ufffd\ufffd\ufffd\u0000S&\ufffd\ufffd_L{s\ufffd\ufffd\ufffds\ufffd\ufffd\u001c\ufffdf\u00031O\ufffd\ufffd\u0424\ufffdoZ\ufffdW\ufffd\ufffd6\ufffd'\ufffd\ufffd\u00e5z\ufffd\ufffd\ufffdd\ufffd_~\ufffd\ufffd\ufffd\ufffdL\ufffd\ufffd&\u0003\ufffdH\u0010\ufffdF\ufffdno\ufffd\ufffd\u001ff\u0002F\n\u03df:]\ufffd\ufffdA\ufffd\bV\ufffdY\ufffd%'\ufffd\ufffdLI\ufffdg\ufffdv\ufffd&+\ufffd\ufffdf)\u0018\u0006sr\ufffd\u001c\u0007p\u0007\ufffd\ufffd\u0010\ufffd\ufffd\u0018\ufffd\u001f\u031e}3\ufffdK\ufffdK+0N\ufffd,\ufffd\ufffd\ufffd\n\ufffd\ufffdb\ufffdO\u0001\ufffd\u0006c\ufffd\ufffd\ufffd\ufffd\u0019.\ufffd\u0014f-\u038f\ufffd\u0003\u04c5e\t\u001e\u0110\ufffd\ufffd\ufffdl\ufffd8\ufffd\ufffd\ufffdT\ufffd\ufffd\u49b5\u04b5\ufffd\u001a\u007f\u0001\ufffd\t\ufffd5\\\ufffd\ufffd\u0000\ufffd\ufffd\ufffd\ufffdP:\ufffd\ufffd^\ufffdbTGh\ufffdC/H\u0010y`\ufffd\u0356\u0016\ufffd\ufffdP0\ufffd\ufffd\u0001\"x\u0004\ufffdU\ufffd\ufffd\u007f\ufffdv\u0400\ufffd\ufffdI\ufffds\ufffdE\u0492\ufffd7\u001f\ufffd\u00030*\ufffd\ufffdh\ufffd?\ufffd\ufffd\ufffd;C\u0016\ufffd\ufffd\ufffd\f\ufffdi\ufffd\\?\ufffd\ufffd\ufffdu\u027c\u0012a\ufffd0s\ufffd\ufffdH\u000e-\ufffdQ\ufffd\ufffd\u04e7p\u0006\ufffdU&\ufffd\ufffd\ufffdp\ufffdn\ufffd\ufffd\u0003\ufffd\u01d655SG\ufffd\\\ufffd&F\ufffd\ufffd\u0017+\u0727\ufffd\ufffd1\ufffd\ufffd&\ufffd:5S\ufffdU\ufffd\ufffd\u0014Y\ufffd\u0014\u032e\ufffd\u0684\ufffd\ufffd\ufffdKi\ufffd\ufffd\ufffd\n\u0001v>\ufffd\r\u0016 ^\ufffdQB\ufffd\"\ufffd\ufffd\ufffd\ufffd\ufffd\u00d9\u0010=\u0010T\ufffdD\nlj05\ufffd\ufffd\ufffdH\r\ufffdb\ufffd\ufffd\u0017\ufffd\u001a9[M\ufffd.\ufffd547\ufffdq\ufffd09r'c\u001caZ&\ufffdl\u04ceF\u0011\u009c\u0011e\u0006Th.\ufffd\ufffd,\ufffd\ufffdx\b>\u000f\ufffd\ufffdK\ufffd\ufffda\u007f\ufffd\ufffdG&\u0002\u0011\ufffd&\ufffd@\ufffd\ufffdQ\ufffd\r\ufffd\u001f`\ufffd)\ufffdc\ufffdF\ufffd*\ufffd~\ufffd\ufffd\u0018=\ufdee\ufffdn\ufffd0\ufffdH\n\ufffd`N~\f\u0017\ufffdYA]A\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd`\ufffd\u0003\ufffd\"\ufffdn\u0000\ufffd\ufffd\u0000\u0000\u0003\ufffdA\ufffd\ufffdI\ufffdAl\ufffdL\bW\ufffd\ufffd8@\u0000\u0000\u0003\u0000\u000e\u001f}@\u0005\u007f\u0393\ufffdRlX\u0000kv\b\ufffd\ufffdgX5I\u0007\ufffd\ufffdo\ufffd\u0011B~-&\ufffd\ufffd\u0013\ufffdD-fl\u001f*\ufffd\ufffd1\ufffdQ@,\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u0017d}\ufffd)\ufffd\ufffd-\ufffde(|\ufffd\u0013+a8\ufffd\ufffd*F\ufffd\ufffd>u\ufffd\ufffd\u0013X-\ufffd\ufffdh7y\ufffdE\ufffd\ufffd \f\ufffd#i\ufffd\u0005;%7,\ufffdbA\ufffd\ufffdW\ufffd\u0190Fcs\u0002\u001b\u07f8\ufffd\ufffd\ufffd\u0012\u0007\u0015\ufffdy\\\u0135D\ufffdtm`9\ufffd`\ufffdM\ufffd{\u0017\n\u0432\u0001N\u0016M\ufffd='\u0003/!\u0006\t\ufffd\nX>\ufffd\ufffd\ufffd\ufffd\ufffd\u000f\ufffd\ufffdO\u0658\ufffd\ufffd\ufffd0\ufffd\"V\u0016Y\f\ufffd\ufffd,P\ufffdn\ufffd6\u001c\ufffd\u0014\ufffd:>\f\u0019\u0019\ufffd\ufffdMp\ufffd)9E6\ufffd\u000f\u001a~\ufffd\ufffd\"\ufffd\ufffd\ufffd\ufffd\u001b\ufffd\ufffd?\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd]\ufffdl\ufffd3\u007fz\ufffd\u00a6p\ufffd(z\ufffd\u001f\ufffdyy@\ufffd\ufffd'\ufffd\ufffdP\ufffd\ufffd\ufffdjT\ufffd,iC\ufffd\ufffd\u050a\u0005P\u0013\ufffd^\u0012!t\ufffd\ufffd\ufffd\ufffd5La\u000bt\ufffd,|\ufffd'q\u0007\ufffd|\u001c\ufffdT\ufffd8bKu\ufffd7\ufffda\ufffd\t\ufffd\u0019\u0011$\ufffd\ufffd\u0005B7\ufffd.\u001bnq\ufffd~\ufffd3\ufffd+#8\ufffd\ufffd\ufffd\u0013V\ufffd\ufffdT\ufffdj*\u021clh\ufffd\r\ufffd\u0013O\ufffd;\u0019(\ufffd\ufffd\ufffd;\ufffdV\u0013\ufffd\u000e\ufffd\u0019\u001c\u001fS\ufffdK46\ufffdYM\ufffd\u0016')\ufffd\ufffd\ufffd\ufffd\u0007Q\ufffd^\ufffd\ufffdr\ufffd\u001b>\u0430\u001c^\ufffd\ufffd\ufffd\ufffd[\ufffd\ufffd\ufffd\ufffd;\ufffd\t6\ufffdK@\u0003\\\ufffd\ufffd_E\u007f\u0012\ufffd\ufffd^[\ufffd5]P\b\ufffd\ufffdgR\ufffd!x\ufffd\u0007]\ufffdY\ufffd\ufffd\ufffd\u0000d%\u03f9$\ufffd\u0002\u0000\ufffd$\ufffd\ufffd\u0014\ufffdx\ufffd\u0011\ufffdl\ufffd\ufffd=\ufffd\u0004\ufffd\u0001t\ufffd\ufffd5\ufffd\u001bN\ufffd\ufffd)\"\ufffd\ufffd\ufffd#\u001f\ufffd\ufffd\u0015u\u0004\f\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\u000e\ufffdl\u07b5\ufffd\ufffdf\ufffdv\ufffd?2\u001b\u0715Gk\ufffd\ufffd+\ufffdp\ufffd\u050egRI\u0005\ufffd\u001bz\ufffd7Rw\u0005W\ufffd:\ufffdg\ufffd\u001er\u0010t\ufffd\u0013\ufffdLe\ufffd$\ufffd\u0003\u0016\ufffd\ufffd\u000f\b\ufffd\ufffdK\ufffd\u06eas-\ufffd\ufffdP\ufffd#\ufffd\f_9\ufffd>m\ufffd\u0005E3L`\u3613zG{\n\ufffdh\u0012P\ufffdL\ufffd)\\_u\u0016\ufffdD\u051a\ufffdL&E\ufffd=\ufffd\ufffdC\ufffdA\u0011\ufffd\ufffd_\ufffd\u0000\ufffdp4\u001a\ufffd\ufffd\ufffd\u000f\ufffd\u001c\ufffd\u000bzF\ufffd*\ufffd\ufffd\ufffdc\ufffd?\ufffdC<\ufffd\ufffde>\ufffd\ufffdg\ufffdP\ufffd|\u0006>\ufffd\ufffd0\u0012\ufffd\u0000\ufffd\ufffdN\u0014|\ufffd\ufffd\ufffd\ufffd\u001e?S+\ufffd0\ufffd\u0000\ufffd\u001b\ufffd\ufffd\u0013\ufffdO\ufffd\ufffd_\u0002\ufffdF\ufffd;\ufffd\ufffd'\ufffd\ufffd\u001c\ufffd\ufffd\f\u0019\u0012\ufffd2s0}\ufffd\ufffd;\ufffd\u0004k`m\ufffd]n\ufffdpF\ufffdxBg\ufffd\ufffd\u0017\ufffdCz\ufffd\ufffdYn\ufffd\ufffd\u0010b\u0003BE\ufffd\ufffd\ufffd\ufffd\ufffdzj\ufffd\ufffdo\ufffd\ufffd4s\ufffd\ufffd\ufffd\u0000\ufffdBd7\ufffd\u0015\ufffdi\ufffd\u0019\ufffd\ufffd\ufffd\ufffd\u0018\ufffd\ufffd\ufffd}\ufffda\ufffd\ufffd$\ufffd\u000e\ufffd\u00af\ufffd.\u0001f\ufffd\ufffd~\u0005\ufffdAZ\ufffd\ufffd\u07b1Vh\u0001\ufffd\ufffdE\u000fu\ufffd~\ufffd\u0012\ufffdsC\u0017p8dg(Ak\ufffda?\u0004\"<\ufffd\ufffd_\u0006\u0007\ufffdN\ufffd\ufffd].<\ufffd\ufffd\u0006\ufffd\u0212%U\ufffd\ufffdn\ufffdi\ufffdF\u0016I\u070f\u0016\ufffd\ufffd\ufffdj\ufffd\ufffd\u0018sC~8\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd\ufffd^\u001b\u0007!\ufffd\ufffda\ufffdH\u070aOfx%i\ufffd\ufffd_\ufffd\ufffd\ufffd\ufffd\u37ba\ufffdQ\u0479\ufffd<?\ufffd\u0006\u0012\ufffd\ufffdR\ufffd\ufffd\ufffd+eD\ufffd\ufffd7\ufffd.\u000e[\u0013\ufffdq\u0015\u0470\ufffd\ufffd_mvU#\ufffd\ufffd\u0006\ufffd\ufffd#\u0000\u0000\u0004\ufffdmoov\u0000\u0000\u0000lmvhd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0003\ufffd\u0000\u0000\u0006@\u0000\u0001\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0003\ufffdtrak\u0000\u0000\u0000\\tkhd\u0000\u0000\u0000\u0003\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0006@\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000@\u0000\u0000\u0000\u0002\ufffd\u0000\u0000\u0002\ufffd\u0000\u0000\u0000\u0000\u0000$edts\u0000\u0000\u0000\u001celst\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006@\u0000\u0000\u0004\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0003tmdia\u0000\u0000\u0000 mdhd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u00002\u0000\u0000\u0000P\u0000U\ufffd\u0000\u0000\u0000\u0000\u0000-hdlr\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000vide\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000VideoHandler\u0000\u0000\u0000\u0003\u001fminf\u0000\u0000\u0000\u0014vmhd\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000$dinf\u0000\u0000\u0000\u001cdref\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\furl \u0000\u0000\u0000\u0001\u0000\u0000\u0002\ufffdstbl\u0000\u0000\u0000\ufffdstsd\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\ufffdavc1\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0002\ufffd\u0002\ufffd\u0000H\u0000\u0000\u0000H\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0018\ufffd\ufffd\u0000\u0000\u00001avcC\u0001d\u0000\u001f\ufffd\ufffd\u0000\u0018gd\u0000\u001f\ufffd\ufffd@\ufffd\u0016\ufffd@\u0000\u0000\u0003\u0000@\u0000\u0000\f\ufffd\ufffd\fe\ufffd\u0001\u0000\u0006h\ufffd\ufffd\ufffd\"\ufffd\u0000\u0000\u0000\u0018stts\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0014stss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u00010ctts\u0000\u0000\u0000\u0000\u0000\u0000\u0000$\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\u0000\n\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0006\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\n\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\n\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\n\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\n\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\b\u0000\u0000\u0000\u0000\u0002\u0000\u0000\u0002\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0004\u0000\u0000\u0000\u0000\u001cstsc\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000(\u0000\u0000\u0000\u0001\u0000\u0000\u0000\ufffdstsz\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000(\u0000\u0000#\ufffd\u0000\u0000\b\ufffd\u0000\u0000\u0002\ufffd\u0000\u0000\u0001\ufffd\u0000\u0000\u0002V\u0000\u0000\u0006\u001b\u0000\u0000\u0001\ufffd\u0000\u0000\u0005\ufffd\u0000\u0000\u0001\ufffd\u0000\u0000\u0006\b\u0000\u0000\u0001\ufffd\u0000\u0000\u0007\ufffd\u0000\u0000\u0002\ufffd\u0000\u0000\u0002\u000f\u0000\u0000\f\u0017\u0000\u0000\u0003\ufffd\u0000\u0000\u0002\u0004\u0000\u0000\u0002\ufffd\u0000\u0000\b\ufffd\u0000\u0000\u0004g\u0000\u0000\u0003q\u0000\u0000\u0002\ufffd\u0000\u0000\u0007\ufffd\u0000\u0000\u0003*\u0000\u0000\u0002\ufffd\u0000\u0000\u0007\ufffd\u0000\u0000\u0002\ufffd\u0000\u0000\u0002\u0016\u0000\u0000\u0006\ufffd\u0000\u0000\u0002\ufffd\u0000\u0000\u0001\ufffd\u0000\u0000\u0002\u001f\u0000\u0000\u0007N\u0000\u0000\u0003\ufffd\u0000\u0000\u0002y\u0000\u0000\u0002N\u0000\u0000\u0006I\u0000\u0000\u0003\u001c\u0000\u0000\u0002\u007f\u0000\u0000\u0003\ufffd\u0000\u0000\u0000\u0014stco\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0000\u0000\u00000\u0000\u0000\u0000budta\u0000\u0000\u0000Zmeta\u0000\u0000\u0000\u0000\u0000\u0000\u0000!hdlr\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000mdirappl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000-ilst\u0000\u0000\u0000%\ufffdtoo\u0000\u0000\u0000\u001ddata\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0000Lavf58.29.100"
        },
        {
            "name": "store.js",
            "size": 648,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/redux/store.js",
            "path": "client/src/redux/store.js",
            "content": "import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport userReducer from './user/userSlice';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst rootReducer = combineReducers({ user: userReducer });\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  version: 1,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\n\nexport const persistor = persistStore(store);\n"
        },
        {
            "name": "userSlice.js",
            "size": 2026,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/redux/user/userSlice.js",
            "path": "client/src/redux/user/userSlice.js",
            "content": "import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  currentUser: null,\n  error: null,\n  loading: false,\n  profile: false,\n  organisation: null,\n};\n\nconst userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    signInStart: (state) => {\n      state.loading = true;\n    },\n    signInSuccess: (state, action) => {\n      state.currentUser = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    signInFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    updateUserStart: (state) => {\n      state.loading = true;\n    },\n    updateUserSuccess: (state, action) => {\n      state.currentUser = action.payload;\n      state.loading = false;\n      state.error = null;\n    },\n    updateUserFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    deleteUserStart: (state) => {\n      state.loading = true;\n    },\n    deleteUserSuccess: (state) => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = null;\n    },\n    deleteUserFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    signOutUserStart: (state) => {\n      state.loading = true;\n    },\n    signOutUserSuccess: (state) => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = null;\n    },\n    signOutUserFailure: (state, action) => {\n      state.error = action.payload;\n      state.loading = false;\n    },\n    build: (state, action) => {\n      state.profile = action.payload;\n    },\n    org: (state, action) => {\n      state.organisation = action.payload;\n    }\n  },\n});\n\nexport const {\n  signInStart,\n  signInSuccess,\n  signInFailure,\n  updateUserFailure,\n  updateUserSuccess,\n  updateUserStart,\n  deleteUserFailure,\n  deleteUserSuccess,\n  deleteUserStart,\n  signOutUserFailure,\n  signOutUserSuccess,\n  signOutUserStart,\n  build,\n  org,\n\n} = userSlice.actions;\n\nexport default userSlice.reducer;\n"
        },
        {
            "name": "url.jsx",
            "size": 69,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/src/url.jsx",
            "path": "client/src/url.jsx",
            "content": "const url='https://campusnest-w2wf.onrender.com';\nexport default url;"
        },
        {
            "name": "vite.config.js",
            "size": 297,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/vite.config.js",
            "path": "client/vite.config.js",
            "content": "import { defineConfig } from 'vite';\nimport react from '@vitejs/plugin-react-swc';\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  server: {\n    proxy: {\n      '/api': {\n        target: 'http://localhost:3000',\n        secure: false,\n      },\n    },\n  },\n\n  plugins: [react()],\n});\n"
        },
        {
            "name": "tailwind.config.js",
            "size": 238,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/client/tailwind.config.js",
            "path": "client/tailwind.config.js",
            "content": "/** @type {import('tailwindcss').Config} */\nexport default {\n  content:[\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n    ],\n  theme: {\n    extend: {},\n  },\n  plugins: [\n    require('@tailwindcss/line-clamp'),\n    // ...\n  ],\n};\n"
        },
        {
            "name": "package.json",
            "size": 921,
            "html_url": "https://github.com/ashishchauhan0001/CampusNest/blob/main/package.json",
            "path": "package.json",
            "content": "{\n  \"name\": \"mern-estate\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"nodemon api/index.js\",\n    \"start\": \"node api/index.js\",\n    \"build\": \"npm install && npm install --prefix client && npm run build --prefix client\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"@emotion/react\": \"^11.13.3\",\n    \"@emotion/styled\": \"^11.13.0\",\n    \"@mui/material\": \"^6.1.6\",\n    \"@mui/x-charts\": \"^7.22.2\",\n    \"bcrypt\": \"^5.1.1\",\n    \"bcryptjs\": \"^2.4.3\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.4.5\",\n    \"express\": \"^4.21.0\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^7.8.2\",\n    \"navigation\": \"^6.2.0\",\n    \"nodemon\": \"^3.1.7\",\n    \"punycode\": \"^2.3.1\",\n    \"razorpay\": \"^2.9.5\",\n    \"react-material-ui-carousel\": \"^3.4.2\",\n    \"react-toastify\": \"^10.0.6\",\n    \"swiper\": \"^11.1.14\"\n  }\n}\n"
        }
    ],
    "dependencies": {
        "client/package.json": "{\n  \"name\": \"client\",\n  \"private\": true,\n  \"version\": \"0.0.0\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"lint\": \"eslint . --ext js,jsx --report-unused-disable-directives --max-warnings 0\",\n    \"preview\": \"vite preview\"\n  },\n  \"dependencies\": {\n    \"@emotion/react\": \"^11.13.3\",\n    \"@emotion/styled\": \"^11.13.0\",\n    \"@mui/material\": \"^6.1.7\",\n    \"@mui/styled-engine-sc\": \"^6.1.7\",\n    \"@mui/x-charts\": \"^7.22.2\",\n    \"@reduxjs/toolkit\": \"^1.9.7\",\n    \"axios\": \"^1.7.7\",\n    \"firebase\": \"^10.14.0\",\n    \"framer-motion\": \"^11.11.17\",\n    \"mern-estate\": \"file:..\",\n    \"razorpay\": \"^2.9.5\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-hot-toast\": \"^2.4.1\",\n    \"react-icons\": \"^4.12.0\",\n    \"react-leaflet\": \"^4.2.1\",\n    \"react-material-ui-carousel\": \"^3.4.2\",\n    \"react-persist\": \"^1.0.2\",\n    \"react-redux\": \"^8.1.3\",\n    \"react-router-dom\": \"^6.26.2\",\n    \"react-simple-typewriter\": \"^5.0.1\",\n    \"redux-persist\": \"^6.0.0\",\n    \"styled-components\": \"^6.1.13\",\n    \"swiper\": \"^10.3.1\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/line-clamp\": \"^0.4.4\",\n    \"@types/react\": \"^18.2.15\",\n    \"@types/react-dom\": \"^18.2.7\",\n    \"@vitejs/plugin-react-swc\": \"^3.3.2\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"eslint\": \"^8.45.0\",\n    \"eslint-plugin-react\": \"^7.32.2\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.3\",\n    \"postcss\": \"^8.4.47\",\n    \"tailwindcss\": \"^3.4.13\",\n    \"vite\": \"^4.4.5\"\n  }\n}\n",
        "package.json": "{\n  \"name\": \"mern-estate\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"nodemon api/index.js\",\n    \"start\": \"node api/index.js\",\n    \"build\": \"npm install && npm install --prefix client && npm run build --prefix client\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"dependencies\": {\n    \"@emotion/react\": \"^11.13.3\",\n    \"@emotion/styled\": \"^11.13.0\",\n    \"@mui/material\": \"^6.1.6\",\n    \"@mui/x-charts\": \"^7.22.2\",\n    \"bcrypt\": \"^5.1.1\",\n    \"bcryptjs\": \"^2.4.3\",\n    \"cookie-parser\": \"^1.4.6\",\n    \"cors\": \"^2.8.5\",\n    \"dotenv\": \"^16.4.5\",\n    \"express\": \"^4.21.0\",\n    \"jsonwebtoken\": \"^9.0.2\",\n    \"mongoose\": \"^7.8.2\",\n    \"navigation\": \"^6.2.0\",\n    \"nodemon\": \"^3.1.7\",\n    \"punycode\": \"^2.3.1\",\n    \"razorpay\": \"^2.9.5\",\n    \"react-material-ui-carousel\": \"^3.4.2\",\n    \"react-toastify\": \"^10.0.6\",\n    \"swiper\": \"^11.1.14\"\n  }\n}\n"
    }
}
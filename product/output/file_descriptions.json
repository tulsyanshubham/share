{
    "api/services/review.dart": "Handles business logic for adding and retrieving reviews.",
    "api/services/review.repository.dart": "Handles data access and persistence for reviews.",
    "api/controllers/tenant.controller.js": "This file does not need splitting and remains unchanged.",
    "api/controllers/vendor.creations.js": "Handles vendor creation, update, and deletion operations.",
    "api/controllers/vendor.queries.js": "Provides query-based operations for vendors, such as getting a single vendor or listing vendors.",
    "services/requests/create_request.py": "Handles creating new requests.",
    "services/requests/get_request.py": "Retrieves existing requests.",
    "services/requests/update_request_status.py": "Updates the status of a request.",
    "services/auth/user_management.py": "Handles user creation, deletion, and updates.",
    "services/auth/authentication.py": "Manages user authentication, including signin, signup, and token validation.",
    "services/razorpay/payment_handler.py": "Handles payment creation and management.",
    "services/razorpay/signature_verification.py": "Validates Razorpay payment signatures and handles verification.",
    "api/models/user.model.js": "This file remains unchanged and is not necessary to split.",
    "api/controllers/user.crud.py": "Handles CRUD operations for user profiles.",
    "api/services/auth/user_auth.py": "Handles user authentication and session management.",
    "api/controllers/listing:create.js": "Handles creating new listings.",
    "api/controllers/listing:delete.js": "Handles deleting existing listings.",
    "api/controllers/listing:update.js": "Handles updating existing listings.",
    "api/controllers/listing:get.js": "Handles retrieving single listing requests.",
    "api/controllers/listing:getListings.js": "Handles retrieving list of listings.",
    "api/models/tenant.model.js": "This file does not need splitting and remains unchanged.",
    "api/models/virtual/model/object.js": "Handles the definition and validation of object types.",
    "api/models/virtual/model/requests.js": "Defines and validates request objects for API endpoints.",
    "api/schemas/listing.schema.js": "Defines the schema for the `Listing` model.",
    "api/services/listing.service.js": "Provides a service layer for interacting with the `Listing` model.",
    "api/models/review.model.js": "This file does not need splitting and remains unchanged.",
    "api/routes/listing/CREATE_listing.py": "Handles creating new listings.",
    "api/routes/listing/UPDATE_listing.py": "Updates existing listings.",
    "api/routes/listing/DELETE_listing.py": "Handles deleting listings.",
    "api/routes/listing/GET_listing.py": "Retrieves a single listing.",
    "api/routes/listing/GET_listings.py": "Retrieves a list of listings.",
    "api/app.py": "The main application logic and configuration.",
    "api/routes/auth.py": "Handles authentication-related routes.",
    "api/routes/user.py": "Manages user-related routes.",
    "api/routes/listing.py": "Handles listing-related routes.",
    "api/routes/vendor.py": "Handles vendor-related routes.",
    "api/models/model.py": "Contains the database models for this application.",
    "api/routes/reviews/api.js": "Handles API endpoints for reviews, including adding and retrieving reviews.",
    "api/routes/reviews/webhooks.js": "Manages webhooks for review-related events, such as when a review is added or updated.",
    "api/routes/tenant.route.js": "This file does not need splitting and remains unchanged.",
    "services/auth/token_handler.py": "Handles JWT token generation and validation for user authentication.",
    "services/user/user_endpoint.py": "Manages user-related API endpoints, including get, post, put, and delete operations.",
    "api/services/requests/controller.py": "Handles business logic for requests, including CRUD operations.",
    "api/routes/requests/rest_api.py": "Determines the RESTful API routing for the requests service.",
    "services/auth/auth.route.js": "Defines authentication routes for the application.",
    "services/auth/auth.controller.js": "Handles business logic for authentication, including user registration and signin.",
    "services/auth/session_handler.js": "Handles user session management.",
    "services/auth/token_handler.js": "Manages JWT token generation and validation.",
    "api/controllers/vendor/api.routers.py": "Handles API request routing and vendor operations.",
    "api/controllers/vendor/authentication.routers.py": "Handles authentication-related APIs for vendors.",
    "services/error-handling.js": "Provides error handling functionality for the application.",
    "client/index.html": "This file is an HTML template for the application's user interface and remains unchanged.",
    "client/src/components/Header.jsx": "Handles the app's header component.",
    "client/src/components/Footer.jsx": "Manages the app's footer component.",
    "client/src/routes/LandingRoute.jsx": "Handles the app's landing route.",
    "client/src/pages/SignedInRoute.jsx": "Handles the app's signed-in route.",
    "services/comment/comment_form_service.py": "Handles the logic for creating and handling comments.",
    "components/forms/textarea_input.py": "A reusable text area input component for forms.",
    "services/sessions/session_handler.py": "Manages user sessions, such as storing and retrieving user data.",
    "client/.eslintrc.cjs": "This file does not need splitting and remains unchanged.",
    "client/assets/config/postcss.config.py": "Configures PostCSS for the client-side assets.",
    "client/src/components/Footer/logo.jsx": "Contains brand name and logo JSX components.",
    "client/src/components/Footer/navbar.jsx": "Defines navigation links and their styling.",
    "client/src/components/Footer/socialLinks.jsx": "Generates social media links with icons.",
    "client/src/components/Footer/contactInfo.jsx": "Provides contact information and its styling.",
    "client/package.json": "This file does not need splitting and remains unchanged.",
    "client/src/components/Loader.jsx": "This file does not need splitting and remains unchanged.",
    "services/auth/private_route_handler.py": "Handles private route logic for authenticating and redirecting users.",
    "client/src/components/Card.layout.jsx": "Handles the layout and styling of the Card component.",
    "client/src/components/Card.data.jsx": "Manages the data fetching and processing for the Card component.",
    "components/about/slider/slider.jsx": "Contains reusable Slider component for About section.",
    "components/about/cards/card_container.jsx": "Manages card layout and container for About section.",
    "components/about/cards/card.jsx": "Represents individual card component for About section, handling data and layout.",
    "client/src/components/components/LandlordContactInfo.jsx": "Displays landlord contact information such as name, phone number, email, and address.",
    "client/src/components/components/LandlordContactForm.jsx": "Handles the form input and sends an email to the landlord using the entered message.",
    "client/src/components/map/renderer.py": "Renders the Map Search component with markers and popup windows.",
    "client/src/services/map/map_services.py": "Provides services for interacting with the map, including marker clicks and navigation.",
    "client/src/components/map/search_results.py": "Handles search results and navigation to search results pages.",
    "client/src/components/PaymentButton.jsx": "This file does not need splitting and remains unchanged.",
    "client/src/services/oauth/googleAuth.py": "Handles Google OAuth authentication and session management.",
    "client/src/services/oauth/tokenHandler.py": "Generates and validates JWT tokens for authenticated users.",
    "client/src/components/SearchBar.css": "This file does not need splitting and remains unchanged.",
    "client/src/graphql.js": "Handles GraphQL API setup and connection.",
    "client/src/index.js": "Initializes the main app setup, including Redux provider and ReactDOM.render.",
    "client/src/services/chart/data_loader.py": "Loads and processes chart data from API responses.",
    "client/src/services/chart/chart_renderer.py": "Renders chart visualizations using the pre-processed data.",
    "client/src/services/chart/graph_utils.py": "Provides utility functions for graph manipulation and calculations.",
    "client/src/components/search/SearchBarComponent.jsx": "This file contains the main logic for rendering the search bar component.",
    "client/src/components/search/SearchBar.css": "This file contains CSS styles for the search bar component.",
    "client/src/components/map/constants.js": "Contains global constants for the map component.",
    "client/src/components/map/mapContainer.js": "Handles the rendering of the map container and its child components.",
    "client/src/components/map/marker.js": "Defines the marker icon and its behavior for the map.",
    "client/src/index.css": "This file defines global styles for the application and does not require splitting.",
    "client/src/components/Card.jsx": "A reusable React component for rendering listing information.",
    "client/src/services/search/search.service.js": "Provides search functionality and manages API calls for listing data.",
    "components/forms/SignInForm.jsx": "Handles form validation and submission.",
    "components/SignInComponent.jsx": "Renders the sign-in page with reusable components.",
    "services/auth/signInService.js": "Provides business logic for sign-in functionality, including authentication and session management.",
    "client/src/pages/LandMain.jsx": "Main entry point for the Land page, responsible for rendering the page's layout.",
    "client/src/components/LandComponents.jsx": "Contains reusable components used throughout the Land page, including the swiper, typewriter, and navigation.",
    "client/src/pages/search.css": "This file does not need splitting and remains unchanged.",
    "services/firebase/firebase_config.py": "This file contains the Firebase configuration settings.",
    "services/firebase/firebase_init.py": "This file initializes the Firebase app and exports the app instance and storage references.",
    "client/src/pages/profile.css": "This file does not need splitting and remains unchanged.",
    "client/src/components/AboutSection.jsx": "Contains the About section component with the title and description.",
    "client/src/components/MissionStatement.jsx": "Handles the display of the mission statement section.",
    "client/src/components/WhyChooseUs.jsx": "Contains the Why Choose Us section with the icons and text.",
    "client/src/services/PropertyDetailsService.js": "Handles fetching and caching property details.",
    "client/src/components/PropertyCard.js": "Renders the property card with images and details.",
    "client/src/services/BookingService.js": "Manages booking requests and communicates with the server.",
    "client/src/pages/property.css": "This file does not need splitting and remains unchanged.",
    "client/src/pages/userDash/side.css": "This file is responsible for defining the styles for the Dashboard component.",
    "features/user/sidebar/sidebar_links.py": "Handles the list of links for the user's dashboard",
    "features/user/sidebar/sidebar_renderer.py": "Renders the user's dashboard sidebar",
    "client/src/services/auth/BuildProfileAuth.js": "Authenticates users and manages build profiles.",
    "client/src/components/BuildProfileForm.js": "Handles form input and submission for building tenant profiles.",
    "client/src/services/image/AadhaarUpload.js": "Manages uploading and storing aadhaar images.",
    "services/data/fetch_properties.py": "Handles data fetching for properties list.",
    "components/properties_list.py": "Renders a list of properties with their details.",
    "components/profile_handler.py": "Handles profile-related operations, such as fetching and updating profile data.",
    "client/src/components/UserData.js": "Handles user data fetching and processing",
    "client/src/components/VendorData.js": "Fetches and displays vendor listing data",
    "client/src/components/CommentHandler.js": "Handles comments and their updates",
    "client/src/pages/userDash/Loader.js": "Displays a loading message while data is being fetched",
    "client/src/pages/components.css": "This file contains a collection of CSS styles for UI components",
    "client/src/pages/vendor/Dash.css": "This file does not need splitting and remains unchanged.",
    "client/src/services/api/tenant_api.py": "Handles API calls to fetch tenant data and update tenant status.",
    "client/src/components/TenantList.py": "Displays a list of tenants and provides functionality for handling click events.",
    "client/src/components/TenantStatus.py": "Displays the status of a tenant (accepted or rejected) and provides functionality for updating the status.",
    "client/src/pages/vendor/Dash.jsx": "This file does not need splitting and remains unchanged.",
    "client/src/url.jsx": "This file does not need splitting and remains unchanged.",
    "client/vite.config.js": "This file does not need splitting and remains unchanged.",
    "client/tailwind.config.js": "This file does not need splitting and remains unchanged.",
    "package.json": "This file does not need splitting and remains unchanged.",
    "services/auth/user_auth.py": "Handles user authentication and session management.",
    "services/user/user_manager.py": "Manages user profiles, organizations, and profile building.",
    "client/src/pages/vendor/showlist.css": "This file contains CSS styles for a showlist component.",
    "client/src/redux/store.js": "This file does not need splitting and remains unchanged.",
    "client/src/pages/video.mp4": "This file does not need splitting and serves as a multimedia resource in the application."
}